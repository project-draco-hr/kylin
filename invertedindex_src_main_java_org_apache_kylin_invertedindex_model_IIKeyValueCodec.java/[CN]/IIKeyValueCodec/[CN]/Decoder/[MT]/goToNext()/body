{
  if (slice != null) {
    return;
  }
  while (slice == null && iterator.hasNext()) {
    IIRow kv=iterator.next();
    ImmutableBytesWritable k=kv.getKey();
    ImmutableBytesWritable v=kv.getValue();
    decodeKey(k);
    final Dictionary<?> dictionary=deserialize(kv.getDictionary());
    addContainer(curCol,new CompressedValueContainer(dictionary.getSizeOfId(),(dictionary.getMaxId() - dictionary.getMinId() + 1),(dictionary.getMaxId() - dictionary.getMinId() + 1)));
    byte[] bytes=new byte[dictionary.getSizeOfValue()];
    ImmutableBytesWritable buffer=new ImmutableBytesWritable(bytes);
    for (int i=dictionary.getMinId(); i <= dictionary.getMaxId(); ++i) {
      final int length=dictionary.getValueBytesFromId(i,bytes,0);
      buffer.set(bytes,0,length);
      containers[curCol].append(buffer);
    }
    localDictionaries.put(curCol,dictionary);
    if (curShard != lastShard || curSliceTimestamp != lastSliceTimestamp) {
      makeNext();
    }
    consumeCurrent(v);
  }
  if (slice == null) {
    makeNext();
  }
}

{
  initDictInfo(newDict,newDictInfo);
  if (KylinConfig.getInstanceFromEnv().isGrowingDictEnabled()) {
    DictionaryInfo largestDictInfo=findLargestDictInfo(newDictInfo);
    if (largestDictInfo != null) {
      largestDictInfo=getDictionaryInfo(largestDictInfo.getResourcePath());
      Dictionary<?> largestDictObject=largestDictInfo.getDictionaryObject();
      if (largestDictObject.contains(newDict)) {
        logger.info("dictionary content " + newDict + ", is contained by  dictionary at "+ largestDictInfo.getResourcePath());
        return largestDictInfo;
      }
 else       if (newDict.contains(largestDictObject)) {
        logger.info("dictionary content " + newDict + " is by far the largest, save it");
        return saveNewDict(newDictInfo);
      }
 else {
        logger.info("merge dict and save...");
        return mergeDictionary(Lists.newArrayList(newDictInfo,largestDictInfo));
      }
    }
 else {
      logger.info("first dict of this column, save it directly");
      return saveNewDict(newDictInfo);
    }
  }
 else {
    logger.info("Growing dict is not enabled");
    String dupDict=checkDupByContent(newDictInfo,newDict);
    if (dupDict != null) {
      logger.info("Identical dictionary content, reuse existing dictionary at " + dupDict);
      return getDictionaryInfo(dupDict);
    }
    return saveNewDict(newDictInfo);
  }
}

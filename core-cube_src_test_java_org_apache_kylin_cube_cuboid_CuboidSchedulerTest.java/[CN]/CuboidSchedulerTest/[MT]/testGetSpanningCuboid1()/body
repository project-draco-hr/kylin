{
  CubeDesc cube=getTestKylinCubeWithoutSeller();
  CuboidScheduler scheduler=new CuboidScheduler(cube);
  long quiz=toLong("01100111");
  try {
    testSpanningAndGetParent(scheduler,cube,new long[]{quiz});
    fail();
  }
 catch (  IllegalStateException ex) {
  }
  System.out.println("Spanning for 7D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{255});
  System.out.println("Spanning for 6D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{135,251,253,254});
  System.out.println("Spanning for 5D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{131,133,134,249,250,252});
  System.out.println("Spanning for 4D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{129,130,132,248});
  System.out.println("Spanning for 3D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{184,240});
  System.out.println("Spanning for 2D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{176,224});
  System.out.println("Spanning for 1D Cuboids");
  testSpanningAndGetParent(scheduler,cube,new long[]{160,192});
}

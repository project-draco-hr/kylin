{
  Options options=new Options();
  try {
    options.addOption(OPTION_INPUT_PATH);
    options.addOption(OPTION_OUTPUT_PATH);
    options.addOption(OPTION_FORMAT);
    options.addOption(OPTION_INPUT_DELIM);
    parseOptions(options,args);
    String jobName=JOB_TITLE + getOptionsAsString();
    System.out.println("Starting: " + jobName);
    Configuration conf=getConf();
    job=Job.getInstance(conf,jobName);
    if (jarPath == null || !new File(jarPath).exists()) {
      job.setJarByClass(getClass());
    }
 else {
      job.setJar(jarPath);
    }
    FileInputFormat.setInputDirRecursive(job,true);
    addInputDirs(getOptionValue(OPTION_INPUT_PATH),job);
    Path output=new Path(getOptionValue(OPTION_OUTPUT_PATH));
    FileOutputFormat.setOutputPath(job,output);
    job.getConfiguration().set("dfs.block.size","67108864");
    String format=getOptionValue(OPTION_FORMAT);
    @SuppressWarnings("rawtypes") Class cformat=getFormat(format);
    String delim=getOptionValue(OPTION_INPUT_DELIM);
    if (delim != null) {
      if (delim.equals("t")) {
        delim="\t";
      }
 else       if (delim.equals("177")) {
        delim="\177";
      }
      job.getConfiguration().set(KEY_INPUT_DELIM,delim);
    }
    job.setInputFormatClass(cformat);
    job.setMapperClass(ColumnCardinalityMapper.class);
    job.setMapOutputKeyClass(IntWritable.class);
    job.setMapOutputValueClass(BytesWritable.class);
    job.setReducerClass(ColumnCardinalityReducer.class);
    job.setOutputFormatClass(TextOutputFormat.class);
    job.setOutputKeyClass(IntWritable.class);
    job.setOutputValueClass(LongWritable.class);
    job.setNumReduceTasks(1);
    this.deletePath(job.getConfiguration(),output);
    int result=waitForCompletion(job);
    return result;
  }
 catch (  Exception e) {
    printUsage(options);
    e.printStackTrace(System.err);
    log.error(e.getLocalizedMessage(),e);
    return 2;
  }
}

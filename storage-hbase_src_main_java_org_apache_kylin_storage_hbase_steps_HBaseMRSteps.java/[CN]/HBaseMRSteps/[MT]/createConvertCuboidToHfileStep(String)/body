{
  String cuboidRootPath=getCuboidRootPath(jobId);
  String inputPath=cuboidRootPath + (cuboidRootPath.endsWith("/") ? "" : "/") + "*";
  MapReduceExecutable createHFilesStep=new MapReduceExecutable();
  createHFilesStep.setName(ExecutableConstants.STEP_NAME_CONVERT_CUBOID_TO_HFILE);
  StringBuilder cmd=new StringBuilder();
  appendMapReduceParameters(cmd);
  appendExecCmdParameters(cmd,BatchConstants.ARG_CUBE_NAME,seg.getRealization().getName());
  appendExecCmdParameters(cmd,BatchConstants.ARG_PARTITION,getRowkeyDistributionOutputPath(jobId) + "/part-r-00000_hfile");
  appendExecCmdParameters(cmd,BatchConstants.ARG_INPUT,inputPath);
  appendExecCmdParameters(cmd,BatchConstants.ARG_OUTPUT,getHFilePath(jobId));
  appendExecCmdParameters(cmd,BatchConstants.ARG_HTABLE_NAME,seg.getStorageLocationIdentifier());
  appendExecCmdParameters(cmd,BatchConstants.ARG_JOB_NAME,"Kylin_HFile_Generator_" + seg.getRealization().getName() + "_Step");
  createHFilesStep.setMapReduceParams(cmd.toString());
  createHFilesStep.setMapReduceJobClass(CubeHFileJob.class);
  createHFilesStep.setCounterSaveAs(",," + CubingJob.CUBE_SIZE_BYTES);
  return createHFilesStep;
}

{
  this.createTestMetadata();
  this.cube=CubeManager.getInstance(getTestConfig()).getCube("test_kylin_cube_ii");
  this.tableRecordInfo=new TableRecordInfo(cube.getFirstSegment());
  TblColRef formatName=this.cube.getDescriptor().findColumnRef("TEST_KYLIN_FACT","LSTG_FORMAT_NAME");
  TblColRef siteId=this.cube.getDescriptor().findColumnRef("TEST_KYLIN_FACT","LSTG_SITE_ID");
  Collection<TblColRef> dims=new HashSet<>();
  dims.add(formatName);
  projector=CoprocessorProjector.makeForEndpoint(tableRecordInfo,dims);
  aggregators=EndpointAggregators.fromFunctions(tableRecordInfo,buildAggregations());
  CompareTupleFilter rawFilter=new CompareTupleFilter(TupleFilter.FilterOperatorEnum.EQ);
  rawFilter.addChild(new ColumnTupleFilter(siteId));
  rawFilter.addChild(new ConstantTupleFilter("0"));
  filter=CoprocessorFilter.fromFilter(this.cube.getFirstSegment(),rawFilter);
  aggCache=new EndpointAggregationCache(aggregators);
  tableData=mockTable();
}

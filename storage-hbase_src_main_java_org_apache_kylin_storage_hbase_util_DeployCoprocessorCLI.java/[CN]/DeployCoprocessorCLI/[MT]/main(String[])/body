{
  if (args == null || args.length <= 1) {
    printUsageAndExit();
  }
  KylinConfig kylinConfig=KylinConfig.getInstanceFromEnv();
  Configuration hconf=HBaseConnection.getCurrentHBaseConfiguration();
  FileSystem fileSystem=FileSystem.get(hconf);
  HBaseAdmin hbaseAdmin=new HBaseAdmin(hconf);
  String localCoprocessorJar;
  if ("default".equals(args[0])) {
    localCoprocessorJar=kylinConfig.getCoprocessorLocalJar();
  }
 else {
    localCoprocessorJar=new File(args[0]).getAbsolutePath();
  }
  logger.info("Identify coprocessor jar " + localCoprocessorJar);
  List<String> tableNames=getHTableNames(kylinConfig);
  logger.info("Identify tables " + tableNames);
  String filterType=args[1].toLowerCase();
  if (filterType.equals("-table")) {
    tableNames=filterByTables(tableNames,Arrays.asList(args).subList(2,args.length));
  }
 else   if (filterType.equals("-cube")) {
    tableNames=filterByCubes(tableNames,Arrays.asList(args).subList(2,args.length));
  }
 else   if (!filterType.equals("all")) {
    printUsageAndExit();
  }
  logger.info("Will execute tables " + tableNames);
  Set<String> oldJarPaths=getCoprocessorJarPaths(hbaseAdmin,tableNames);
  logger.info("Old coprocessor jar: " + oldJarPaths);
  Path hdfsCoprocessorJar=uploadCoprocessorJar(localCoprocessorJar,fileSystem,oldJarPaths);
  logger.info("New coprocessor jar: " + hdfsCoprocessorJar);
  resetCoprocessorOnHTables(hbaseAdmin,hdfsCoprocessorJar,tableNames);
  hbaseAdmin.close();
  logger.info("Processed tables count: " + processedTables.size());
  logger.info("Processed tables: " + processedTables);
  logger.info("Active coprocessor jar: " + hdfsCoprocessorJar);
}

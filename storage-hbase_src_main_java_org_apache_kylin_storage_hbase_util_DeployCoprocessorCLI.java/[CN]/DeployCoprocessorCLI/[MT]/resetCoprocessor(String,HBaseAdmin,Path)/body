{
  KylinConfig kylinConfig=KylinConfig.getInstanceFromEnv();
  HTableDescriptor desc=hbaseAdmin.getTableDescriptor(TableName.valueOf(tableName));
  String host=desc.getValue(IRealizationConstants.HTableTag);
  if (!host.equalsIgnoreCase(kylinConfig.getMetadataUrlPrefix())) {
    logger.warn("This server doesn't own this table: " + tableName);
    return false;
  }
  logger.info("reset coprocessor on " + tableName);
  logger.info("Disable " + tableName);
  hbaseAdmin.disableTable(tableName);
  while (desc.hasCoprocessor(CubeObserverClass)) {
    desc.removeCoprocessor(CubeObserverClass);
  }
  while (desc.hasCoprocessor(CubeEndpointClass)) {
    desc.removeCoprocessor(CubeEndpointClass);
  }
  while (desc.hasCoprocessor(IIEndpointClass)) {
    desc.removeCoprocessor(IIEndpointClass);
  }
  while (desc.hasCoprocessor(CubeObserverClassOld)) {
    desc.removeCoprocessor(CubeObserverClassOld);
  }
  while (desc.hasCoprocessor(IIEndpointClassOld)) {
    desc.removeCoprocessor(IIEndpointClassOld);
  }
  addCoprocessorOnHTable(desc,hdfsCoprocessorJar);
  String commitInfo=KylinVersion.getGitCommitInfo();
  if (!StringUtils.isEmpty(commitInfo)) {
    desc.setValue(IRealizationConstants.HTableGitTag,commitInfo);
  }
  hbaseAdmin.modifyTable(tableName,desc);
  logger.info("Enable " + tableName);
  hbaseAdmin.enableTable(tableName);
  return true;
}

{
  CubeManager cubeManager=CubeManager.getInstance(config);
  List<String> activeResourceList=Lists.newArrayList();
  for (  org.apache.kylin.cube.CubeInstance cube : cubeManager.listAllCubes()) {
    for (    org.apache.kylin.cube.CubeSegment segment : cube.getSegments()) {
      activeResourceList.addAll(segment.getSnapshotPaths());
      activeResourceList.addAll(segment.getDictionaryPaths());
    }
  }
  List<String> toDeleteResource=Lists.newArrayList();
  for (  String resourceRoot : new String[]{ResourceStore.SNAPSHOT_RESOURCE_ROOT}) {
    ArrayList<String> snapshotTables=getStore().listResources(resourceRoot);
    for (    String snapshotTable : snapshotTables) {
      ArrayList<String> snapshotNames=getStore().listResources(snapshotTable);
      if (snapshotNames != null)       for (      String snapshot : snapshotNames) {
        if (!activeResourceList.contains(snapshot)) {
          if (isOlderThanThreshold(getStore().getResourceTimestamp(snapshot)))           toDeleteResource.add(snapshot);
        }
      }
    }
  }
  ArrayList<String> dictTables=getStore().listResources(ResourceStore.DICT_RESOURCE_ROOT);
  for (  String table : dictTables) {
    ArrayList<String> tableColNames=getStore().listResources(table);
    if (tableColNames != null)     for (    String tableCol : tableColNames) {
      ArrayList<String> dictionaries=getStore().listResources(tableCol);
      if (dictionaries != null)       for (      String dict : dictionaries)       if (!activeResourceList.contains(dict)) {
        if (isOlderThanThreshold(getStore().getResourceTimestamp(dict)))         toDeleteResource.add(dict);
      }
    }
  }
  if (toDeleteResource.size() > 0) {
    logger.info("The following resources have no reference, will be cleaned from metadata store: \n");
    for (    String s : toDeleteResource) {
      logger.info(s);
      if (delete == true) {
        getStore().deleteResource(s);
      }
    }
  }
 else {
    logger.info("No resource to be cleaned up from metadata store;");
  }
}

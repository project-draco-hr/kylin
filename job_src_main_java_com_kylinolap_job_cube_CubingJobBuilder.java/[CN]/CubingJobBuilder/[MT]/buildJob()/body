{
  checkPreconditions();
  final int groupRowkeyColumnsCount=getCubeDesc().getRowkey().getNCuboidBuildLevels();
  final int totalRowkeyColumnsCount=getCubeDesc().getRowkey().getRowKeyColumns().length;
  CubingJob result=initialJob("BUILD");
  result.setNotifyList(((CubeSegment)segment).getCubeInstance().getDescriptor().getNotifyList());
  final String jobId=result.getId();
  final CubeJoinedFlatTableDesc intermediateTableDesc=new CubeJoinedFlatTableDesc(getCubeDesc(),(CubeSegment)this.segment);
  final String intermediateHiveTableName=getIntermediateHiveTableName(intermediateTableDesc,jobId);
  final String intermediateHiveTableLocation=getIntermediateHiveTableLocation(intermediateTableDesc,jobId);
  final String factDistinctColumnsPath=getFactDistinctColumnsPath(jobId);
  final String cuboidRootPath=getJobWorkingDir(jobId) + "/" + getCubeName()+ "/cuboid/";
  final String cuboidPath=cuboidRootPath + "*";
  final String[] cuboidOutputTempPath=getCuboidOutputPaths(cuboidRootPath,totalRowkeyColumnsCount,groupRowkeyColumnsCount);
  final AbstractExecutable intermediateHiveTableStep=createIntermediateHiveTableStep(intermediateTableDesc,jobId);
  result.addTask(intermediateHiveTableStep);
  result.addTask(createFactDistinctColumnsStep(intermediateHiveTableName,jobId));
  result.addTask(createBuildDictionaryStep(factDistinctColumnsPath));
  final MapReduceExecutable baseCuboidStep=createBaseCuboidStep(intermediateHiveTableLocation,cuboidOutputTempPath);
  result.addTask(baseCuboidStep);
  for (int i=1; i <= groupRowkeyColumnsCount; i++) {
    int dimNum=totalRowkeyColumnsCount - i;
    result.addTask(createNDimensionCuboidStep(cuboidOutputTempPath,dimNum,totalRowkeyColumnsCount));
  }
  result.addTask(createRangeRowkeyDistributionStep(cuboidPath));
  result.addTask(createCreateHTableStep());
  final MapReduceExecutable convertCuboidToHfileStep=createConvertCuboidToHfileStep(cuboidPath,jobId);
  result.addTask(convertCuboidToHfileStep);
  result.addTask(createBulkLoadStep(jobId));
  result.addTask(createUpdateCubeInfoStep(intermediateHiveTableStep.getId(),baseCuboidStep.getId(),convertCuboidToHfileStep.getId(),jobId));
  return result;
}

{
  int originalProjectCount=ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size();
  int originalCubeCount=CubeManager.getInstance(this.getTestConfig()).listAllCubes().size();
  int originalCubeCountInDefault=ProjectManager.getInstance(this.getTestConfig()).listAllRealizations("default").size();
  ResourceStore store=getStore();
  store.deleteResource("/cube/cube_in_alien_project.json");
  CubeDescManager cubeDescMgr=getCubeDescManager();
  CubeDesc desc=cubeDescMgr.getCubeDesc("test_kylin_cube_with_slr_desc");
  CubeInstance createdCube=CubeManager.getInstance(this.getTestConfig()).createCube("cube_in_alien_project","alien",desc,null);
  assertTrue(createdCube == CubeManager.getInstance(this.getTestConfig()).getCube("cube_in_alien_project"));
  assertTrue(ProjectManager.getInstance(getTestConfig()).listAllRealizations("alien").contains(createdCube));
  System.out.println(JsonUtil.writeValueAsIndentString(createdCube));
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size() == originalProjectCount + 1);
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllRealizations("ALIEN").get(0).getName().equalsIgnoreCase("CUBE_IN_ALIEN_PROJECT"));
  assertTrue(CubeManager.getInstance(this.getTestConfig()).listAllCubes().size() == originalCubeCount + 1);
  ProjectManager.getInstance(this.getTestConfig()).updateCubeToProject("cube_in_alien_project","default",null);
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllRealizations("ALIEN").size() == 0);
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllRealizations("default").size() == originalCubeCountInDefault + 1);
  assertTrue(ProjectManager.getInstance(getTestConfig()).listAllRealizations("default").contains(createdCube));
  ProjectManager.getInstance(this.getTestConfig()).updateCubeToProject("cube_in_alien_project","alien",null);
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllRealizations("ALIEN").size() == 1);
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllRealizations("default").size() == originalCubeCountInDefault);
  assertTrue(ProjectManager.getInstance(getTestConfig()).listAllRealizations("alien").contains(createdCube));
  CubeInstance droppedCube=CubeManager.getInstance(this.getTestConfig()).dropCube("cube_in_alien_project",true);
  assertTrue(createdCube == droppedCube);
  assertNull(CubeManager.getInstance(this.getTestConfig()).getCube("cube_in_alien_project"));
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size() == originalProjectCount + 1);
  assertTrue(CubeManager.getInstance(this.getTestConfig()).listAllCubes().size() == originalCubeCount);
  ProjectManager.getInstance(this.getTestConfig()).dropProject("alien");
  assertTrue(ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size() == originalProjectCount);
}

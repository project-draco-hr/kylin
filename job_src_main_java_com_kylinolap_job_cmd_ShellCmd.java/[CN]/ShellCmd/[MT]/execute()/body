{
  ExecutorService executor=Executors.newSingleThreadExecutor();
  future=new FutureTask<Integer>(new Callable<Integer>(){
    public Integer call() throws JobException {
      return executeCommand(executeCommand);
    }
  }
);
  executor.execute(future);
  int exitCode=-1;
  if (!isAsync) {
    try {
      exitCode=future.get();
      log.info("finish executing");
    }
 catch (    CancellationException e) {
      log.debug("Command is cancelled");
      exitCode=-2;
    }
catch (    Exception e) {
      throw new JobException("Error when exectute job " + executeCommand,e);
    }
 finally {
      if (exitCode == 0) {
        output.setStatus(JobStepStatusEnum.FINISHED);
      }
 else       if (exitCode == -2) {
        output.setStatus(JobStepStatusEnum.DISCARDED);
      }
 else {
        output.setStatus(JobStepStatusEnum.ERROR);
      }
      output.setExitCode(exitCode);
    }
  }
  return output;
}

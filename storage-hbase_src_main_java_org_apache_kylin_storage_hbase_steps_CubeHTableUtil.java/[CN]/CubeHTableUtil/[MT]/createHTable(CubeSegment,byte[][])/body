{
  String tableName=cubeSegment.getStorageLocationIdentifier();
  CubeInstance cubeInstance=cubeSegment.getCubeInstance();
  CubeDesc cubeDesc=cubeInstance.getDescriptor();
  KylinConfig kylinConfig=KylinConfig.getInstanceFromEnv();
  HTableDescriptor tableDesc=new HTableDescriptor(TableName.valueOf(cubeSegment.getStorageLocationIdentifier()));
  tableDesc.setValue(HTableDescriptor.SPLIT_POLICY,DisabledRegionSplitPolicy.class.getName());
  tableDesc.setValue(IRealizationConstants.HTableTag,kylinConfig.getMetadataUrlPrefix());
  tableDesc.setValue(IRealizationConstants.HTableCreationTime,String.valueOf(System.currentTimeMillis()));
  if (!StringUtils.isEmpty(kylinConfig.getKylinOwner())) {
    tableDesc.setValue(IRealizationConstants.HTableOwner,kylinConfig.getKylinOwner());
  }
  String commitInfo=KylinVersion.getGitCommitInfo();
  if (!StringUtils.isEmpty(commitInfo)) {
    tableDesc.setValue(IRealizationConstants.HTableGitTag,commitInfo);
  }
  tableDesc.setValue(IRealizationConstants.HTableUser,cubeInstance.getOwner());
  tableDesc.setValue(IRealizationConstants.HTableSegmentTag,cubeSegment.toString());
  Configuration conf=HBaseConnection.getCurrentHBaseConfiguration();
  HBaseAdmin admin=new HBaseAdmin(conf);
  try {
    if (User.isHBaseSecurityEnabled(conf)) {
      tableDesc.addCoprocessor("org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint");
    }
    for (    HBaseColumnFamilyDesc cfDesc : cubeDesc.getHbaseMapping().getColumnFamily()) {
      HColumnDescriptor cf=createColumnFamily(kylinConfig,cfDesc.getName(),cfDesc.isMemoryHungry());
      tableDesc.addFamily(cf);
    }
    if (admin.tableExists(tableName)) {
      throw new RuntimeException("HBase table " + tableName + " exists!");
    }
    DeployCoprocessorCLI.deployCoprocessor(tableDesc);
    admin.createTable(tableDesc,splitKeys);
    Preconditions.checkArgument(admin.isTableAvailable(tableName),"table " + tableName + " created, but is not available due to some reasons");
    logger.info("create hbase table " + tableName + " done.");
  }
  finally {
    admin.close();
  }
}

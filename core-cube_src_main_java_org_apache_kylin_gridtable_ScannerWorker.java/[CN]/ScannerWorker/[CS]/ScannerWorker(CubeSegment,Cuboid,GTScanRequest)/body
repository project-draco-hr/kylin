{
  if (scanRequest == null) {
    logger.info("Segment {} will be skipped",cubeSeg);
    internal=new EmptyGTScanner(0);
    return;
  }
  final GTInfo info=scanRequest.getInfo();
  try {
    IGTStorage rpc;
    if ("scan".equalsIgnoreCase(BackdoorToggles.getHbaseCubeQueryProtocol())) {
      rpc=(IGTStorage)Class.forName("org.apache.kylin.storage.hbase.cube.v2.CubeHBaseScanRPC").getConstructor(CubeSegment.class,Cuboid.class,GTInfo.class).newInstance(cubeSeg,cuboid,info);
    }
 else {
      rpc=(IGTStorage)Class.forName(KylinConfig.getInstanceFromEnv().getDefaultIGTStorage()).getConstructor(CubeSegment.class,Cuboid.class,GTInfo.class).newInstance(cubeSeg,cuboid,info);
    }
    internal=rpc.getGTScanner(scanRequest);
  }
 catch (  IOException|InstantiationException|InvocationTargetException|IllegalAccessException|ClassNotFoundException|NoSuchMethodException e) {
    throw new RuntimeException("error",e);
  }
}

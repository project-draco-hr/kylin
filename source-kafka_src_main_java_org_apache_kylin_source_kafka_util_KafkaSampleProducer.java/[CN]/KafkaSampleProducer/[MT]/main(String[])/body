{
  logger.info("args: " + Arrays.toString(args));
  OptionsHelper optionsHelper=new OptionsHelper();
  Options options=new Options();
  String topic, broker;
  options.addOption(OPTION_TOPIC);
  options.addOption(OPTION_BROKER);
  options.addOption(OPTION_DELAY);
  options.addOption(OPTION_INTERVAL);
  optionsHelper.parseOptions(options,args);
  logger.info("options: '" + optionsHelper.getOptionsAsString() + "'");
  topic=optionsHelper.getOptionValue(OPTION_TOPIC);
  broker=optionsHelper.getOptionValue(OPTION_BROKER);
  long delay=0;
  String delayString=optionsHelper.getOptionValue(OPTION_DELAY);
  if (delayString != null) {
    delay=Long.parseLong(delayString);
  }
  long interval=1000;
  String intervalString=optionsHelper.getOptionValue(OPTION_INTERVAL);
  if (intervalString != null) {
    interval=Long.parseLong(intervalString);
  }
  List<String> countries=new ArrayList();
  countries.add("AUSTRALIA");
  countries.add("CANADA");
  countries.add("CHINA");
  countries.add("INDIA");
  countries.add("JAPAN");
  countries.add("KOREA");
  countries.add("US");
  countries.add("Other");
  List<String> category=new ArrayList();
  category.add("BOOK");
  category.add("TOY");
  category.add("CLOTH");
  category.add("ELECTRONIC");
  category.add("Other");
  List<String> devices=new ArrayList();
  devices.add("iOS");
  devices.add("Windows");
  devices.add("Andriod");
  devices.add("Other");
  Properties props=new Properties();
  props.put("bootstrap.servers",broker);
  props.put("acks","all");
  props.put("retries",0);
  props.put("batch.size",16384);
  props.put("linger.ms",1);
  props.put("buffer.memory",33554432);
  props.put("key.serializer","org.apache.kafka.common.serialization.StringSerializer");
  props.put("value.serializer","org.apache.kafka.common.serialization.StringSerializer");
  Producer<String,String> producer=new KafkaProducer<>(props);
  boolean alive=true;
  Random rnd=new Random();
  Map<String,Object> record=new HashMap();
  while (alive == true) {
    record.put("order_time",(new Date().getTime() - delay));
    record.put("country",countries.get(rnd.nextInt(countries.size())));
    record.put("category",category.get(rnd.nextInt(category.size())));
    record.put("device",devices.get(rnd.nextInt(devices.size())));
    record.put("qty",rnd.nextInt(10));
    record.put("currency","USD");
    record.put("amount",rnd.nextDouble() * 100);
    ProducerRecord<String,String> data=new ProducerRecord<String,String>(topic,System.currentTimeMillis() + "",mapper.writeValueAsString(record));
    System.out.println("Sending 1 message");
    producer.send(data);
    Thread.sleep(interval);
  }
  producer.close();
}

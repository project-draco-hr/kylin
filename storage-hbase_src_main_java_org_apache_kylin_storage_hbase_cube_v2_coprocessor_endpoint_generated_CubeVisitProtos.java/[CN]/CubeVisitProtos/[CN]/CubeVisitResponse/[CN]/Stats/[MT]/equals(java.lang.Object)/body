{
  if (obj == this) {
    return true;
  }
  if (!(obj instanceof org.apache.kylin.storage.hbase.cube.v2.coprocessor.endpoint.generated.CubeVisitProtos.CubeVisitResponse.Stats)) {
    return super.equals(obj);
  }
  org.apache.kylin.storage.hbase.cube.v2.coprocessor.endpoint.generated.CubeVisitProtos.CubeVisitResponse.Stats other=(org.apache.kylin.storage.hbase.cube.v2.coprocessor.endpoint.generated.CubeVisitProtos.CubeVisitResponse.Stats)obj;
  boolean result=true;
  result=result && (hasServiceStartTime() == other.hasServiceStartTime());
  if (hasServiceStartTime()) {
    result=result && (getServiceStartTime() == other.getServiceStartTime());
  }
  result=result && (hasServiceEndTime() == other.hasServiceEndTime());
  if (hasServiceEndTime()) {
    result=result && (getServiceEndTime() == other.getServiceEndTime());
  }
  result=result && (hasScannedRowCount() == other.hasScannedRowCount());
  if (hasScannedRowCount()) {
    result=result && (getScannedRowCount() == other.getScannedRowCount());
  }
  result=result && (hasAggregatedRowCount() == other.hasAggregatedRowCount());
  if (hasAggregatedRowCount()) {
    result=result && (getAggregatedRowCount() == other.getAggregatedRowCount());
  }
  result=result && (hasSystemCpuLoad() == other.hasSystemCpuLoad());
  if (hasSystemCpuLoad()) {
    result=result && (Double.doubleToLongBits(getSystemCpuLoad()) == Double.doubleToLongBits(other.getSystemCpuLoad()));
  }
  result=result && (hasFreePhysicalMemorySize() == other.hasFreePhysicalMemorySize());
  if (hasFreePhysicalMemorySize()) {
    result=result && (Double.doubleToLongBits(getFreePhysicalMemorySize()) == Double.doubleToLongBits(other.getFreePhysicalMemorySize()));
  }
  result=result && (hasFreeSwapSpaceSize() == other.hasFreeSwapSpaceSize());
  if (hasFreeSwapSpaceSize()) {
    result=result && (Double.doubleToLongBits(getFreeSwapSpaceSize()) == Double.doubleToLongBits(other.getFreeSwapSpaceSize()));
  }
  result=result && (hasHostname() == other.hasHostname());
  if (hasHostname()) {
    result=result && getHostname().equals(other.getHostname());
  }
  result=result && (hasEtcMsg() == other.hasEtcMsg());
  if (hasEtcMsg()) {
    result=result && getEtcMsg().equals(other.getEtcMsg());
  }
  result=result && getUnknownFields().equals(other.getUnknownFields());
  return result;
}

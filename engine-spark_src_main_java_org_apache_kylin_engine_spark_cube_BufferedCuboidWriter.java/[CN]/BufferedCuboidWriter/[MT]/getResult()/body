{
  return new Iterable<Tuple2<byte[],byte[]>>(){
    @Override public Iterator<Tuple2<byte[],byte[]>> iterator(){
      return new Iterator<Tuple2<byte[],byte[]>>(){
        Tuple2<byte[],byte[]> current=null;
        @Override public boolean hasNext(){
          if (current == null) {
            try {
              current=blockingQueue.take();
            }
 catch (            InterruptedException e) {
              throw new RuntimeException(e);
            }
          }
          return current._1().length > 0 && current._2().length > 0;
        }
        @Override public Tuple2<byte[],byte[]> next(){
          if (hasNext()) {
            Tuple2<byte[],byte[]> result=current;
            current=null;
            return result;
          }
 else {
            throw new NoSuchElementException();
          }
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
;
}

{
  byteBuffer.clear();
  long mask=Long.highestOneBit(baseCuboidId);
  for (int i=0; i < nRowKey; i++) {
    if ((mask & cuboidId) != 0) {
      if (row[intermediateTableDesc.getRowKeyColumnIndexes()[i]] != null)       byteBuffer.put(Bytes.toBytes(row[intermediateTableDesc.getRowKeyColumnIndexes()[i]]));
 else       byteBuffer.put((byte)0xff);
    }
    mask=mask >> 1;
  }
  HyperLogLogPlusCounter hll=cuboidHLLMap.get(cuboidId);
  if (hll == null) {
    hll=new HyperLogLogPlusCounter(16);
    cuboidHLLMap.put(cuboidId,hll);
  }
  hll.add(byteBuffer.array(),0,byteBuffer.position());
  Collection<Long> children=cuboidScheduler.getSpanningCuboid(cuboidId);
  for (  Long childId : children) {
    putRowKeyToHLL(row,childId);
  }
}

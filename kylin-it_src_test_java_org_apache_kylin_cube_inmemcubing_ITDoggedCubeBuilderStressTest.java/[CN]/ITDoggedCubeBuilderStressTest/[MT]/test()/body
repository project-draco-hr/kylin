{
  ArrayBlockingQueue<List<String>> queue=new ArrayBlockingQueue<List<String>>(1000);
  ExecutorService executorService=Executors.newSingleThreadExecutor();
  long randSeed=System.currentTimeMillis();
  IJoinedFlatTableDesc flatDesc=EngineFactory.getJoinedFlatTableDesc(cube.getDescriptor());
  DoggedCubeBuilder doggedBuilder=new DoggedCubeBuilder(cube.getDescriptor(),flatDesc,dictionaryMap);
  doggedBuilder.setConcurrentThreads(THREADS);
{
    Future<?> future=executorService.submit(doggedBuilder.buildAsRunnable(queue,new NoopWriter()));
    ITInMemCubeBuilderTest.feedData(cube,flatTable,queue,INPUT_ROWS,randSeed);
    future.get();
  }
}

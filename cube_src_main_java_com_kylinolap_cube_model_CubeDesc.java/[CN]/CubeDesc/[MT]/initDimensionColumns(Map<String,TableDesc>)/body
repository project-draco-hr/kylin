{
  for (  DimensionDesc dim : dimensions) {
    TableDesc dimTable=dim.getTableDesc();
    JoinDesc join=dim.getJoin();
    ArrayList<TblColRef> dimCols=Lists.newArrayList();
    String[] colStrs=dim.getColumn();
    if (colStrs == null && dim.isDerived() || StringUtil.contains(colStrs,"{FK}")) {
      for (      TblColRef col : join.getForeignKeyColumns()) {
        dimCols.add(initDimensionColRef(col));
      }
    }
 else {
      if (colStrs == null || colStrs.length == 0)       throw new IllegalStateException("Dimension column must not be blank " + dim);
      for (      String colStr : colStrs) {
        dimCols.add(initDimensionColRef(dimTable,colStr));
      }
      if (dim.isHierarchy()) {
        for (int i=0; i < dimCols.size(); i++)         dim.getHierarchy()[i].setColumnRef(dimCols.get(i));
      }
    }
    TblColRef[] dimColArray=(TblColRef[])dimCols.toArray(new TblColRef[dimCols.size()]);
    dim.setColumnRefs(dimColArray);
    TblColRef[] hostCols=dimColArray;
    if (dim.isDerived()) {
      String[] derived=dim.getDerived();
      String[][] split=splitDerivedColumnAndExtra(derived);
      String[] derivedNames=split[0];
      String[] derivedExtra=split[1];
      TblColRef[] derivedCols=new TblColRef[derivedNames.length];
      for (int i=0; i < derivedNames.length; i++) {
        derivedCols[i]=initDimensionColRef(dimTable,derivedNames[i]);
      }
      initDerivedMap(hostCols,DeriveType.LOOKUP,dim,derivedCols,derivedExtra);
    }
    if (join != null) {
      TblColRef[] fk=join.getForeignKeyColumns();
      TblColRef[] pk=join.getPrimaryKeyColumns();
      for (int i=0; i < fk.length; i++) {
        int find=ArrayUtils.indexOf(hostCols,fk[i]);
        if (find >= 0) {
          TblColRef derivedCol=initDimensionColRef(pk[i]);
          initDerivedMap(hostCols[find],DeriveType.PK_FK,dim,derivedCol);
        }
      }
      for (int i=0; i < pk.length; i++) {
        int find=ArrayUtils.indexOf(hostCols,pk[i]);
        if (find >= 0) {
          TblColRef derivedCol=initDimensionColRef(fk[i]);
          initDerivedMap(hostCols[find],DeriveType.PK_FK,dim,derivedCol);
        }
      }
    }
  }
}

{
  boolean isReady=false;
  MetadataResponse.TopicMetadata topicMeta=null;
  while (!isReady) {
    Random random=new Random();
    topicMeta=this.fetchTopicMeta(topic);
    List<MetadataResponse.PartitionMetadata> partitionsMetadata=topicMeta.partitionMetadata();
    Iterator<MetadataResponse.PartitionMetadata> iterator=partitionsMetadata.iterator();
    boolean hasGotLeader=true;
    boolean hasGotReplica=true;
    while (iterator.hasNext()) {
      MetadataResponse.PartitionMetadata partitionMeta=iterator.next();
      hasGotLeader&=(!partitionMeta.leader().isEmpty());
      if (partitionMeta.leader().isEmpty()) {
        System.out.println("Partition leader is not ready, wait 1s.");
        break;
      }
      hasGotReplica&=(!partitionMeta.replicas().isEmpty());
      if (partitionMeta.replicas().isEmpty()) {
        System.out.println("Partition replica is not ready, wait 1s.");
        break;
      }
    }
    isReady=hasGotLeader & hasGotReplica;
    if (!isReady) {
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
      }
    }
  }
  return topicMeta;
}

{
  try {
    List<StreamMessage> streamMessageToBuild=Lists.newArrayList();
    clearCounter();
    while (true) {
      StreamMessage streamMessage;
      try {
        streamMessage=streamMessageQueue.poll(10,TimeUnit.SECONDS);
      }
 catch (      InterruptedException e) {
        logger.warn("stream queue interrupted",e);
        continue;
      }
      if (streamMessage == null) {
        logger.info("The stream queue is drained, current available stream count: " + streamMessageToBuild.size());
        if ((System.currentTimeMillis() - lastBuildTime) > BATCH_BUILD_INTERVAL_THRESHOLD) {
          build(streamMessageToBuild);
          clearCounter();
          streamMessageToBuild.clear();
        }
        continue;
      }
 else {
        if (streamMessage.getOffset() < 0) {
          logger.warn("streaming encountered EOF, stop building");
          break;
        }
      }
      streamMessageToBuild.add(streamMessage);
      if (streamMessageToBuild.size() >= this.sliceSize) {
        build(streamMessageToBuild);
        clearCounter();
        streamMessageToBuild.clear();
      }
    }
  }
 catch (  Exception e) {
    logger.error("build stream error, stop building",e);
    throw new RuntimeException("build stream error, stop building",e);
  }
}

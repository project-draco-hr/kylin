{
  logger.info("hasNext called");
  if (next != null)   return true;
  if (advMeasureRowsRemaining > 0) {
    for (    IAdvMeasureFiller filler : advMeasureFillers) {
      filler.fillTuplle(tuple,advMeasureRowIndex);
    }
    advMeasureRowIndex++;
    advMeasureRowsRemaining--;
    next=tuple;
    return true;
  }
  if (curScanner == null) {
    if (scannerIterator.hasNext()) {
      curScanner=scannerIterator.next();
      curRecordIterator=curScanner.iterator();
      if (curRecordIterator.hasNext()) {
        curTupleConverter=new CubeTupleConverter(curScanner.cubeSeg,cuboid,selectedDimensions,selectedMetrics,tupleInfo);
      }
    }
 else {
      return false;
    }
  }
  if (curRecordIterator.hasNext() == false) {
    close(curScanner);
    curScanner=null;
    curRecordIterator=null;
    curTupleConverter=null;
    return hasNext();
  }
  GTRecord curRecord=curRecordIterator.next();
  advMeasureFillers=curTupleConverter.translateResult(curRecord,tuple);
  if (advMeasureFillers == null) {
    next=tuple;
    return true;
  }
  advMeasureRowsRemaining=-1;
  for (  IAdvMeasureFiller filler : advMeasureFillers) {
    if (advMeasureRowsRemaining < 0)     advMeasureRowsRemaining=filler.getNumOfRows();
    if (advMeasureRowsRemaining != filler.getNumOfRows())     throw new IllegalStateException();
  }
  if (advMeasureRowsRemaining < 0)   throw new IllegalStateException();
  advMeasureRowIndex=0;
  return hasNext();
}

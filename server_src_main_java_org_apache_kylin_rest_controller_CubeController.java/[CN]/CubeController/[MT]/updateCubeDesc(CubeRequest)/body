{
  CubeDesc desc=deserializeCubeDesc(cubeRequest);
  CubeDesc oldCubeDesc;
  boolean isCubeDescFreeEditable;
  if (desc == null) {
    return cubeRequest;
  }
  isCubeDescFreeEditable=cubeService.isCubeDescFreeEditable(desc);
  if (!cubeRequest.getCubeName().equalsIgnoreCase(CubeService.getCubeNameFromDesc(desc.getName()))) {
    String error="Cube Desc renaming is not allowed: " + desc.getName();
    updateRequest(cubeRequest,false,error);
    return cubeRequest;
  }
  String projectName=(null == cubeRequest.getProject()) ? ProjectInstance.DEFAULT_PROJECT_NAME : cubeRequest.getProject();
  try {
    CubeInstance cube=cubeService.getCubeManager().getCube(cubeRequest.getCubeName());
    oldCubeDesc=cube.getDescriptor();
    if (isCubeDescFreeEditable || oldCubeDesc.consistentWith(desc)) {
      desc=cubeService.updateCubeAndDesc(cube,desc,projectName);
    }
 else {
      logger.warn("Won't update the cube desc due to inconsistency");
      updateRequest(cubeRequest,false,"CubeDesc " + desc.getName() + " is inconsistent with existing. Try purge that cube first or avoid updating key cube desc fields.");
      return cubeRequest;
    }
  }
 catch (  AccessDeniedException accessDeniedException) {
    throw new ForbiddenException("You don't have right to update this cube.");
  }
catch (  Exception e) {
    logger.error("Failed to deal with the request:" + e.getLocalizedMessage(),e);
    throw new InternalErrorException("Failed to deal with the request: " + e.getLocalizedMessage());
  }
  if (!desc.getError().isEmpty()) {
    logger.warn("Cube " + desc.getName() + " fail to update because "+ desc.getError());
    updateRequest(cubeRequest,false,omitMessage(desc.getError()));
    return cubeRequest;
  }
  String descData=JsonUtil.writeValueAsIndentString(desc);
  cubeRequest.setCubeDescData(descData);
  cubeRequest.setSuccessful(true);
  return cubeRequest;
}

{
  if (this.type.equals("job")) {
    jobInfoExtractor.execute(optionsHelper);
    exportDest=optionsHelper.getOptionValue(options.getOption("destDir"));
  }
 else   if (this.type.equals("metadata")) {
    cubeMetaExtractor.execute(optionsHelper);
    exportDest=optionsHelper.getOptionValue(options.getOption("destDir"));
  }
  if (StringUtils.isEmpty(exportDest)) {
    throw new RuntimeException("destDir is not set, exit directly without extracting");
  }
  if (!exportDest.endsWith("/")) {
    exportDest=exportDest + "/";
  }
  int logPeriod=optionsHelper.hasOption(OPTION_LOG_PERIOD) ? Integer.valueOf(optionsHelper.getOptionValue(OPTION_LOG_PERIOD)) : DEFAULT_LOG_PERIOD;
  boolean compress=optionsHelper.hasOption(OPTION_COMPRESS) ? Boolean.valueOf(optionsHelper.getOptionValue(OPTION_COMPRESS)) : false;
  if (logPeriod > 0) {
    logger.info("Start to extract kylin logs in {} days",logPeriod);
    final String logFolder=KylinConfig.getKylinHome() + "/logs/";
    final String defaultLogFilename="kylin.log";
    final File logsDir=new File(exportDest + "/logs/");
    final SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd");
    FileUtils.forceMkdir(logsDir);
    final ArrayList<String> logFileNames=Lists.newArrayListWithCapacity(logPeriod);
    logFileNames.add(defaultLogFilename);
    for (int i=1; i < logPeriod; i++) {
      Calendar todayCal=Calendar.getInstance();
      todayCal.add(Calendar.DAY_OF_MONTH,0 - i);
      logFileNames.add(defaultLogFilename + "." + format.format(todayCal.getTime()));
    }
    for (    String logFilename : logFileNames) {
      File logFile=new File(logFolder + logFilename);
      if (logFile.exists()) {
        FileUtils.copyFileToDirectory(logFile,logsDir);
      }
    }
  }
  if (compress) {
    File tempZipFile=File.createTempFile("diagnosis_",".zip");
    ZipFileUtils.compressZipFile(exportDest,tempZipFile.getAbsolutePath());
    FileUtils.forceDelete(new File(exportDest));
    FileUtils.moveFileToDirectory(tempZipFile,new File(exportDest),true);
    exportDest=exportDest + tempZipFile.getName();
  }
  logger.info("Diagnosis info locates at: " + new File(exportDest).getAbsolutePath());
}

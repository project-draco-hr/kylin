{
  Options options=new Options();
  try {
    options.addOption(OPTION_INPUT_PATH);
    options.addOption(OPTION_HTABLE_NAME);
    options.addOption(OPTION_CUBE_NAME);
    parseOptions(options,args);
    String tableName=getOptionValue(OPTION_HTABLE_NAME).toUpperCase();
    String input=getOptionValue(OPTION_INPUT_PATH);
    Configuration conf=HBaseConnection.getCurrentHBaseConfiguration();
    FileSystem fs=FileSystem.get(conf);
    String cubeName=getOptionValue(OPTION_CUBE_NAME).toUpperCase();
    KylinConfig config=KylinConfig.getInstanceFromEnv();
    CubeManager cubeMgr=CubeManager.getInstance(config);
    CubeInstance cube=cubeMgr.getCube(cubeName);
    CubeDesc cubeDesc=cube.getDescriptor();
    FsPermission permission=new FsPermission((short)0777);
    for (    HBaseColumnFamilyDesc cf : cubeDesc.getHBaseMapping().getColumnFamily()) {
      String cfName=cf.getName();
      Path columnFamilyPath=new Path(input,cfName);
      if (fs.exists(columnFamilyPath)) {
        fs.setPermission(columnFamilyPath,permission);
      }
    }
    String[] newArgs=new String[2];
    newArgs[0]=input;
    newArgs[1]=tableName;
    logger.debug("Start to run LoadIncrementalHFiles");
    int ret=ToolRunner.run(new LoadIncrementalHFiles(conf),newArgs);
    logger.debug("End to run LoadIncrementalHFiles");
    return ret;
  }
 catch (  Exception e) {
    printUsage(options);
    throw e;
  }
}

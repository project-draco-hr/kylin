{
  KylinConfig config=engineConfig.getConfig();
  String cubeName=jobInstance.getRelatedCube();
  CubeInstance cubeInstance=CubeManager.getInstance(config).getCube(cubeName);
  String finalStatus=null;
  String content=JobConstants.NOTIFY_EMAIL_TEMPLATE;
  String logMsg="";
switch (jobInstance.getStatus()) {
case FINISHED:
    finalStatus="SUCCESS";
  break;
case ERROR:
for (JobStep step : jobInstance.getSteps()) {
  if (step.getStatus() == JobStepStatusEnum.ERROR) {
    try {
      logMsg=JobDAO.getInstance(config).getJobOutput(step).getOutput();
    }
 catch (    IOException e) {
      log.error(e.getLocalizedMessage(),e);
    }
  }
}
finalStatus="FAILED";
break;
case DISCARDED:
finalStatus="DISCARDED";
default :
break;
}
if (null == finalStatus) {
return;
}
try {
InetAddress inetAddress=InetAddress.getLocalHost();
content=content.replaceAll("\\$\\{job_engine\\}",inetAddress.getCanonicalHostName());
}
 catch (UnknownHostException e) {
log.error(e.getLocalizedMessage(),e);
}
content=content.replaceAll("\\$\\{job_name\\}",jobInstance.getName());
content=content.replaceAll("\\$\\{result\\}",finalStatus);
content=content.replaceAll("\\$\\{cube_name\\}",cubeName);
content=content.replaceAll("\\$\\{start_time\\}",new Date(jobInstance.getExecStartTime()).toString());
content=content.replaceAll("\\$\\{duration\\}",jobInstance.getDuration() / 60 + "mins");
content=content.replaceAll("\\$\\{mr_waiting\\}",jobInstance.getMrWaiting() / 60 + "mins");
content=content.replaceAll("\\$\\{last_update_time\\}",new Date(jobInstance.getLastModified()).toString());
if (jobInstance.getSubmitter() != null) content=content.replaceAll("\\$\\{submitter\\}",jobInstance.getSubmitter());
content=content.replaceAll("\\$\\{error_log\\}",logMsg);
MailService mailService=new MailService();
try {
List<String> users=new ArrayList<String>();
if (null != cubeInstance.getDescriptor().getNotifyList()) {
users.addAll(cubeInstance.getDescriptor().getNotifyList());
}
if (null != engineConfig.getAdminDls()) {
String[] adminDls=engineConfig.getAdminDls().split(",");
for (String adminDl : adminDls) {
users.add(adminDl);
}
}
log.info("prepare to send email to:" + users);
log.info("job name:" + jobInstance.getName());
log.info("submitter:" + jobInstance.getSubmitter());
if (users.size() > 0) {
mailService.sendMail(users,"[" + finalStatus + "] - [Kylin Cube Build Job]-"+ cubeName,content);
}
}
 catch (IOException e) {
log.error(e.getLocalizedMessage(),e);
}
}

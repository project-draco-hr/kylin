{
  MetadataManager metaManager=MetadataManager.getInstance(KylinConfig.getInstanceFromEnv());
  DataModelDesc modelDesc=deserializeDataModelDesc(cubeRequest);
  if (modelDesc == null) {
    return cubeRequest;
  }
  try {
    metaManager.createDataModelDesc(modelDesc);
  }
 catch (  IOException e) {
    logger.error("Failed to deal with the request:" + e.getLocalizedMessage(),e);
    throw new InternalErrorException("Failed to deal with the request: " + e.getLocalizedMessage() + e.getMessage());
  }
  CubeDesc desc=deserializeCubeDesc(cubeRequest);
  if (desc == null) {
    return cubeRequest;
  }
  String name=CubeService.getCubeNameFromDesc(desc.getName());
  if (StringUtils.isEmpty(name)) {
    logger.info("Cube name should not be empty.");
    throw new BadRequestException("Cube name should not be empty.");
  }
  try {
    desc.setUuid(UUID.randomUUID().toString());
    String projectName=(null == cubeRequest.getProject()) ? ProjectInstance.DEFAULT_PROJECT_NAME : cubeRequest.getProject();
    cubeService.createCubeAndDesc(name,projectName,desc);
  }
 catch (  Exception e) {
    logger.error("Failed to deal with the request.",e);
    throw new InternalErrorException(e.getLocalizedMessage(),e);
  }
  cubeRequest.setUuid(desc.getUuid());
  cubeRequest.setSuccessful(true);
  return cubeRequest;
}

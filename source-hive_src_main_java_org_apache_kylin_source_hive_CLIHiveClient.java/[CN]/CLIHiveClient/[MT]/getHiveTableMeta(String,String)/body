{
  HiveTableMetaBuilder builder=new HiveTableMetaBuilder();
  Table table=getMetaStoreClient().getTable(database,tableName);
  List<FieldSchema> allFields=getMetaStoreClient().getFields(database,tableName);
  List<FieldSchema> partitionFields=table.getPartitionKeys();
  if (allFields == null) {
    allFields=Lists.newArrayList();
  }
  if (partitionFields != null && partitionFields.size() > 0) {
    allFields.addAll(partitionFields);
  }
  List<HiveTableMeta.HiveTableColumnMeta> allColumns=Lists.newArrayList();
  List<HiveTableMeta.HiveTableColumnMeta> partitionColumns=Lists.newArrayList();
  for (  FieldSchema fieldSchema : allFields) {
    allColumns.add(new HiveTableMeta.HiveTableColumnMeta(fieldSchema.getName(),fieldSchema.getType(),fieldSchema.getComment()));
  }
  if (partitionFields != null && partitionFields.size() > 0) {
    for (    FieldSchema fieldSchema : partitionFields) {
      partitionColumns.add(new HiveTableMeta.HiveTableColumnMeta(fieldSchema.getName(),fieldSchema.getType(),fieldSchema.getComment()));
    }
  }
  builder.setAllColumns(allColumns);
  builder.setPartitionColumns(partitionColumns);
  builder.setSdLocation(table.getSd().getLocation());
  builder.setFileSize(getBasicStatForTable(new org.apache.hadoop.hive.ql.metadata.Table(table),StatsSetupConst.TOTAL_SIZE));
  builder.setFileNum(getBasicStatForTable(new org.apache.hadoop.hive.ql.metadata.Table(table),StatsSetupConst.NUM_FILES));
  builder.setIsNative(!MetaStoreUtils.isNonNativeTable(table));
  builder.setTableName(tableName);
  builder.setSdInputFormat(table.getSd().getInputFormat());
  builder.setSdOutputFormat(table.getSd().getOutputFormat());
  builder.setOwner(table.getOwner());
  builder.setLastAccessTime(table.getLastAccessTime());
  builder.setTableType(table.getTableType());
  return builder.createHiveTableMeta();
}

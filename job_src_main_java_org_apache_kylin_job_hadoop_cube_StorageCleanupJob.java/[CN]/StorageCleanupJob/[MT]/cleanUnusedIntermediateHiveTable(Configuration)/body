{
  FileSystem fs=FileSystem.get(conf);
  int uuidLength=36;
  StringBuilder buf=new StringBuilder();
  buf.append("hive -e \"");
  buf.append("show tables " + "\'kylin_intermediate_*\'" + "; ");
  buf.append("\"");
  ShellCmd cmd=new ShellCmd(buf.toString(),null,null,null,false);
  ICommandOutput output=null;
  try {
    output=cmd.execute();
  }
 catch (  JobException e) {
    e.printStackTrace();
  }
  if (output == null)   return;
  String outputStr=output.getOutput();
  BufferedReader reader=new BufferedReader(new StringReader(outputStr));
  String line=null;
  List<String> allJobs=executableManager.getAllJobIds();
  List<String> allHiveTablesNeedToBeDeleted=new ArrayList<String>();
  List<String> workingJobList=new ArrayList<String>();
  for (  String jobId : allJobs) {
    final ExecutableState state=executableManager.getOutput(jobId).getState();
    if (!state.isFinalState()) {
      workingJobList.add(jobId);
      log.info("Remove intermediate hive table with job id " + jobId + " with job status "+ state);
    }
  }
  while ((line=reader.readLine()) != null) {
    if (line.startsWith("kylin_intermediate_")) {
      boolean isNeedDel=true;
      String uuid=line.substring(line.length() - uuidLength,line.length());
      uuid=uuid.replace("_","-");
      if (workingJobList.contains(uuid)) {
        isNeedDel=false;
      }
 else {
        log.info("Hive table with uuid " + uuid + " is in use.");
      }
      String hdfsPath=JobInstance.getJobWorkingDir(uuid,KylinConfig.getInstanceFromEnv().getHdfsWorkingDirectory());
      Path p=new Path(hdfsPath);
      if (fs.exists(p) == false) {
        isNeedDel=false;
      }
 else {
        log.info("Hive table with uuid " + uuid + " belongs to a different Kylin instance.");
      }
      if (isNeedDel)       allHiveTablesNeedToBeDeleted.add(line);
    }
  }
  if (delete == true) {
    buf.delete(0,buf.length());
    buf.append("hive -e \"");
    for (    String delHive : allHiveTablesNeedToBeDeleted) {
      buf.append("drop table if exists " + delHive + "; ");
      log.info("Remove " + delHive + " from hive tables.");
    }
    buf.append("\"");
    cmd=new ShellCmd(buf.toString(),null,null,null,false);
    try {
      cmd.execute();
    }
 catch (    JobException e) {
      e.printStackTrace();
    }
  }
 else {
    System.out.println("------ Intermediate Hive Tables To Be Dropped ------");
    for (    String hiveTable : allHiveTablesNeedToBeDeleted) {
      System.out.println(hiveTable);
    }
    System.out.println("----------------------------------------------------");
  }
  if (reader != null)   reader.close();
}

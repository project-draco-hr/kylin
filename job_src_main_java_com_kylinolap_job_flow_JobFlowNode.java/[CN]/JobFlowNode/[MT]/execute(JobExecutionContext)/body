{
  this.currentJobDetail=context.getJobDetail();
  JobDataMap data=this.currentJobDetail.getJobDataMap();
  JobFlow jobFlow=(JobFlow)data.get(JobConstants.PROP_JOB_FLOW);
  JobEngineConfig engineConfig=jobFlow.getJobengineConfig();
  String jobInstanceID=data.getString(JobConstants.PROP_JOBINSTANCE_UUID);
  int jobStepID=data.getInt(JobConstants.PROP_JOBSTEP_SEQ_ID);
  String command=data.getString(JobConstants.PROP_COMMAND);
  KylinConfig config=engineConfig.getConfig();
  try {
    JobInstance jobInstance=updateJobStep(jobInstanceID,jobStepID,config,JobStepStatusEnum.RUNNING,System.currentTimeMillis(),null,null);
    jobCmd=JobCommandFactory.getJobCommand(command,jobInstance,jobStepID,engineConfig);
    data.put(JobConstants.PROP_JOB_CMD_EXECUTOR,jobCmd);
    context.getScheduler().addJob(this.currentJobDetail,true,true);
    ICommandOutput output=jobCmd.execute();
    if (data.getBoolean(JobConstants.PROP_JOB_KILLED)) {
      return;
    }
    int exitCode=output.getExitCode();
    updateJobStep(jobInstanceID,jobStepID,config,output.getStatus(),null,System.currentTimeMillis(),output.getOutput());
    context.setResult(exitCode);
    log.info("Job status for " + context.getJobDetail().getKey() + " has been updated.");
    log.info("cmd:" + command);
    log.info("output:" + output.getOutput());
    log.info("exitCode:" + exitCode);
  }
 catch (  Throwable t) {
    handleException(jobInstanceID,jobStepID,config,t);
  }
}

{
  try {
    int consumeMsgCount=0;
    int fetchRound=0;
    while (true) {
      int consumeMsgCountAtBeginning=consumeMsgCount;
      fetchRound++;
      logger.info("fetching topic {} partition id {} offset {} leader {}",topic,String.valueOf(partitionId),String.valueOf(offset),leadBroker.toString());
      final FetchResponse fetchResponse=KafkaRequester.fetchResponse(topic,partitionId,offset,leadBroker,streamingConfig);
      if (fetchResponse.errorCode(topic,partitionId) != 0) {
        logger.warn("fetch response offset:" + offset + " errorCode:"+ fetchResponse.errorCode(topic,partitionId));
        Thread.sleep(30000);
        continue;
      }
      for (      MessageAndOffset messageAndOffset : fetchResponse.messageSet(topic,partitionId)) {
        offset++;
        consumeMsgCount++;
        final StreamingMessage streamingMessage=streamingParser.parse(messageAndOffset);
        if (streamingParser.filter(streamingMessage)) {
          streamQueue.add(streamingMessage);
        }
      }
      logger.info("Number of messages consumed: " + consumeMsgCount + " offset is: "+ offset+ " total fetch round: "+ fetchRound);
      if (consumeMsgCount == consumeMsgCountAtBeginning) {
        Thread.sleep(30000);
      }
    }
  }
 catch (  Exception e) {
    logger.error("consumer has encountered an error",e);
  }
}

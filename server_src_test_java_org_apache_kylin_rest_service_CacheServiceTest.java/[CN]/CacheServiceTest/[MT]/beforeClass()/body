{
  staticCreateTestMetadata();
  configA=KylinConfig.getInstanceFromEnv();
  configA.setProperty("kylin.rest.servers","localhost:7777");
  configB=KylinConfig.createKylinConfig(configA);
  configB.setProperty("kylin.rest.servers","localhost:7777");
  configB.setMetadataUrl("../examples/test_metadata");
  server=new Server(7777);
  ServletContextHandler context=new ServletContextHandler(ServletContextHandler.SESSIONS);
  context.setContextPath("/");
  server.setHandler(context);
  final CacheService serviceA=new CacheService(){
    @Override public KylinConfig getConfig(){
      return configA;
    }
  }
;
  final CacheService serviceB=new CacheService(){
    @Override public KylinConfig getConfig(){
      return configB;
    }
  }
;
  final CubeService cubeServiceA=new CubeService(){
    @Override public KylinConfig getConfig(){
      return configA;
    }
  }
;
  final CubeService cubeServiceB=new CubeService(){
    @Override public KylinConfig getConfig(){
      return configB;
    }
  }
;
  serviceA.setCubeService(cubeServiceA);
  serviceB.setCubeService(cubeServiceB);
  context.addServlet(new ServletHolder(new BroadcasterReceiveServlet(new BroadcasterReceiveServlet.BroadcasterHandler(){
    @Override public void handle(    String entity,    String cacheKey,    String event){
      Broadcaster.Event wipeEvent=Broadcaster.Event.getEvent(event);
      final String log="wipe cache type: " + entity + " event:"+ wipeEvent+ " name:"+ cacheKey;
      logger.info(log);
      try {
        serviceA.notifyMetadataChange(entity,wipeEvent,cacheKey);
        serviceB.notifyMetadataChange(entity,wipeEvent,cacheKey);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
 finally {
        counter.incrementAndGet();
      }
    }
  }
)),"/");
  server.start();
}

{
  long i=vint;
  int size=WritableUtils.getVIntSize(i);
  byte[] result=new byte[size];
  int offset=0;
  if (i >= -112 && i <= 127) {
    result[offset]=(byte)i;
    return result;
  }
  int len=-112;
  if (i < 0) {
    i^=-1L;
    len=-120;
  }
  long tmp=i;
  while (tmp != 0) {
    tmp=tmp >> 8;
    len--;
  }
  result[offset++]=(byte)len;
  len=(len < -120) ? -(len + 120) : -(len + 112);
  for (int idx=len; idx != 0; idx--) {
    int shiftbits=(idx - 1) * 8;
    long mask=0xFFL << shiftbits;
    result[offset++]=(byte)((i & mask) >> shiftbits);
  }
  return result;
}

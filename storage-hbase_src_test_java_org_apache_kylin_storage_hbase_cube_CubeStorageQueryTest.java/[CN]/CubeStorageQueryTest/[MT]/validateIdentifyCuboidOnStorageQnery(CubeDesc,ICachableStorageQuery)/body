{
  long baseCuboidId=cubeDesc.getRowkey().getFullMask();
  try {
    Method method=query.getClass().getDeclaredMethod("identifyCuboid",Set.class,Collection.class);
    method.setAccessible(true);
    Set<TblColRef> dimensions=Sets.newHashSet();
    List<FunctionDesc> metrics=Lists.newArrayList();
    Object ret=method.invoke(query,dimensions,metrics);
    assertTrue(ret instanceof Cuboid);
    assertNotEquals(baseCuboidId,((Cuboid)ret).getId());
    for (    MeasureDesc measureDesc : cubeDesc.getMeasures()) {
      Collections.addAll(metrics,measureDesc.getFunction());
    }
    FunctionDesc mockUpFuncDesc=new FunctionDesc();
    Field field=FunctionDesc.class.getDeclaredField("measureType");
    field.setAccessible(true);
    field.set(mockUpFuncDesc,new MockUpMeasureType());
    metrics.add(mockUpFuncDesc);
    ret=method.invoke(query,dimensions,metrics);
    assertEquals(baseCuboidId,((Cuboid)ret).getId());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

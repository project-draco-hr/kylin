{
  Sid adminSid=accessService.getSid("ADMIN",true);
  Assert.assertNotNull(adminSid);
  Assert.assertNotNull(AclPermissionFactory.getPermissions());
  AclEntity ae=new MockAclEntity("test-domain-object");
  accessService.clean(ae,true);
  AclEntity attachedEntity=new MockAclEntity("attached-domain-object");
  accessService.clean(attachedEntity,true);
  Acl acl=accessService.getAcl(ae);
  Assert.assertNull(acl);
  acl=accessService.init(ae,AclPermission.ADMINISTRATION);
  Assert.assertTrue(((PrincipalSid)acl.getOwner()).getPrincipal().equals("ADMIN"));
  Assert.assertEquals(accessService.generateAceResponses(acl).size(),1);
  AccessEntryResponse aer=accessService.generateAceResponses(acl).get(0);
  Assert.assertTrue(aer.getId() != null);
  Assert.assertTrue(aer.getPermission() == AclPermission.ADMINISTRATION);
  Assert.assertTrue(((PrincipalSid)aer.getSid()).getPrincipal().equals("ADMIN"));
  Sid modeler=accessService.getSid("MODELER",true);
  acl=accessService.grant(ae,AclPermission.ADMINISTRATION,modeler);
  Assert.assertEquals(accessService.generateAceResponses(acl).size(),2);
  Long modelerEntryId=null;
  for (  AccessControlEntry ace : acl.getEntries()) {
    PrincipalSid sid=(PrincipalSid)ace.getSid();
    if (sid.getPrincipal().equals("MODELER")) {
      modelerEntryId=(Long)ace.getId();
      Assert.assertTrue(ace.getPermission() == AclPermission.ADMINISTRATION);
    }
  }
  acl=accessService.update(ae,modelerEntryId,AclPermission.READ);
  Assert.assertEquals(accessService.generateAceResponses(acl).size(),2);
  for (  AccessControlEntry ace : acl.getEntries()) {
    PrincipalSid sid=(PrincipalSid)ace.getSid();
    if (sid.getPrincipal().equals("MODELER")) {
      modelerEntryId=(Long)ace.getId();
      Assert.assertTrue(ace.getPermission() == AclPermission.READ);
    }
  }
  accessService.clean(attachedEntity,true);
  Acl attachedEntityAcl=accessService.getAcl(attachedEntity);
  Assert.assertNull(attachedEntityAcl);
  attachedEntityAcl=accessService.init(attachedEntity,AclPermission.ADMINISTRATION);
  accessService.inherit(attachedEntity,ae);
  attachedEntityAcl=accessService.getAcl(attachedEntity);
  Assert.assertTrue(attachedEntityAcl.getParentAcl() != null);
  Assert.assertTrue(attachedEntityAcl.getParentAcl().getObjectIdentity().getIdentifier().equals("test-domain-object"));
  Assert.assertTrue(attachedEntityAcl.getEntries().size() == 1);
  acl=accessService.revoke(ae,modelerEntryId);
  Assert.assertEquals(accessService.generateAceResponses(acl).size(),1);
  accessService.clean(ae,true);
  acl=accessService.getAcl(ae);
  Assert.assertNull(acl);
  attachedEntityAcl=accessService.getAcl(attachedEntity);
  Assert.assertNull(attachedEntityAcl);
}

{
  final Reader reader=new Reader(hconf,SequenceFile.Reader.file(new Path(path)));
  return new Iterable<KeyValuePair>(){
    @Override public Iterator<KeyValuePair> iterator(){
      return new Iterator<KeyValuePair>(){
        ImmutableBytesWritable k=new ImmutableBytesWritable();
        ImmutableBytesWritable v=new ImmutableBytesWritable();
        KeyValuePair pair=new KeyValuePair(k,v);
        @Override public boolean hasNext(){
          boolean hasNext=false;
          try {
            hasNext=reader.next(k,v);
          }
 catch (          IOException e) {
            throw new RuntimeException(e);
          }
 finally {
            if (hasNext == false) {
              IOUtils.closeQuietly(reader);
            }
          }
          return hasNext;
        }
        @Override public KeyValuePair next(){
          return pair;
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
;
}

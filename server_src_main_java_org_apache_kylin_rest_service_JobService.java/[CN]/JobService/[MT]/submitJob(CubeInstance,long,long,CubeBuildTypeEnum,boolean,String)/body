{
  checkNoRunningJob(cube);
  DefaultChainedExecutable job;
  if (buildType == CubeBuildTypeEnum.BUILD) {
    CubeSegment newSeg=getCubeManager().appendSegments(cube,endDate);
    job=BuildEngineFactory.createBatchBuildJob(newSeg,submitter);
  }
 else   if (buildType == CubeBuildTypeEnum.MERGE) {
    CubeSegment newSeg=getCubeManager().mergeSegments(cube,startDate,endDate,forceMergeEmptySeg);
    job=BuildEngineFactory.createBatchMergeJob(newSeg,submitter);
  }
 else   if (buildType == CubeBuildTypeEnum.REFRESH) {
    CubeSegment refreshSeg=getCubeManager().refreshSegment(cube,startDate,endDate);
    job=BuildEngineFactory.createBatchBuildJob(refreshSeg,submitter);
  }
 else {
    throw new JobException("invalid build type:" + buildType);
  }
  getExecutableManager().addJob(job);
  JobInstance jobInstance=getSingleJobInstance(job);
  accessService.init(jobInstance,null);
  accessService.inherit(jobInstance,cube);
  return jobInstance;
}

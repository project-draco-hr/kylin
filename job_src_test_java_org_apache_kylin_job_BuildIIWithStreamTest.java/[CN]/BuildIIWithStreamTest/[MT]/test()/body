{
  final IIDesc desc=iiManager.getII(II_NAME).getDescriptor();
  final String tableName="kylin_intermediate_ii_test_kylin_ii_inner_join_desc_f24b8e1f_1c1f_4835_8d78_8f21ce79a536";
  final Configuration conf=new Configuration();
  HCatInputFormat.setInput(conf,"default",tableName);
  final HCatSchema tableSchema=HCatInputFormat.getTableSchema(conf);
  logger.info(StringUtils.join(tableSchema.getFieldNames(),"\n"));
  HiveTableReader reader=new HiveTableReader("default",tableName);
  final List<TblColRef> tblColRefs=desc.listAllColumns();
  for (  TblColRef tblColRef : tblColRefs) {
    if (desc.isMetricsCol(tblColRef)) {
      logger.info("matrix:" + tblColRef.getName());
    }
 else {
      logger.info("measure:" + tblColRef.getName());
    }
  }
  LinkedBlockingDeque<Stream> queue=new LinkedBlockingDeque<Stream>();
  final IIStreamBuilder streamBuilder=new IIStreamBuilder(queue,"test_htable",desc,0);
  final Thread thread=new Thread(streamBuilder);
  thread.start();
  while (reader.next()) {
    queue.put(parse(reader.getRow()));
  }
  queue.put(new Stream(-1,null));
  thread.join();
}

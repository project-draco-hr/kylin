{
  Configuration conf=HBaseConfiguration.create();
  if (StringUtils.isEmpty(url))   return conf;
  if (url.startsWith("hbase:") == false)   throw new IllegalArgumentException("hbase url must start with 'hbase:' -- " + url);
  url=StringUtils.substringAfter(url,"hbase:");
  if (StringUtils.isEmpty(url))   return conf;
  Pattern urlPattern=Pattern.compile("([\\w\\d\\-.]+)[:](\\d+)(?:[:](.*))?");
  Matcher m=urlPattern.matcher(url);
  if (m.matches() == false)   throw new IllegalArgumentException("HBase URL '" + url + "' is invalid, expected url is like '"+ "hbase:domain.com:2181:/hbase-unsecure"+ "'");
  logger.debug("Creating hbase conf by parsing -- " + url);
  String quorum=m.group(1);
  try {
    InetAddress.getByName(quorum);
  }
 catch (  UnknownHostException e) {
    throw new IllegalArgumentException("Zookeeper quorum is invalid: " + quorum + "; urlString="+ url,e);
  }
  conf.set(HConstants.ZOOKEEPER_QUORUM,quorum);
  String port=m.group(2);
  conf.set(HConstants.ZOOKEEPER_CLIENT_PORT,port);
  String znodePath=m.group(3) == null ? "" : m.group(3);
  if (StringUtils.isEmpty(znodePath) == false)   conf.set(HConstants.ZOOKEEPER_ZNODE_PARENT,znodePath);
  conf.set(HConstants.HBASE_CLIENT_PAUSE,"3000");
  conf.set(HConstants.HBASE_CLIENT_RETRIES_NUMBER,"5");
  conf.set(HConstants.HBASE_CLIENT_OPERATION_TIMEOUT,"60000");
  return conf;
}

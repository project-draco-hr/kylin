{
  if (isStatistics == false) {
    colValues.add(new ByteArray(Bytes.copy(key.getBytes(),1,key.getLength() - 1)));
    if (colValues.size() == 1000000) {
      System.out.println("spill values to disk...");
      outputDistinctValues(col,colValues,context);
      colValues.clear();
    }
  }
 else {
    long cuboidId=Bytes.toLong(key.getBytes(),1,Bytes.SIZEOF_LONG);
    for (    Text value : values) {
      HyperLogLogPlusCounter hll=new HyperLogLogPlusCounter(14);
      ByteBuffer bf=ByteBuffer.wrap(value.getBytes(),0,value.getLength());
      hll.readRegisters(bf);
      totalRowsBeforeMerge+=hll.getCountEstimate();
      if (cuboidId == baseCuboidId) {
        baseCuboidRowCountInMappers.add(hll.getCountEstimate());
      }
      if (cuboidHLLMap.get(cuboidId) != null) {
        cuboidHLLMap.get(cuboidId).merge(hll);
      }
 else {
        cuboidHLLMap.put(cuboidId,hll);
      }
    }
  }
}

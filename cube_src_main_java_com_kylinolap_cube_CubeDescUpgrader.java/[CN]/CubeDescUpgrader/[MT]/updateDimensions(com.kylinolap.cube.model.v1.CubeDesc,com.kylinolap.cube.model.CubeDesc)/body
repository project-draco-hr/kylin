{
  List<com.kylinolap.cube.model.v1.DimensionDesc> oldDimensions=oldModel.getDimensions();
  List<com.kylinolap.cube.model.DimensionDesc> newDimensions=Lists.newArrayList();
  newModel.setDimensions(newDimensions);
  int dimId=0;
  for (  com.kylinolap.cube.model.v1.DimensionDesc dim : oldDimensions) {
    com.kylinolap.cube.model.DimensionDesc newDim=null;
    if (dim.getColumn() != null && !"{FK}".equals(dim.getColumn())) {
      newDim=newDimensionDesc(dim,dimId++,dim.getName());
      newDimensions.add(newDim);
      newDim.setColumn(new String[]{dim.getColumn()});
    }
 else     if (ArrayUtils.isEmpty(dim.getDerived()) && ArrayUtils.isEmpty(dim.getHierarchy())) {
      newDim=newDimensionDesc(dim,dimId++,dim.getName());
      newDimensions.add(newDim);
      newDim.setTable(getMetadataManager().appendDBName(newModel.getFactTable()));
      newDim.setColumn(dim.getJoin().getForeignKey());
    }
    if (!ArrayUtils.isEmpty(dim.getDerived())) {
      newDim=newDimensionDesc(dim,dimId++,dim.getName() + "_derived");
      newDimensions.add(newDim);
      newDim.setDerived(dim.getDerived());
      newDim.setColumn(null);
    }
    if (!ArrayUtils.isEmpty(dim.getHierarchy())) {
      newDim=newDimensionDesc(dim,dimId++,dim.getName() + "_hierarchy");
      newDimensions.add(newDim);
      newDim.setHierarchy(true);
      List<String> columns=Lists.newArrayList();
      for (      HierarchyDesc hierarch : dim.getHierarchy()) {
        String col=hierarch.getColumn();
        columns.add(col);
      }
      newDim.setColumn(columns.toArray(new String[columns.size()]));
    }
  }
}

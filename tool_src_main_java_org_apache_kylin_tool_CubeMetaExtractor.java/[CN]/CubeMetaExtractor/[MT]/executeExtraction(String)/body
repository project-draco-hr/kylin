{
  logger.info("The resource paths going to be extracted:");
  for (  String s : requiredResources) {
    logger.info(s + "(required)");
  }
  for (  String s : optionalResources) {
    logger.info(s + "(optional)");
  }
  for (  CubeInstance cube : cubesToTrimAndSave) {
    logger.info("Cube {} will be trimmed and extracted",cube);
  }
  try {
    KylinConfig srcConfig=KylinConfig.getInstanceFromEnv();
    KylinConfig dstConfig=KylinConfig.createInstanceFromUri(dest);
    ResourceTool.copy(srcConfig,dstConfig,Lists.newArrayList(requiredResources));
    for (    String r : optionalResources) {
      try {
        ResourceTool.copy(srcConfig,dstConfig,Lists.newArrayList(r));
      }
 catch (      Exception e) {
        logger.warn("Exception when copying optional resource {}. May be caused by resource missing. skip it.",r);
      }
    }
    ResourceStore dstStore=ResourceStore.getStore(dstConfig);
    for (    CubeInstance cube : cubesToTrimAndSave) {
      CubeInstance trimmedCube=CubeInstance.getCopyOf(cube);
      trimmedCube.getSegments().clear();
      trimmedCube.setUuid(cube.getUuid());
      dstStore.putResource(trimmedCube.getResourcePath(),trimmedCube,CubeManager.CUBE_SERIALIZER);
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Exception",e);
  }
}

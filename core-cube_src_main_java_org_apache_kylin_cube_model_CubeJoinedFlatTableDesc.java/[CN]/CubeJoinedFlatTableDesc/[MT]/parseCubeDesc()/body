{
  long baseCuboidId=Cuboid.getBaseCuboidId(cubeDesc);
  Cuboid baseCuboid=Cuboid.findById(cubeDesc,baseCuboidId);
  if (cubeSegment == null) {
    this.tableName="kylin_intermediate_" + cubeDesc.getName();
  }
 else {
    this.tableName="kylin_intermediate_" + cubeDesc.getName() + "_"+ cubeSegment.getUuid().replaceAll("-","_");
  }
  int columnIndex=0;
  for (  TblColRef col : cubeDesc.listDimensionColumnsExcludingDerived(false)) {
    columnIndexMap.put(col,columnIndex);
    columnList.add(col);
    columnIndex++;
  }
  List<TblColRef> cuboidColumns=baseCuboid.getColumns();
  int rowkeyColCount=cubeDesc.getRowkey().getRowKeyColumns().length;
  rowKeyColumnIndexes=new int[rowkeyColCount];
  for (int i=0; i < rowkeyColCount; i++) {
    TblColRef col=cuboidColumns.get(i);
    Integer dimIdx=columnIndexMap.get(col);
    if (dimIdx == null) {
      throw new RuntimeException("Can't find column " + col);
    }
    rowKeyColumnIndexes[i]=dimIdx;
  }
  List<MeasureDesc> measures=cubeDesc.getMeasures();
  int measureSize=measures.size();
  measureColumnIndexes=new int[measureSize][];
  for (int i=0; i < measureSize; i++) {
    FunctionDesc func=measures.get(i).getFunction();
    List<TblColRef> colRefs=func.getParameter().getColRefs();
    if (colRefs == null) {
      measureColumnIndexes[i]=null;
    }
 else {
      measureColumnIndexes[i]=new int[colRefs.size()];
      for (int j=0; j < colRefs.size(); j++) {
        TblColRef c=colRefs.get(j);
        measureColumnIndexes[i][j]=columnList.indexOf(c);
        if (measureColumnIndexes[i][j] < 0) {
          measureColumnIndexes[i][j]=columnIndex;
          columnIndexMap.put(c,columnIndex);
          columnList.add(c);
          columnIndex++;
        }
      }
    }
  }
  if (cubeDesc.getDictionaries() != null) {
    for (    DictionaryDesc dictDesc : cubeDesc.getDictionaries()) {
      TblColRef c=dictDesc.getColumnRef();
      if (columnList.indexOf(c) < 0) {
        columnIndexMap.put(c,columnIndex);
        columnList.add(c);
        columnIndex++;
      }
      if (dictDesc.getResuseColumnRef() != null) {
        c=dictDesc.getResuseColumnRef();
        if (columnList.indexOf(c) < 0) {
          columnIndexMap.put(c,columnIndex);
          columnList.add(c);
          columnIndex++;
        }
      }
    }
  }
  columnCount=columnIndex;
  for (  DimensionDesc d : cubeDesc.getDimensions()) {
    if (d.getJoin() != null) {
      cubeJoins.add(d.getJoin());
    }
  }
}

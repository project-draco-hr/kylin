{
  if (rowValueDecoders == null) {
    List<RowValueDecoder> valueDecoderList=Lists.newArrayList();
    List<MeasureDesc> measuresDescs=Lists.newArrayList();
    for (    HBaseColumnFamilyDesc cfDesc : seg.getCubeDesc().getHBaseMapping().getColumnFamily()) {
      for (      HBaseColumnDesc colDesc : cfDesc.getColumns()) {
        valueDecoderList.add(new RowValueDecoder(colDesc));
        for (        MeasureDesc measure : colDesc.getMeasures()) {
          measuresDescs.add(measure);
        }
      }
    }
    rowValueDecoders=valueDecoderList.toArray(new RowValueDecoder[valueDecoderList.size()]);
  }
  ImmutableBytesWritable key=(ImmutableBytesWritable)inKey;
  parsedKey.set(key.get(),key.getOffset(),key.getLength());
  Result hbaseRow=(Result)inValue;
  for (int i=0; i < rowValueDecoders.length; i++) {
    rowValueDecoders[i].decode(hbaseRow);
    rowValueDecoders[i].loadCubeMeasureArray(parsedValue);
  }
  return parsedPair;
}

{
  if (isMergeFromCuboidFiles != null)   return isMergeFromCuboidFiles.booleanValue();
  final String confKey="kylin.isMergeFromCuboidFiles";
  if (jobConf != null) {
    String result=jobConf.get(confKey);
    if (result != null) {
      isMergeFromCuboidFiles=Boolean.valueOf(result);
      return isMergeFromCuboidFiles.booleanValue();
    }
  }
  boolean result=true;
  try {
    List<CubeSegment> mergingSegments=seg.getCubeInstance().getMergingSegments(seg);
    HBaseMRSteps steps=new HBaseMRSteps(seg);
    for (    CubeSegment mergingSeg : mergingSegments) {
      String cuboidRootPath=steps.getCuboidRootPath(mergingSeg);
      FileSystem fs=HadoopUtil.getFileSystem(cuboidRootPath);
      boolean cuboidFileExist=fs.exists(new Path(cuboidRootPath));
      if (cuboidFileExist == false) {
        logger.info("Merge from HTable because " + cuboidRootPath + " does not exist");
        result=false;
        break;
      }
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  isMergeFromCuboidFiles=Boolean.valueOf(result);
  if (jobConf != null) {
    jobConf.set(confKey,"" + result);
  }
  return result;
}

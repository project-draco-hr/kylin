{
  super(cubeDesc,dictionaryMap);
  this.cuboidScheduler=new CuboidScheduler(cubeDesc);
  this.baseCuboidId=Cuboid.getBaseCuboidId(cubeDesc);
  this.totalCuboidCount=cuboidScheduler.getCuboidCount();
  this.intermediateTableDesc=new CubeJoinedFlatTableDesc(cubeDesc,null);
  this.measureCodec=new MeasureCodec(cubeDesc.getMeasures());
  this.measureCount=cubeDesc.getMeasures().size();
  this.measureDescs=cubeDesc.getMeasures().toArray(new MeasureDesc[measureCount]);
  List<String> metricsAggrFuncsList=Lists.newArrayList();
  for (int i=0; i < measureCount; i++) {
    MeasureDesc measureDesc=measureDescs[i];
    metricsAggrFuncsList.add(measureDesc.getFunction().getExpression());
  }
  this.metricsAggrFuncs=metricsAggrFuncsList.toArray(new String[metricsAggrFuncsList.size()]);
}

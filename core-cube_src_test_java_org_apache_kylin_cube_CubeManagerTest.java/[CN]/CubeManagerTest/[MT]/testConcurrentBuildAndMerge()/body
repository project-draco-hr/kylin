{
  CubeManager mgr=CubeManager.getInstance(getTestConfig());
  CubeInstance cube=mgr.getCube("test_kylin_cube_with_slr_empty");
  getTestConfig().setMaxBuildingSegments(10);
  assertEquals(0,cube.getSegments().size());
  Map m1=Maps.newHashMap();
  m1.put(1,1000l);
  Map m2=Maps.newHashMap();
  m2.put(1,2000l);
  Map m3=Maps.newHashMap();
  m3.put(1,3000l);
  Map m4=Maps.newHashMap();
  m4.put(1,4000l);
  CubeSegment seg1=mgr.appendSegment(cube,0,0,0,1000,null,m1);
  seg1.setStatus(SegmentStatusEnum.READY);
  CubeSegment seg2=mgr.appendSegment(cube,0,0,1000,2000,m1,m2);
  seg2.setStatus(SegmentStatusEnum.READY);
  CubeSegment seg3=mgr.mergeSegments(cube,0,0,0000,2000,true);
  seg3.setStatus(SegmentStatusEnum.NEW);
  CubeSegment seg4=mgr.appendSegment(cube,0,0,2000,3000,m2,m3);
  seg4.setStatus(SegmentStatusEnum.NEW);
  seg4.setLastBuildJobID("test");
  seg4.setStorageLocationIdentifier("test");
  CubeSegment seg5=mgr.appendSegment(cube,0,0,3000,4000,m3,m4);
  seg5.setStatus(SegmentStatusEnum.READY);
  CubeUpdate cubeBuilder=new CubeUpdate(cube);
  mgr.updateCube(cubeBuilder);
  mgr.promoteNewlyBuiltSegments(cube,seg4);
  assertTrue(cube.getSegments().size() == 5);
  assertTrue(cube.getSegmentById(seg1.getUuid()) != null && cube.getSegmentById(seg1.getUuid()).getStatus() == SegmentStatusEnum.READY);
  assertTrue(cube.getSegmentById(seg2.getUuid()) != null && cube.getSegmentById(seg2.getUuid()).getStatus() == SegmentStatusEnum.READY);
  assertTrue(cube.getSegmentById(seg3.getUuid()) != null && cube.getSegmentById(seg3.getUuid()).getStatus() == SegmentStatusEnum.NEW);
  assertTrue(cube.getSegmentById(seg4.getUuid()) != null && cube.getSegmentById(seg4.getUuid()).getStatus() == SegmentStatusEnum.READY);
  assertTrue(cube.getSegmentById(seg5.getUuid()) != null && cube.getSegmentById(seg5.getUuid()).getStatus() == SegmentStatusEnum.READY);
}

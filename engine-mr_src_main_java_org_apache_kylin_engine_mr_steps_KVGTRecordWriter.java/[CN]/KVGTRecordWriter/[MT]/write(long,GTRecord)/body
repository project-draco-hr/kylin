{
  if (lastCuboidId == null || !lastCuboidId.equals(cuboidId)) {
    if (lastCuboidId != null) {
      logger.info("Cuboid " + lastCuboidId + " has "+ cuboidRowCount+ " rows");
      cuboidRowCount=0;
    }
    initVariables(cuboidId);
    lastCuboidId=cuboidId;
  }
  cuboidRowCount++;
  rowKeyEncoder.encode(record,record.getInfo().getPrimaryKey(),keyBuf);
  valueBuf.clear();
  try {
    record.exportColumns(measureColumns,valueBuf);
  }
 catch (  BufferOverflowException boe) {
    valueBuf=ByteBuffer.allocate((int)(record.sizeOf(measureColumns) * 1.5));
    record.exportColumns(measureColumns,valueBuf);
  }
  outputKey.set(keyBuf,0,keyBuf.length);
  outputValue.set(valueBuf.array(),0,valueBuf.position());
  writeAsKeyValue(outputKey,outputValue);
}

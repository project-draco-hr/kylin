{
  Options options=new Options();
  try {
    options.addOption(OPTION_JOB_NAME);
    options.addOption(OPTION_CUBE_NAME);
    options.addOption(OPTION_CUBING_JOB_ID);
    options.addOption(OPTION_OUTPUT_PATH);
    options.addOption(OPTION_SEGMENT_ID);
    options.addOption(OPTION_STATISTICS_ENABLED);
    options.addOption(OPTION_STATISTICS_OUTPUT);
    options.addOption(OPTION_STATISTICS_SAMPLING_PERCENT);
    parseOptions(options,args);
    job=Job.getInstance(getConf(),getOptionValue(OPTION_JOB_NAME));
    String job_id=getOptionValue(OPTION_CUBING_JOB_ID);
    job.getConfiguration().set(BatchConstants.ARG_CUBING_JOB_ID,job_id);
    String cubeName=getOptionValue(OPTION_CUBE_NAME);
    Path output=new Path(getOptionValue(OPTION_OUTPUT_PATH));
    String segmentID=getOptionValue(OPTION_SEGMENT_ID);
    String statistics_enabled=getOptionValue(OPTION_STATISTICS_ENABLED);
    String statistics_output=getOptionValue(OPTION_STATISTICS_OUTPUT);
    String statistics_sampling_percent=getOptionValue(OPTION_STATISTICS_SAMPLING_PERCENT);
    CubeManager cubeMgr=CubeManager.getInstance(KylinConfig.getInstanceFromEnv());
    CubeInstance cube=cubeMgr.getCube(cubeName);
    List<TblColRef> columnsNeedDict=cubeMgr.getAllDictColumnsOnFact(cube.getDescriptor());
    job.getConfiguration().set(BatchConstants.CFG_CUBE_NAME,cubeName);
    job.getConfiguration().set(BatchConstants.CFG_CUBE_SEGMENT_ID,segmentID);
    job.getConfiguration().set(BatchConstants.CFG_STATISTICS_ENABLED,statistics_enabled);
    job.getConfiguration().set(BatchConstants.CFG_STATISTICS_OUTPUT,statistics_output);
    job.getConfiguration().set(BatchConstants.CFG_STATISTICS_SAMPLING_PERCENT,statistics_sampling_percent);
    logger.info("Starting: " + job.getJobName());
    setJobClasspath(job,cube.getConfig());
    CubeSegment segment=cube.getSegmentById(segmentID);
    if (segment == null) {
      logger.error("Failed to find {} in cube {}",segmentID,cube);
      System.out.println("Failed to find {} in cube {} " + segmentID + ","+ cube);
      for (      CubeSegment s : cube.getSegments()) {
        logger.error(s.getName() + " with status " + s.getStatus());
        System.out.println(s.getName() + " with status " + s.getStatus());
      }
      throw new IllegalStateException();
    }
 else {
      logger.info("Found segment: " + segment);
      System.out.println("Found segment " + segment);
    }
    setupMapper(cube.getSegmentById(segmentID));
    setupReducer(output,"true".equalsIgnoreCase(statistics_enabled) ? columnsNeedDict.size() + 2 : columnsNeedDict.size());
    attachKylinPropsAndMetadata(cube,job.getConfiguration());
    return waitForCompletion(job);
  }
  finally {
    if (job != null)     cleanupTempConfFile(job.getConfiguration());
  }
}

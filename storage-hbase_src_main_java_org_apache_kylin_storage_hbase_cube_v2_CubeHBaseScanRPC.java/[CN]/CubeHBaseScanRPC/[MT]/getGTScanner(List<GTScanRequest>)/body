{
  final List<IGTScanner> scanners=Lists.newArrayList();
  for (  GTScanRequest request : scanRequests) {
    scanners.add(getGTScanner(request));
  }
  return new IGTScanner(){
    @Override public GTInfo getInfo(){
      return scanners.get(0).getInfo();
    }
    @Override public int getScannedRowCount(){
      int sum=0;
      for (      IGTScanner s : scanners) {
        sum+=s.getScannedRowCount();
      }
      return sum;
    }
    @Override public void close() throws IOException {
      for (      IGTScanner s : scanners) {
        s.close();
      }
    }
    @Override public Iterator<GTRecord> iterator(){
      return Iterators.concat(Iterators.transform(scanners.iterator(),new Function<IGTScanner,Iterator<GTRecord>>(){
        @Nullable @Override public Iterator<GTRecord> apply(        IGTScanner input){
          return input.iterator();
        }
      }
));
    }
  }
;
}

{
  final KylinConfig config=context.getConfig();
  Preconditions.checkNotNull(config.getSparkHome());
  Preconditions.checkNotNull(config.getSparkMaster());
  try {
    String cmd=String.format("%s/bin/spark-submit --class \"org.apache.kylin.common.util.SparkEntry\" --master %s %s %s",config.getSparkHome(),config.getSparkMaster(),config.getKylinSparkJobJarPath(),formatArgs());
    logger.info("cmd:" + cmd);
    final StringBuilder output=new StringBuilder();
    config.getCliCommandExecutor().execute(cmd,new Logger(){
      @Override public void log(      String message){
        output.append(message);
        output.append("\n");
        logger.info(message);
      }
    }
);
    return new ExecuteResult(ExecuteResult.State.SUCCEED,output.toString());
  }
 catch (  IOException e) {
    logger.error("error run spark job:",e);
    return new ExecuteResult(ExecuteResult.State.ERROR,e.getLocalizedMessage());
  }
}

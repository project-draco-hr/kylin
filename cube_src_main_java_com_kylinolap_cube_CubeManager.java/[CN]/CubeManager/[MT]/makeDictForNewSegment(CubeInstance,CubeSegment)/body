{
  List<CubeSegment> mergingSegments=cube.getMergingSegments(newSeg);
  HashSet<TblColRef> colsNeedMeringDict=new HashSet<TblColRef>();
  HashSet<TblColRef> colsNeedCopyDict=new HashSet<TblColRef>();
  DictionaryManager dictMgr=this.getDictionaryManager();
  for (  DimensionDesc dim : cube.getDescriptor().getDimensions()) {
    for (    TblColRef col : dim.getColumnRefs()) {
      if (newSeg.getCubeDesc().getRowkey().isUseDictionary(col)) {
        if (cube.getDescriptor().getFactTable().equalsIgnoreCase((String)dictMgr.decideSourceData(cube.getDescriptor(),col,null)[0])) {
          colsNeedMeringDict.add(col);
        }
 else {
          colsNeedCopyDict.add(col);
        }
      }
    }
  }
  for (  TblColRef col : colsNeedMeringDict) {
    logger.info("Merging fact table dictionary on : " + col);
    List<DictionaryInfo> dictInfos=new ArrayList<DictionaryInfo>();
    for (    CubeSegment segment : mergingSegments) {
      logger.info("Including fact table dictionary of segment : " + segment);
      DictionaryInfo dictInfo=dictMgr.getDictionaryInfo(segment.getDictResPath(col));
      dictInfos.add(dictInfo);
    }
    this.mergeDictionaries(newSeg,dictInfos,col);
  }
  for (  TblColRef col : colsNeedCopyDict) {
    String path=mergingSegments.get(0).getDictResPath(col);
    newSeg.putDictResPath(col,path);
  }
}

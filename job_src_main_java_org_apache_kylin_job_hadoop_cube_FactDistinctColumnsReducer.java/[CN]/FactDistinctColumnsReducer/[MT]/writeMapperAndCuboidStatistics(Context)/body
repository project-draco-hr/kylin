{
  Configuration conf=context.getConfiguration();
  FileSystem fs=FileSystem.get(conf);
  FSDataOutputStream out=fs.create(new Path(statisticsOutput,BatchConstants.CFG_STATISTICS_CUBE_ESTIMATION));
  try {
    long totalSum=0;
    String msg;
    for (int i=0; i < baseCuboidRowCountInMappers.size(); i++) {
      if (baseCuboidRowCountInMappers.get(i) > 0) {
        msg="Base Cuboid in Mapper " + i + " row count: \t "+ baseCuboidRowCountInMappers.get(i);
        out.write(msg.getBytes());
        out.write('\n');
      }
    }
    for (int i=0; i < rowCountInMappers.size(); i++) {
      if (rowCountInMappers.get(i) > 0) {
        msg="Cube segment in Mapper " + i + " total row count: \t "+ rowCountInMappers.get(i);
        totalSum+=rowCountInMappers.get(i);
        out.write(msg.getBytes());
        out.write('\n');
      }
    }
    msg="Sum of all the cube segments is: \t " + totalSum;
    out.write(msg.getBytes());
    out.write('\n');
    long grantTotal=rowKeyCountInCuboids.get(baseCuboidId + 1);
    msg="The merged cube has row count: \t " + grantTotal;
    out.write(msg.getBytes());
    out.write('\n');
    msg="The compaction rate is " + (grantTotal) + "/"+ totalSum+ " = "+ (grantTotal * 100.0) / totalSum + "%.";
    out.write(msg.getBytes());
    out.write('\n');
    out.write('\n');
    List<Long> allCuboids=new ArrayList<Long>();
    allCuboids.addAll(rowKeyCountInCuboids.keySet());
    Collections.sort(allCuboids);
    for (    long i : allCuboids) {
      if (i <= baseCuboidId) {
        msg="Cuboid " + i + " row count is: \t "+ rowKeyCountInCuboids.get(i);
      }
 else {
        msg="Total row count is: \t " + rowKeyCountInCuboids.get(i);
      }
      out.write(msg.getBytes());
      out.write('\n');
    }
  }
  finally {
    out.close();
  }
}

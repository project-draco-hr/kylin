{
  try {
    System.setProperty("log4j.configuration","kylin-log4j.properties");
    KylinConfig.setSandboxEnvIfPossible();
    overrideDevJobJarLocations();
    System.setProperty("spring.profiles.active","testing");
    if (System.getProperty("catalina.home") == null)     System.setProperty("catalina.home",".");
    if (StringUtils.isEmpty(System.getProperty("hdp.version"))) {
      throw new RuntimeException("No hdp.version set; Please set hdp.version in your jvm option, for example: -Dhdp.version=2.2.4.2-2");
    }
    if (Shell.WINDOWS) {
{
        Field field=Shell.class.getDeclaredField("WINDOWS");
        field.setAccessible(true);
        Field modifiersField=Field.class.getDeclaredField("modifiers");
        modifiersField.setAccessible(true);
        modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL);
        field.set(null,false);
      }
{
        Field field=java.io.File.class.getDeclaredField("pathSeparator");
        field.setAccessible(true);
        Field modifiersField=Field.class.getDeclaredField("modifiers");
        modifiersField.setAccessible(true);
        modifiersField.setInt(field,field.getModifiers() & ~Modifier.FINAL);
        field.set(null,":");
      }
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}

{
  if (getInput() instanceof OLAPFilterRel) {
    OLAPFilterRel filter=(OLAPFilterRel)getInput();
    RelNode inputOfFilter=inputs.get(0).getInput(0);
    RexProgram program=RexProgram.create(inputOfFilter.getRowType(),this.rewriteProjects,filter.getCondition(),this.rowType,getCluster().getRexBuilder());
    return new EnumerableCalc(getCluster(),getCluster().traitSetOf(EnumerableConvention.INSTANCE),inputOfFilter,program,ImmutableList.<RelCollation>of());
  }
 else {
    EnumerableRel input=sole(inputs);
    RexProgram program=RexProgram.create(input.getRowType(),this.rewriteProjects,null,this.rowType,getCluster().getRexBuilder());
    return new EnumerableCalc(getCluster(),getCluster().traitSetOf(EnumerableConvention.INSTANCE),input,program,ImmutableList.<RelCollation>of());
  }
}

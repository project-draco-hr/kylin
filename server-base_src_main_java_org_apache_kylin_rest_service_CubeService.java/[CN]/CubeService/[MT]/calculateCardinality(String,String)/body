{
  String[] dbTableName=HadoopUtil.parseHiveTableName(tableName);
  tableName=dbTableName[0] + "." + dbTableName[1];
  TableDesc table=getMetadataManager().getTableDesc(tableName);
  final Map<String,String> tableExd=getMetadataManager().getTableDescExd(tableName);
  if (tableExd == null || table == null) {
    IllegalArgumentException e=new IllegalArgumentException("Cannot find table descirptor " + tableName);
    logger.error("Cannot find table descirptor " + tableName,e);
    throw e;
  }
  DefaultChainedExecutable job=new DefaultChainedExecutable();
  job.setName("Hive Column Cardinality calculation for table '" + tableName + "'");
  job.setSubmitter(submitter);
  String outPath=HiveColumnCardinalityJob.OUTPUT_PATH + "/" + tableName;
  String param="-table " + tableName + " -output "+ outPath;
  MapReduceExecutable step1=new MapReduceExecutable();
  step1.setMapReduceJobClass(HiveColumnCardinalityJob.class);
  step1.setMapReduceParams(param);
  job.addTask(step1);
  HadoopShellExecutable step2=new HadoopShellExecutable();
  step2.setJobClass(HiveColumnCardinalityUpdateJob.class);
  step2.setJobParams(param);
  job.addTask(step2);
  getExecutableManager().addJob(job);
}

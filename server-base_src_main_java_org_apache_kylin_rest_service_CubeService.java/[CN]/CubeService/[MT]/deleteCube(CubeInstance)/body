{
  final List<CubingJob> cubingJobs=listAllCubingJobs(cube.getName(),null,EnumSet.of(ExecutableState.READY,ExecutableState.RUNNING));
  if (!cubingJobs.isEmpty()) {
    throw new JobException("The cube " + cube.getName() + " has running job, please discard it and try again.");
  }
  try {
    this.releaseAllJobs(cube);
  }
 catch (  Exception e) {
    logger.error("error when releasing all jobs",e);
  }
  int cubeNum=getCubeManager().getCubesByDesc(cube.getDescriptor().getName()).size();
  getCubeManager().dropCube(cube.getName(),cubeNum == 1);
  accessService.clean(cube,true);
}

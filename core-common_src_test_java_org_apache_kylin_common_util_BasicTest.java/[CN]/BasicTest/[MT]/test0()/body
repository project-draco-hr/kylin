{
  ExecutorService executorService=Executors.newCachedThreadPool();
  List<Future<?>> futures=Lists.newArrayList();
  futures.add(executorService.submit(new Runnable(){
    @Override public void run(){
      throw new RuntimeException("hi");
    }
  }
));
  futures.add(executorService.submit(new Runnable(){
    @Override public void run(){
      try {
        Thread.sleep(2000);
        System.out.println("finish 1");
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
));
  try {
    for (    Future<?> future : futures) {
      future.get(1,TimeUnit.HOURS);
    }
  }
 catch (  InterruptedException|ExecutionException|TimeoutException e) {
    System.out.println(e.getMessage());
  }
  futures.clear();
  futures.add(executorService.submit(new Runnable(){
    @Override public void run(){
      try {
        Thread.sleep(3000);
        System.out.println("finish 2");
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
));
  try {
    for (    Future<?> future : futures) {
      future.get(1,TimeUnit.HOURS);
    }
  }
 catch (  InterruptedException|ExecutionException|TimeoutException e) {
    System.out.println(e.getMessage());
  }
}

{
  if (StringUtils.isBlank(kylinDependency))   return;
  String[] fNameList=kylinDependency.split(",");
  try {
    Configuration jobConf=job.getConfiguration();
    FileSystem localfs=FileSystem.getLocal(jobConf);
    FileSystem hdfs=FileSystem.get(jobConf);
    StringBuilder jarList=new StringBuilder();
    StringBuilder fileList=new StringBuilder();
    for (    String fileName : fNameList) {
      Path p=new Path(fileName);
      if (p.isAbsolute() == false) {
        logger.warn("The directory of kylin dependency '" + fileName + "' is not absolute, skip");
        continue;
      }
      FileSystem fs;
      if (hdfs.exists(p)) {
        fs=hdfs;
      }
 else       if (localfs.exists(p)) {
        fs=localfs;
      }
 else {
        logger.warn("The directory of kylin dependency '" + fileName + "' does not exist, skip");
        continue;
      }
      if (fs.getFileStatus(p).isDirectory()) {
        appendTmpDir(job,fs,p,jarList,fileList);
        continue;
      }
      StringBuilder list=(p.getName().endsWith(".jar")) ? jarList : fileList;
      if (list.length() > 0)       list.append(",");
      list.append(fs.getFileStatus(p).getPath());
    }
    appendTmpFiles(fileList.toString(),jobConf);
    appendTmpJars(jarList.toString(),jobConf);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}

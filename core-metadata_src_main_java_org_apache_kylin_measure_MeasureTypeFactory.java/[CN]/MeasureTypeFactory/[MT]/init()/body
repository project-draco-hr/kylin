{
  if (factories.isEmpty() == false)   return;
  List<MeasureTypeFactory<?>> factoryInsts=Lists.newArrayList();
  factoryInsts.add(new HLLCMeasureType.Factory());
  factoryInsts.add(new BitmapMeasureType.Factory());
  factoryInsts.add(new TopNMeasureType.Factory());
  factoryInsts.add(new ExtendedColumnMeasureType.Factory());
  for (  MeasureTypeFactory<?> factory : factoryInsts) {
    String funcName=factory.getAggrFunctionName();
    if (funcName.equals(funcName.toUpperCase()) == false)     throw new IllegalArgumentException("Aggregation function name '" + funcName + "' must be in upper case");
    String dataTypeName=factory.getAggrDataTypeName();
    if (dataTypeName.equals(dataTypeName.toLowerCase()) == false)     throw new IllegalArgumentException("Aggregation data type name '" + dataTypeName + "' must be in lower case");
    Class<? extends DataTypeSerializer<?>> serializer=factory.getAggrDataTypeSerializer();
    DataType.register(dataTypeName);
    DataTypeSerializer.register(dataTypeName,serializer);
    List<MeasureTypeFactory<?>> list=factories.get(funcName);
    if (list == null)     factories.put(funcName,list=Lists.newArrayListWithCapacity(2));
    list.add(factory);
  }
  defaultFactory.add(new BasicMeasureType.Factory());
}

{
  config=metadataManager.getConfig();
  if (this.modelName == null || this.modelName.length() == 0) {
    throw new RuntimeException("The cubeDesc '" + this.getName() + "' doesn't have data model specified.");
  }
  this.model=MetadataManager.getInstance(config).getDataModelDesc(this.modelName);
  if (this.model == null) {
    throw new RuntimeException("No data model found with name '" + modelName + "'.");
  }
  timestampDimension=timestampDimension.toUpperCase();
  DimensionDesc.capicalizeStrings(bitmapDimensions);
  DimensionDesc.capicalizeStrings(valueDimensions);
  StringUtil.toUpperCaseArray(metricNames,metricNames);
  HashSet<String> allTableNames=Sets.newHashSet();
  measureDescs=Lists.newArrayList();
  measureDescs.add(makeCountMeasure());
  for (  DimensionDesc dimensionDesc : Iterables.concat(bitmapDimensions,valueDimensions)) {
    TableDesc tableDesc=this.getTableDesc(dimensionDesc.getTable());
    for (    String column : dimensionDesc.getColumns()) {
      ColumnDesc columnDesc=tableDesc.findColumnByName(column);
      TblColRef tcr=new TblColRef(columnDesc);
      allColumns.add(tcr);
      allDimensions.add(tcr);
      measureDescs.add(makeHLLMeasure(columnDesc,"hllc10"));
    }
    if (!allTableNames.contains(tableDesc.getIdentity())) {
      allTableNames.add(tableDesc.getIdentity());
      allTables.add(tableDesc);
    }
  }
  for (  String column : metricNames) {
    TableDesc tableDesc=this.getTableDesc(this.getFactTableName());
    ColumnDesc columnDesc=tableDesc.findColumnByName(column);
    allColumns.add(new TblColRef(columnDesc));
    measureDescs.add(makeNormalMeasure("SUM",columnDesc));
    measureDescs.add(makeNormalMeasure("MIN",columnDesc));
    measureDescs.add(makeNormalMeasure("MAX",columnDesc));
    if (!allTableNames.contains(tableDesc.getIdentity())) {
      allTableNames.add(tableDesc.getIdentity());
      allTables.add(tableDesc);
    }
  }
  bitmapCols=new int[DimensionDesc.getColumnCount(bitmapDimensions)];
  valueCols=new int[DimensionDesc.getColumnCount(valueDimensions)];
  metricsCols=new int[metricNames.length];
  metricsColSet=new BitSet(this.getTableDesc(this.getFactTableName()).getColumnCount());
  int totalIndex=0;
  for (int i=0; i < bitmapCols.length; ++i, ++totalIndex) {
    bitmapCols[i]=totalIndex;
  }
  for (int i=0; i < valueCols.length; ++i, ++totalIndex) {
    valueCols[i]=totalIndex;
  }
  for (int i=0; i < metricsCols.length; ++i, ++totalIndex) {
    metricsCols[i]=totalIndex;
    metricsColSet.set(totalIndex);
  }
  tsCol=-1;
  for (int i=0; i < allColumns.size(); ++i) {
    TblColRef col=allColumns.get(i);
    if (col.isSameAs(this.getFactTableName(),this.timestampDimension)) {
      tsCol=i;
      break;
    }
  }
  if (tsCol < 0)   throw new RuntimeException("timestamp_dimension is not in bitmapDimensions or valueDimensions");
}

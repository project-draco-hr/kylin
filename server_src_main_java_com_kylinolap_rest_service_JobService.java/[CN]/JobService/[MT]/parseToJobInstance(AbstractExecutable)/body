{
  if (job == null) {
    return null;
  }
  Preconditions.checkState(job instanceof CubingJob,"illegal job type, id:" + job.getId());
  CubingJob cubeJob=(CubingJob)job;
  final JobInstance result=new JobInstance();
  result.setName(job.getName());
  result.setRelatedCube(cubeJob.getCubeName());
  result.setRelatedSegment(cubeJob.getSegmentId());
  result.setLastModified(cubeJob.getLastModified());
  result.setSubmitter(cubeJob.getSubmitter());
  result.setUuid(cubeJob.getId());
  result.setType(CubeBuildTypeEnum.BUILD);
  result.setStatus(parseToJobStatus(job.getStatus()));
  result.setMrWaiting(cubeJob.getMapReduceWaitTime());
  result.setDuration(cubeJob.getDuration());
  for (int i=0; i < cubeJob.getTasks().size(); ++i) {
    AbstractExecutable task=cubeJob.getTasks().get(i);
    result.addStep(parseToJobStep(task,i));
  }
  return result;
}

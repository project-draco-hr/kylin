{
  final List<CubingJob> cubingJobs=listAllCubingJobs(cube.getName(),null,EnumSet.allOf(ExecutableState.class));
  for (  CubingJob job : cubingJobs) {
    if (job.getStatus() == ExecutableState.READY || job.getStatus() == ExecutableState.RUNNING) {
      throw new JobException("The cube " + cube.getName() + " has running job("+ job.getId()+ ") please discard it and try again.");
    }
  }
  CubingJob job;
  CubingJobBuilder builder=new CubingJobBuilder(new JobEngineConfig(getConfig()));
  builder.setSubmitter(submitter);
  if (buildType == CubeBuildTypeEnum.BUILD) {
    CubeSegment newSeg=getCubeManager().appendSegments(cube,startDate,endDate);
    job=builder.buildJob(newSeg);
  }
 else   if (buildType == CubeBuildTypeEnum.MERGE) {
    CubeSegment newSeg=getCubeManager().mergeSegments(cube,startDate,endDate);
    job=builder.mergeJob(newSeg);
  }
 else {
    throw new JobException("invalid build type:" + buildType);
  }
  getExecutableManager().addJob(job);
  return parseToJobInstance(job);
}

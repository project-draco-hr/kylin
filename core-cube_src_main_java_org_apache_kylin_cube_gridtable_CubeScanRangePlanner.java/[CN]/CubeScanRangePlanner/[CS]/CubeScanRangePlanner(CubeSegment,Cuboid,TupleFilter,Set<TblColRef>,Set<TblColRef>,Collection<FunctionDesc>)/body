{
  this.maxScanRanges=KylinConfig.getInstanceFromEnv().getQueryStorageVisitScanRangeMax();
  this.maxFuzzyKeys=KylinConfig.getInstanceFromEnv().getQueryScanFuzzyKeyMax();
  this.cubeSegment=cubeSegment;
  this.cubeDesc=cubeSegment.getCubeDesc();
  this.cuboid=cuboid;
  Set<TblColRef> filterDims=Sets.newHashSet();
  TupleFilter.collectColumns(filter,filterDims);
  this.gtInfo=CubeGridTable.newGTInfo(cubeSegment,cuboid.getId());
  CuboidToGridTableMapping mapping=cuboid.getCuboidToGridTableMapping();
  IGTComparator comp=gtInfo.getCodeSystem().getComparator();
  this.rangeStartComparator=RecordComparators.getRangeStartComparator(comp);
  this.rangeEndComparator=RecordComparators.getRangeEndComparator(comp);
  this.rangeStartEndComparator=RecordComparators.getRangeStartEndComparator(comp);
  this.gtFilter=GTUtil.convertFilterColumnsAndConstants(filter,gtInfo,mapping.getCuboidDimensionsInGTOrder(),groupbyDims);
  this.gtDimensions=mapping.makeGridTableColumns(dimensions);
  this.gtAggrGroups=mapping.makeGridTableColumns(replaceDerivedColumns(groupbyDims,cubeSegment.getCubeDesc()));
  this.gtAggrMetrics=mapping.makeGridTableColumns(metrics);
  this.gtAggrFuncs=mapping.makeAggrFuncs(metrics);
  if (cubeSegment.getModel().getPartitionDesc().isPartitioned()) {
    int index=mapping.getIndexOf(cubeSegment.getModel().getPartitionDesc().getPartitionDateColumnRef());
    if (index >= 0) {
      SegmentGTStartAndEnd segmentGTStartAndEnd=new SegmentGTStartAndEnd(cubeSegment,gtInfo);
      this.gtStartAndEnd=segmentGTStartAndEnd.getSegmentStartAndEnd(index);
      this.isPartitionColUsingDatetimeEncoding=segmentGTStartAndEnd.isUsingDatetimeEncoding(index);
      this.gtPartitionCol=gtInfo.colRef(index);
    }
  }
}

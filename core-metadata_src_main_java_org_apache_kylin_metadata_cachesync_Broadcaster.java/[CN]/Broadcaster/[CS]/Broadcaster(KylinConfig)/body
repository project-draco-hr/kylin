{
  this.config=config;
  final String[] nodes=config.getRestServers();
  if (nodes == null || nodes.length < 1) {
    logger.warn("There is no available rest server; check the 'kylin.rest.servers' config");
    broadcastEvents=null;
    return;
  }
  logger.debug(nodes.length + " nodes in the cluster: " + Arrays.toString(nodes));
  Executors.newSingleThreadExecutor(new DaemonThreadFactory()).execute(new Runnable(){
    @Override public void run(){
      final List<RestClient> restClients=Lists.newArrayList();
      for (      String node : config.getRestServers()) {
        restClients.add(new RestClient(node));
      }
      final ExecutorService wipingCachePool=Executors.newFixedThreadPool(restClients.size());
      while (true) {
        try {
          final BroadcastEvent broadcastEvent=broadcastEvents.takeFirst();
          logger.info("Announcing new broadcast event:" + broadcastEvent);
          for (          final RestClient restClient : restClients) {
            wipingCachePool.execute(new Runnable(){
              @Override public void run(){
                try {
                  restClient.wipeCache(broadcastEvent.getEntity(),broadcastEvent.getEvent(),broadcastEvent.getCacheKey());
                }
 catch (                IOException e) {
                  logger.warn("Thread failed during wipe cache at " + broadcastEvent);
                }
              }
            }
);
          }
        }
 catch (        Exception e) {
          logger.error("error running wiping",e);
        }
      }
    }
  }
);
}

{
  List<CubeInstance> cubes=this.getCubeManager().listAllCubes();
  MetricsResponse metrics=new MetricsResponse();
  Date startTime=(null == request.getStartTime()) ? new Date(-1) : request.getStartTime();
  Date endTime=(null == request.getEndTime()) ? new Date() : request.getEndTime();
  metrics.increase("totalCubes",(float)0);
  metrics.increase("totalStorage",(float)0);
  for (  CubeInstance cube : cubes) {
    Date createdDate=new Date(-1);
    createdDate=(cube.getCreateTimeUTC() == 0) ? createdDate : new Date(cube.getCreateTimeUTC());
    if (createdDate.getTime() > startTime.getTime() && createdDate.getTime() < endTime.getTime()) {
      metrics.increase("totalCubes");
    }
  }
  metrics.increase("aveStorage",(metrics.get("totalCubes") == 0) ? 0 : metrics.get("totalStorage") / metrics.get("totalCubes"));
  return metrics;
}

{
  final List<CubingJob> cubingJobs=listAllCubingJobs(cube.getName(),null,EnumSet.of(ExecutableState.READY,ExecutableState.RUNNING));
  if (!cubingJobs.isEmpty()) {
    throw new JobException("Cube schema shouldn't be changed with running job.");
  }
  try {
    CubeDesc updatedCubeDesc=getCubeDescManager().updateCubeDesc(desc);
    if (!updatedCubeDesc.getError().isEmpty()) {
      return updatedCubeDesc;
    }
    cube=getCubeManager().updateCube(cube);
    int cuboidCount=CuboidCLI.simulateCuboidGeneration(updatedCubeDesc);
    logger.info("Updated cube " + cube.getName() + " has "+ cuboidCount+ " cuboids");
    return updatedCubeDesc;
  }
 catch (  IOException e) {
    throw new InternalErrorException("Failed to deal with the request.",e);
  }
}

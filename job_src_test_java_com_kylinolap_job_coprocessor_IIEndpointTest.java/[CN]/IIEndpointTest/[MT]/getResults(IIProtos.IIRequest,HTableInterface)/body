{
  Map<byte[],List<TableRecord>> results=table.coprocessorService(IIProtos.RowsService.class,null,null,new Batch.Call<IIProtos.RowsService,List<TableRecord>>(){
    public List<TableRecord> call(    IIProtos.RowsService counter) throws IOException {
      ServerRpcController controller=new ServerRpcController();
      BlockingRpcCallback<IIProtos.IIResponse> rpcCallback=new BlockingRpcCallback<>();
      counter.getRows(controller,request,rpcCallback);
      IIProtos.IIResponse response=rpcCallback.get();
      if (controller.failedOnException()) {
        throw controller.getFailedOn();
      }
      List<TableRecord> records=new ArrayList<>();
      TableRecordInfoDigest recordInfo=new TableRecordInfo(seg);
      for (      ByteString raw : response.getRowsList()) {
        TableRecord record=new TableRecord(recordInfo);
        record.setBytes(raw.toByteArray(),0,raw.size());
        System.out.println(record);
        records.add(record);
      }
      return records;
    }
  }
);
  List<TableRecord> ret=new ArrayList<TableRecord>();
  for (  Map.Entry<byte[],List<TableRecord>> entry : results.entrySet()) {
    System.out.println("result count : " + entry.getValue().size());
    ret.addAll(entry.getValue());
  }
  return ret;
}

{
  Options options=new Options();
  try {
    options.addOption(OPTION_II_NAME);
    parseOptions(options,args);
    String iiname=getOptionValue(OPTION_II_NAME);
    KylinConfig config=KylinConfig.getInstanceFromEnv();
    IIInstance iiInstance=IIManager.getInstance(config).getII(iiname);
    IIDesc iidesc=IIDescManager.getInstance(config).getIIDesc(iiInstance.getDescName());
    String jobUUID="00bf87b5-c7b5-4420-a12a-07f6b37b3187";
    JobEngineConfig engineConfig=new JobEngineConfig(config);
    IJoinedFlatTableDesc intermediateTableDesc=new IIJoinedFlatTableDesc(iidesc);
    String dropTableHql=JoinedFlatTable.generateDropTableStatement(intermediateTableDesc,jobUUID);
    String createTableHql=JoinedFlatTable.generateCreateTableStatement(intermediateTableDesc,JobInstance.getJobWorkingDir(jobUUID,engineConfig.getHdfsWorkingDirectory()),jobUUID);
    String insertDataHqls=JoinedFlatTable.generateInsertDataStatement(intermediateTableDesc,jobUUID,engineConfig);
    StringBuffer buf=new StringBuffer();
    buf.append("hive -e \"");
    buf.append(dropTableHql + "\n");
    buf.append(createTableHql + "\n");
    buf.append(insertDataHqls + "\n");
    buf.append("\"");
    System.out.println(buf.toString());
    System.out.println("========================");
    ShellCmd cmd=new ShellCmd(buf.toString(),null,0,null,null,false);
    ICommandOutput output=cmd.execute();
    System.out.println(output.getOutput());
    System.out.println(output.getExitCode());
    return 0;
  }
 catch (  Exception e) {
    logger.error("error execute IIFlattenHiveJob",e);
    printUsage(options);
    throw e;
  }
}

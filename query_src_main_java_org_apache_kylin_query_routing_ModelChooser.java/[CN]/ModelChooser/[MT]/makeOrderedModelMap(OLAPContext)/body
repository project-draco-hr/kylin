{
  KylinConfig kylinConfig=context.olapSchema.getConfig();
  String projectName=context.olapSchema.getProjectName();
  String factTableName=context.firstTableScan.getOlapTable().getTableName();
  Set<IRealization> realizations=ProjectManager.getInstance(kylinConfig).getRealizationsByTable(projectName,factTableName);
  final Map<DataModelDesc,Set<IRealization>> models=Maps.newHashMap();
  final Map<DataModelDesc,RealizationCost> costs=Maps.newHashMap();
  for (  IRealization real : realizations) {
    if (real.isReady() == false)     continue;
    if (real.getAllColumns().containsAll(context.allColumns) == false)     continue;
    if (RemoveBlackoutRealizationsRule.accept(real) == false)     continue;
    RealizationCost cost=new RealizationCost(real);
    DataModelDesc m=real.getDataModelDesc();
    Set<IRealization> set=models.get(m);
    if (set == null) {
      set=Sets.newHashSet();
      set.add(real);
      models.put(m,set);
      costs.put(m,cost);
    }
 else {
      set.add(real);
      RealizationCost curCost=costs.get(m);
      if (cost.compareTo(curCost) < 0)       costs.put(m,cost);
    }
  }
  TreeMap<DataModelDesc,Set<IRealization>> result=Maps.newTreeMap(new Comparator<DataModelDesc>(){
    @Override public int compare(    DataModelDesc o1,    DataModelDesc o2){
      return costs.get(o1).compareTo(costs.get(o2));
    }
  }
);
  result.putAll(models);
  return result;
}

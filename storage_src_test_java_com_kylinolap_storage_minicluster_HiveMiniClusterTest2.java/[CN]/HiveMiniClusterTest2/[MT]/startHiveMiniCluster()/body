{
  try {
    FileUtils.forceMkdir(HIVE_BASE_DIR);
    FileUtils.forceMkdir(HIVE_SCRATCH_DIR);
    FileUtils.forceMkdir(HIVE_LOCAL_SCRATCH_DIR);
    FileUtils.forceMkdir(HIVE_LOGS_DIR);
    FileUtils.forceMkdir(HIVE_TMP_DIR);
    FileUtils.forceMkdir(HIVE_WAREHOUSE_DIR);
    FileUtils.forceMkdir(HIVE_HADOOP_TMP_DIR);
    FileUtils.forceMkdir(HIVE_TESTDATA_DIR);
  }
 catch (  IOException e1) {
    e1.printStackTrace();
    System.exit(1);
  }
  System.setProperty("javax.jdo.option.ConnectionURL","jdbc:derby:;databaseName=" + HIVE_METADB_DIR.getAbsolutePath() + ";create=true");
  System.setProperty("hive.metastore.warehouse.dir",HIVE_WAREHOUSE_DIR.getAbsolutePath());
  System.setProperty("hive.exec.scratchdir",HIVE_SCRATCH_DIR.getAbsolutePath());
  System.setProperty("hive.exec.local.scratchdir",HIVE_LOCAL_SCRATCH_DIR.getAbsolutePath());
  System.setProperty("hive.metastore.metadb.dir",HIVE_METADB_DIR.getAbsolutePath());
  System.setProperty("test.log.dir",HIVE_LOGS_DIR.getAbsolutePath());
  System.setProperty("hive.querylog.location",HIVE_TMP_DIR.getAbsolutePath());
  System.setProperty("hadoop.tmp.dir",HIVE_HADOOP_TMP_DIR.getAbsolutePath());
  System.setProperty("derby.stream.error.file",HIVE_BASE_DIR.getAbsolutePath() + "/derby.log");
  System.setProperty("hive.server2.long.polling.timeout","5000");
  HiveConf conf=new HiveConf();
  try {
    MiniHBaseCluster miniCluster=testUtil.startMiniCluster(1);
    MiniMRCluster miniMR=testUtil.startMiniMapReduceCluster();
    Configuration config=miniCluster.getConf();
    String jobTracker=miniMR.createJobConf(new JobConf(config)).get("mapreduce.jobtracker.address");
    System.setProperty("mapred.job.tracker",jobTracker);
    System.setProperty("mapreduce.jobtracker.address",jobTracker);
    System.setProperty("mapred.job.tracker",miniMR.createJobConf(new JobConf(conf)).get("mapred.job.tracker"));
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

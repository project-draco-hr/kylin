{
  DataType type=partitionColRef.getColumnDesc().getType();
  String startTimeStr, endTimeStr;
  CompareTupleFilter startFilter=null, endFilter=null;
  if (tsRange.hasLowerBound()) {
    startTimeStr=formatTimeStr(type,tsRange.lowerEndpoint());
    if (tsRange.lowerBoundType() == BoundType.CLOSED) {
      startFilter=new CompareTupleFilter(TupleFilter.FilterOperatorEnum.GTE);
    }
 else {
      startFilter=new CompareTupleFilter(TupleFilter.FilterOperatorEnum.GT);
    }
    ColumnTupleFilter columnTupleFilter=new ColumnTupleFilter(partitionColRef);
    ConstantTupleFilter constantTupleFilter=new ConstantTupleFilter(startTimeStr);
    startFilter.addChild(columnTupleFilter);
    startFilter.addChild(constantTupleFilter);
  }
  if (tsRange.hasUpperBound()) {
    endTimeStr=formatTimeStr(type,tsRange.upperEndpoint());
    if (tsRange.upperBoundType() == BoundType.CLOSED) {
      endFilter=new CompareTupleFilter(TupleFilter.FilterOperatorEnum.LTE);
    }
 else {
      endFilter=new CompareTupleFilter(TupleFilter.FilterOperatorEnum.LT);
    }
    ColumnTupleFilter columnTupleFilter=new ColumnTupleFilter(partitionColRef);
    ConstantTupleFilter constantTupleFilter=new ConstantTupleFilter(endTimeStr);
    endFilter.addChild(columnTupleFilter);
    endFilter.addChild(constantTupleFilter);
  }
  if (originFilter == null) {
    if (endFilter == null) {
      return startFilter;
    }
    if (startFilter == null) {
      return endFilter;
    }
  }
  LogicalTupleFilter logicalTupleFilter=new LogicalTupleFilter(TupleFilter.FilterOperatorEnum.AND);
  if (originFilter != null) {
    logicalTupleFilter.addChild(originFilter);
  }
  if (startFilter != null) {
    logicalTupleFilter.addChild(startFilter);
  }
  if (endFilter != null) {
    logicalTupleFilter.addChild(endFilter);
  }
  return logicalTupleFilter;
}

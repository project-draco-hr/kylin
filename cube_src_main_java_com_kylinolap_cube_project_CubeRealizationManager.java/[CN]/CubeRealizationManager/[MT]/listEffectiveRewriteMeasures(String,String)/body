{
  factTable=factTable.toUpperCase();
  HashSet<CubeDesc> relatedCubeDesc=Sets.newHashSet();
  HashSet<InvertedIndexDesc> relatedIIDesc=Sets.newHashSet();
  for (  CubeInstance cube : getProjectTable(project,factTable).getCubes()) {
    if (!cube.isReady())     continue;
    if (cube.getDescriptor().getModel().isFactTable(factTable) == false)     continue;
    relatedCubeDesc.add(cube.getDescriptor());
    if (cube.getInvertedIndexDesc() != null) {
      relatedIIDesc.add(cube.getInvertedIndexDesc());
    }
  }
  List<MeasureDesc> result=Lists.newArrayList();
  for (  CubeDesc desc : relatedCubeDesc) {
    for (    MeasureDesc m : desc.getMeasures()) {
      FunctionDesc func=m.getFunction();
      if (func.needRewrite())       result.add(m);
    }
  }
  for (  InvertedIndexDesc desc : relatedIIDesc) {
    for (    MeasureDesc m : desc.getMeasureDescs()) {
      FunctionDesc func=m.getFunction();
      if (func.needRewrite())       result.add(m);
    }
  }
  return result;
}

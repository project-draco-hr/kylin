{
  this.expectedSize=expectedSize;
  this.queue=new ArrayBlockingQueue<byte[]>(expectedSize);
  Configuration hconf=HBaseConnection.getCurrentHBaseConfiguration();
  this.timeout=hconf.getInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,5) * hconf.getInt(HConstants.HBASE_CLIENT_OPERATION_TIMEOUT,60000);
  this.timeout=Math.max(this.timeout,5 * 60000);
  this.timeout*=KylinConfig.getInstanceFromEnv().getCubeVisitTimeoutTimes();
  if (BackdoorToggles.getQueryTimeout() != -1) {
    this.timeout=BackdoorToggles.getQueryTimeout();
  }
  this.timeout*=1.1;
  logger.info("Timeout for ExpectedSizeIterator is: " + this.timeout);
  this.timeoutTS=System.currentTimeMillis() + this.timeout;
}

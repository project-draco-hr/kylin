{
  CapabilityResult result=new CapabilityResult();
  result.capable=false;
  if (!digest.factTable.equalsIgnoreCase(ii.getFactTable())) {
    logger.info("Exclude II " + ii.getName() + " because fact table unmatch");
    return result;
  }
  boolean matchJoin=isMatchedWithJoins(digest.joinDescs,ii);
  if (!matchJoin) {
    logger.info("Exclude II " + ii.getName() + " because unmatched joins");
    return result;
  }
  Collection<TblColRef> dimensionColumns=getDimensionColumns(digest);
  Collection<FunctionDesc> aggrFunctions=digest.aggregations;
  Collection<TblColRef> unmatchedDimensions=unmatchedDimensions(dimensionColumns,ii);
  Collection<FunctionDesc> unmatchedAggregations=unmatchedAggregations(aggrFunctions,ii);
  if (!unmatchedAggregations.isEmpty()) {
    tryDimensionAsMeasures(unmatchedAggregations,digest,ii,result);
  }
  if (!unmatchedDimensions.isEmpty()) {
    logger.info("Exclude ii " + ii.getName() + " because unmatched dimensions");
    return result;
  }
  if (!unmatchedAggregations.isEmpty()) {
    logger.info("Exclude ii " + ii.getName() + " because unmatched aggregations");
    return result;
  }
  result.capable=true;
  return result;
}

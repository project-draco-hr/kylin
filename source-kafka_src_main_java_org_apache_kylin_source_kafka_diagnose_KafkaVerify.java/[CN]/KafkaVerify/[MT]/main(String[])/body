{
  System.out.println("start");
  ObjectMapper mapper=new ObjectMapper();
  JavaType mapType=MapType.construct(HashMap.class,SimpleType.construct(String.class),SimpleType.construct(String.class));
  long start=Long.valueOf(args[0]);
  long end=Long.valueOf(args[1]);
  long interval=Long.valueOf(args[2]);
  int bucket=(int)((end - start + interval - 1) / interval);
  long[] qtySum=new long[bucket];
  long qtyTotal=0;
  long[] counts=new long[bucket];
  long countTotal=0;
  long processed=0;
  long minOffset=-1;
  long maxOffset=-1;
  try (BufferedReader br=new BufferedReader(new FileReader(new File(args[3])))){
    String s;
    while ((s=br.readLine()) != null) {
      if (++processed % 10000 == 1) {
        System.out.println("processing " + processed);
      }
      Map<String,String> root=mapper.readValue(s,mapType);
      String tsStr=root.get("sys_ts");
      if (StringUtils.isEmpty(tsStr)) {
        continue;
      }
      long ts=Long.valueOf(tsStr);
      if (ts < start || ts >= end) {
        continue;
      }
      if (minOffset == -1) {
        minOffset=processed - 1;
      }
      maxOffset=processed - 1;
      long qty=Long.valueOf(root.get("qty"));
      int index=(int)((ts - start) / interval);
      qtySum[index]+=qty;
      qtyTotal+=qty;
      counts[index]++;
      countTotal++;
    }
  }
   System.out.println("qty sum is " + Arrays.toString(qtySum));
  System.out.println("qty total is " + qtyTotal);
  System.out.println("count is " + Arrays.toString(counts));
  System.out.println("count total is " + countTotal);
  System.out.println("first processed is " + minOffset);
  System.out.println("last processed is " + maxOffset);
}

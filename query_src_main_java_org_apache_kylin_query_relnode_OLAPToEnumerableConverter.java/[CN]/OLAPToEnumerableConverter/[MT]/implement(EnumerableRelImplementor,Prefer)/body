{
  OLAPRel.OLAPImplementor olapImplementor=new OLAPRel.OLAPImplementor();
  olapImplementor.visitChild(getInput(),this);
  try {
    for (    OLAPContext context : OLAPContext.getThreadLocalContexts()) {
      if (context.firstTableScan == null) {
        continue;
      }
      IRealization realization=QueryRouter.selectRealization(context);
      context.realization=realization;
    }
  }
 catch (  NoRealizationFoundException e) {
    OLAPContext ctx0=(OLAPContext)OLAPContext.getThreadLocalContexts().toArray()[0];
    if (ctx0 != null && ctx0.olapSchema.hasStarSchemaUrl()) {
      return buildHiveResult(enumImplementor,pref,ctx0);
    }
 else {
      throw e;
    }
  }
  OLAPRel.RewriteImplementor rewriteImplementor=new OLAPRel.RewriteImplementor();
  rewriteImplementor.visitChild(this,getInput());
  OLAPRel.JavaImplementor impl=new OLAPRel.JavaImplementor(enumImplementor);
  EnumerableRel inputAsEnum=impl.createEnumerable((OLAPRel)getInput());
  this.replaceInput(0,inputAsEnum);
  if (System.getProperty("calcite.debug") != null) {
    String dumpPlan=RelOptUtil.dumpPlan("",this,false,SqlExplainLevel.DIGEST_ATTRIBUTES);
    System.out.println("EXECUTION PLAN AFTER REWRITE");
    System.out.println(dumpPlan);
  }
  return impl.visitChild(this,0,inputAsEnum,pref);
}

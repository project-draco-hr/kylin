{
  if (!col.equals(colA))   return null;
  if (startId == null && endId == null) {
    return RoaringBitmap.bitmapOf(getRecordCount() - 1);
  }
  final int start=(startId != null) ? startId : 0;
  final int end=(endId != null) ? endId : MAX_ID;
  return RoaringBitmap.or(new Iterator<RoaringBitmap>(){
    int i=start;
    @Override public boolean hasNext(){
      return i <= end;
    }
    @Override public RoaringBitmap next(){
      return getBitMap(col,i++);
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
);
}

{
  super(properties);
  for (  String prop : properties) {
    try {
      String[] parts=prop.split("=");
      if (parts.length == 2) {
switch (parts[0]) {
case "tsPattern":
          this.tsPattern=parts[1];
        break;
default :
      break;
  }
}
}
 catch (Exception e) {
logger.error("Failed to parse property " + prop);
}
}
if (!StringUtils.isEmpty(tsPattern)) {
try {
formatter=org.apache.kylin.common.util.DateFormat.getDateFormat(tsPattern);
}
 catch (Throwable e) {
throw new IllegalStateException("Invalid tsPattern: '" + tsPattern + "'.");
}
}
 else {
throw new IllegalStateException("Invalid tsPattern: '" + tsPattern + "'.");
}
}

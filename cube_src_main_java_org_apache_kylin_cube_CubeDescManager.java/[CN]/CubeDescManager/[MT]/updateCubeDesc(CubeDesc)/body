{
  if (desc.getUuid() == null || desc.getName() == null) {
    throw new IllegalArgumentException();
  }
  String name=desc.getName();
  if (!cubeDescMap.containsKey(name)) {
    throw new IllegalArgumentException("CubeDesc '" + name + "' does not exist.");
  }
  try {
    desc.init(config,getMetadataManager().getAllTablesMap());
  }
 catch (  IllegalStateException e) {
    desc.addError(e.getMessage(),true);
    return desc;
  }
catch (  IllegalArgumentException e) {
    desc.addError(e.getMessage(),true);
    return desc;
  }
  CubeMetadataValidator validator=new CubeMetadataValidator();
  ValidateContext context=validator.validate(desc,true);
  if (!context.ifPass()) {
    return desc;
  }
  desc.setSignature(desc.calculateSignature());
  CubeInstance cube=getCubeManager().getCube(desc.getName());
  if (cube != null && !StringUtils.equals(desc.getSignature(),cube.getDescriptor().getSignature())) {
    logger.info("Detect signature change of [" + desc.getName() + "], drop all existing segments");
    cube.getSegments().clear();
    getCubeManager().updateCube(cube);
  }
  String path=desc.getResourcePath();
  getStore().putResource(path,desc,CUBE_DESC_SERIALIZER);
  CubeDesc ndesc=loadCubeDesc(path);
  cubeDescMap.put(ndesc.getName(),desc);
  return ndesc;
}

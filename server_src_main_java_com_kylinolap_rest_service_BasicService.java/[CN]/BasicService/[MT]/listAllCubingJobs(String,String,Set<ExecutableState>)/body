{
  List<CubingJob> results=Lists.newArrayList(FluentIterable.from(getExecutableManager().getAllExecutables()).filter(new Predicate<AbstractExecutable>(){
    @Override public boolean apply(    AbstractExecutable executable){
      if (executable instanceof CubingJob) {
        if (cubeName == null) {
          return true;
        }
        return ((CubingJob)executable).getCubeName().equalsIgnoreCase(cubeName);
      }
 else {
        return false;
      }
    }
  }
).transform(new Function<AbstractExecutable,CubingJob>(){
    @Override public CubingJob apply(    AbstractExecutable executable){
      return (CubingJob)executable;
    }
  }
).filter(new Predicate<CubingJob>(){
    @Override public boolean apply(    CubingJob executable){
      if (null == projectName || null == getProjectManager().getProject(projectName)) {
        return true;
      }
 else {
        ProjectInstance project=getProjectManager().getProject(projectName);
        return project.containsRealization(RealizationType.CUBE,executable.getCubeName());
      }
    }
  }
).filter(new Predicate<CubingJob>(){
    @Override public boolean apply(    CubingJob executable){
      return statusList.contains(executable.getStatus());
    }
  }
));
  return results;
}

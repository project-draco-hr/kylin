{
  CubeManager cubeManager=CubeManager.getInstance(segment.getConfig());
  Map<Long,Short> filtered=Maps.newHashMap();
  for (  Map.Entry<Long,Short> entry : cuboidShards.entrySet()) {
    if (entry.getValue() <= 1) {
      logger.info("Cuboid {} has {} shards, skip saving it as an optimization",entry.getKey(),entry.getValue());
    }
 else {
      logger.info("Cuboid {} has {} shards, saving it",entry.getKey(),entry.getValue());
      filtered.put(entry.getKey(),entry.getValue());
    }
  }
  segment.setCuboidShardNums(filtered);
  segment.setTotalShards(totalShards);
  CubeUpdate cubeBuilder=new CubeUpdate(segment.getCubeInstance());
  cubeBuilder.setToUpdateSegs(segment);
  cubeManager.updateCube(cubeBuilder);
}

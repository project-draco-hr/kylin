{
  List<CubeSegment> tobe=calculateToBeSegments(cube);
  for (  CubeSegment seg : newSegments) {
    if (tobe.contains(seg) == false)     throw new IllegalStateException("For cube " + cube + ", segment "+ seg+ " is expected but not in the tobe "+ tobe);
    if (StringUtils.isBlank(seg.getStorageLocationIdentifier()))     throw new IllegalStateException("For cube " + cube + ", segment "+ seg+ " missing StorageLocationIdentifier");
    if (StringUtils.isBlank(seg.getLastBuildJobID()))     throw new IllegalStateException("For cube " + cube + ", segment "+ seg+ " missing LastBuildJobID");
    seg.setStatus(SegmentStatusEnum.READY);
  }
  for (  CubeSegment seg : tobe) {
    if (isReady(seg) == false)     throw new IllegalStateException("For cube " + cube + ", segment "+ seg+ " should be READY but is not");
  }
  cube.setSegments(tobe);
  cube.setStatus(RealizationStatusEnum.READY);
  logger.info("Promoting cube " + cube + ", new segments "+ newSegments);
  updateCube(cube,true);
}

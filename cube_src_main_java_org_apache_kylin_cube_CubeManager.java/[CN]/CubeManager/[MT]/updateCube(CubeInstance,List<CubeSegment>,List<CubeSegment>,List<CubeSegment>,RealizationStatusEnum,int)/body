{
  if (cube == null)   throw new IllegalStateException();
  logger.info("Updating cube instance '" + cube.getName() + "'");
  if (toAddSegs != null && toAddSegs.size() > 0)   cube.getSegments().addAll(toAddSegs);
  if (toRemoveSegs != null && toRemoveSegs.size() > 0)   cube.getSegments().removeAll(toRemoveSegs);
  if (toUpdateSegs != null && toUpdateSegs.size() > 0) {
    for (    CubeSegment segment : toUpdateSegs) {
      for (int i=0; i < cube.getSegments().size(); i++) {
        if (cube.getSegments().get(i).getName().equals(segment.getName())) {
          cube.getSegments().set(i,segment);
        }
      }
    }
  }
  Collections.sort(cube.getSegments());
  if (newStatus != null) {
    cube.setStatus(newStatus);
  }
  try {
    getStore().putResource(cube.getResourcePath(),cube,CUBE_SERIALIZER);
  }
 catch (  IllegalStateException ise) {
    logger.error("Get error when update cube " + cube.getName(),ise);
    if (retry >= 3) {
      logger.error("Retried 3 times till got error, abandoning...");
      throw ise;
    }
    retry++;
    cube=updateCube(reloadCubeLocal(cube.getName()),toAddSegs,toRemoveSegs,toUpdateSegs,newStatus,retry);
  }
  cubeMap.put(cube.getName(),cube);
  ProjectManager.getInstance(KylinConfig.getInstanceFromEnv()).clearL2Cache();
  return cube;
}

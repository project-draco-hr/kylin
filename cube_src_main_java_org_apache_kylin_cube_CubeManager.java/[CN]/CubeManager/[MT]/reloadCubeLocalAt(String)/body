{
  ResourceStore store=getStore();
  CubeInstance cubeInstance;
  try {
    cubeInstance=store.getResource(path,CubeInstance.class,CUBE_SERIALIZER);
    cubeInstance.setConfig(config);
    if (StringUtils.isBlank(cubeInstance.getName()))     throw new IllegalStateException("CubeInstance name must not be blank, at " + path);
    if (cubeInstance.getDescriptor() == null)     throw new IllegalStateException("CubeInstance desc not found '" + cubeInstance.getDescName() + "', at "+ path);
    final String cubeName=cubeInstance.getName();
    cubeMap.putLocal(cubeName,cubeInstance);
    for (    CubeSegment segment : cubeInstance.getSegments()) {
      usedStorageLocation.put(cubeName.toUpperCase(),segment.getStorageLocationIdentifier());
    }
    logger.info("Reloaded new cube: " + cubeName + " with reference being"+ cubeInstance+ " having "+ cubeInstance.getSegments().size()+ " segments:"+ StringUtils.join(Collections2.transform(cubeInstance.getSegments(),new Function<CubeSegment,String>(){
      @Nullable @Override public String apply(      CubeSegment input){
        return input.getStorageLocationIdentifier();
      }
    }
),","));
    return cubeInstance;
  }
 catch (  Exception e) {
    logger.error("Error during load cube instance " + path,e);
    return null;
  }
}

{
  if (this.mapperClass == null)   throw new Exception("Mapper class is not set!");
  Options options=new Options();
  try {
    options.addOption(OPTION_JOB_NAME);
    options.addOption(OPTION_CUBE_NAME);
    options.addOption(OPTION_SEGMENT_ID);
    options.addOption(OPTION_INPUT_PATH);
    options.addOption(OPTION_OUTPUT_PATH);
    options.addOption(OPTION_NCUBOID_LEVEL);
    options.addOption(OPTION_INPUT_FORMAT);
    options.addOption(OPTION_CUBING_JOB_ID);
    parseOptions(options,args);
    Path output=new Path(getOptionValue(OPTION_OUTPUT_PATH));
    String cubeName=getOptionValue(OPTION_CUBE_NAME).toUpperCase();
    int nCuboidLevel=Integer.parseInt(getOptionValue(OPTION_NCUBOID_LEVEL));
    String segmentID=getOptionValue(OPTION_SEGMENT_ID);
    String cubingJobId=getOptionValue(OPTION_CUBING_JOB_ID);
    CubeManager cubeMgr=CubeManager.getInstance(KylinConfig.getInstanceFromEnv());
    CubeInstance cube=cubeMgr.getCube(cubeName);
    if (checkSkip(cubingJobId)) {
      logger.info("Skip job " + getOptionValue(OPTION_JOB_NAME) + " for "+ segmentID+ "["+ segmentID+ "]");
      return 0;
    }
    job=Job.getInstance(getConf(),getOptionValue(OPTION_JOB_NAME));
    job.getConfiguration().set(BatchConstants.ARG_CUBING_JOB_ID,cubingJobId);
    logger.info("Starting: " + job.getJobName());
    setJobClasspath(job,cube.getConfig());
    configureMapperInputFormat(cube.getSegmentById(segmentID));
    job.setMapperClass(this.mapperClass);
    job.setMapOutputKeyClass(Text.class);
    job.setMapOutputValueClass(Text.class);
    job.setCombinerClass(CuboidReducer.class);
    job.setReducerClass(CuboidReducer.class);
    job.setOutputFormatClass(SequenceFileOutputFormat.class);
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(Text.class);
    FileOutputFormat.setOutputPath(job,output);
    job.getConfiguration().set(BatchConstants.CFG_CUBE_NAME,cubeName);
    job.getConfiguration().set(BatchConstants.CFG_CUBE_SEGMENT_ID,segmentID);
    job.getConfiguration().setInt(BatchConstants.CFG_CUBE_CUBOID_LEVEL,nCuboidLevel);
    attachKylinPropsAndMetadata(cube,job.getConfiguration());
    setReduceTaskNum(job,cube.getDescriptor(),nCuboidLevel);
    this.deletePath(job.getConfiguration(),output);
    return waitForCompletion(job);
  }
  finally {
    if (job != null)     cleanupTempConfFile(job.getConfiguration());
  }
}

{
  StringBuilder msg=new StringBuilder();
  msg.append("REQUEST: ");
  HttpSession session=request.getSession(true);
  SecurityContext context=(SecurityContext)session.getAttribute("SPRING_SECURITY_CONTEXT");
  String requester="";
  if (context != null) {
    Authentication authentication=context.getAuthentication();
    if (authentication != null) {
      requester=authentication.getName();
    }
  }
 else {
    final String authorization=request.getHeader("Authorization");
    if (authorization != null && authorization.startsWith("Basic")) {
      String base64Credentials=authorization.substring("Basic".length()).trim();
      String credentials=new String(Base64.decode(base64Credentials),Charset.forName("UTF-8"));
      String[] values=credentials.split(":",2);
      requester=values[0];
    }
  }
  msg.append("REQUESTER=" + requester);
  SimpleDateFormat format=new SimpleDateFormat("z yyyy-MM-dd HH:mm:ss");
  msg.append(";REQ_TIME=" + format.format(new Date()));
  msg.append(";URI=").append(request.getRequestURI());
  msg.append(";METHOD=").append(request.getMethod());
  msg.append(";QUERY_STRING=").append(request.getQueryString());
  if (request instanceof RequestWrapper && !this.isMultipart(request)) {
    RequestWrapper requestWrapper=(RequestWrapper)request;
    try {
      String e=requestWrapper.getCharacterEncoding() != null ? requestWrapper.getCharacterEncoding() : "UTF-8";
      msg.append(";PAYLOAD=").append(new String(requestWrapper.toByteArray(),e));
    }
 catch (    UnsupportedEncodingException var6) {
      logger.warn("Failed to parse request payload",var6);
    }
  }
  msg.append(";RESP_STATUS=" + response.getStatus()).append(";");
  logger.debug(msg.toString());
}

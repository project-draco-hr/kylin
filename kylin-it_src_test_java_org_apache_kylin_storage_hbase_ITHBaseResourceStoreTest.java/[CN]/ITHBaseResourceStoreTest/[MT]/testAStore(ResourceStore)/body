{
  String dir1="/cube";
  String path1="/cube/_test.json";
  StringEntity content1=new StringEntity("anything");
  String dir2="/table";
  String path2="/table/_test.json";
  StringEntity content2=new StringEntity("something");
  store.deleteResource(path1);
  store.deleteResource(path2);
  StringEntity t;
  store.putResource(path1,content1,StringEntity.serializer);
  assertTrue(store.exists(path1));
  t=store.getResource(path1,StringEntity.class,StringEntity.serializer);
  assertEquals(content1,t);
  store.putResource(path2,content2,StringEntity.serializer);
  assertTrue(store.exists(path2));
  t=store.getResource(path2,StringEntity.class,StringEntity.serializer);
  assertEquals(content2,t);
  t.str="new string";
  store.putResource(path2,t,StringEntity.serializer);
  try {
    t.setLastModified(t.getLastModified() - 1);
    store.putResource(path2,t,StringEntity.serializer);
    fail("write conflict should trigger IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
  ArrayList<String> list;
  list=store.listResources(dir1);
  assertTrue(list.contains(path1));
  assertTrue(list.contains(path2) == false);
  list=store.listResources(dir2);
  assertTrue(list.contains(path2));
  assertTrue(list.contains(path1) == false);
  list=store.listResources("/");
  assertTrue(list.contains(dir1));
  assertTrue(list.contains(dir2));
  assertTrue(list.contains(path1) == false);
  assertTrue(list.contains(path2) == false);
  list=store.listResources(path1);
  assertNull(list);
  list=store.listResources(path2);
  assertNull(list);
  store.deleteResource(path1);
  assertTrue(store.exists(path1) == false);
  list=store.listResources(dir1);
  assertTrue(list == null || list.contains(path1) == false);
  store.deleteResource(path2);
  assertTrue(store.exists(path2) == false);
  list=store.listResources(dir2);
  assertTrue(list == null || list.contains(path2) == false);
}

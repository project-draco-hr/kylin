{
  ArrayList<byte[]> result=Lists.newArrayList();
  final int priceColumnIndex=23;
  final int groupByColumnIndex=0;
  TblColRef column=tableRecordInfo.getDescriptor().listAllColumns().get(priceColumnIndex);
  FixedLenMeasureCodec codec=FixedLenMeasureCodec.get(column.getType());
  byte[] data=randomBytes(tableRecordInfo.getDigest().getByteFormLen());
  byte[] groupOne=randomBytes(tableRecordInfo.getDigest().length(groupByColumnIndex));
  codec.write(codec.valueOf("199.99"),data,tableRecordInfo.getDigest().offset(priceColumnIndex));
  System.arraycopy(groupOne,0,data,tableRecordInfo.getDigest().offset(groupByColumnIndex),groupOne.length);
  result.add(data);
  data=randomBytes(tableRecordInfo.getDigest().getByteFormLen());
  ;
  codec.write(codec.valueOf("2.09"),data,tableRecordInfo.getDigest().offset(priceColumnIndex));
  System.arraycopy(groupOne,0,data,tableRecordInfo.getDigest().offset(groupByColumnIndex),groupOne.length);
  result.add(data);
  byte[] groupTwo=randomBytes(tableRecordInfo.getDigest().length(groupByColumnIndex));
  data=randomBytes(tableRecordInfo.getDigest().getByteFormLen());
  System.arraycopy(groupTwo,0,data,tableRecordInfo.getDigest().offset(groupByColumnIndex),groupTwo.length);
  codec.write(codec.valueOf("100"),data,tableRecordInfo.getDigest().offset(priceColumnIndex));
  result.add(data);
  return result;
}

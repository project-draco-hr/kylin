{
  int retVal=0;
  long start=System.nanoTime();
  String kylinHiveDependency=System.getProperty("kylin.hive.dependency");
  logger.info("append kylin.hive.dependency: " + kylinHiveDependency + " to "+ MAP_REDUCE_CLASSPATH);
  if (kylinHiveDependency != null) {
    final String classpath=job.getConfiguration().get(MAP_REDUCE_CLASSPATH);
    if (classpath == null) {
      job.getConfiguration().set(MAP_REDUCE_CLASSPATH,kylinHiveDependency);
    }
 else {
      job.getConfiguration().set(MAP_REDUCE_CLASSPATH,classpath + ":" + kylinHiveDependency);
    }
  }
  if (isAsync) {
    job.submit();
  }
 else {
    job.waitForCompletion(true);
    retVal=job.isSuccessful() ? 0 : 1;
    logger.debug("Job '" + job.getJobName() + "' finished "+ (job.isSuccessful() ? "successfully in " : "with failures.  Time taken ")+ StringUtils.formatTime((System.nanoTime() - start) / 1000000L));
  }
  return retVal;
}

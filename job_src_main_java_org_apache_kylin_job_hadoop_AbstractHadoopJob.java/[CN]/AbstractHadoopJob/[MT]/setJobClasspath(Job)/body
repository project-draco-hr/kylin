{
  String jarPath=KylinConfig.getInstanceFromEnv().getKylinJobJarPath();
  File jarFile=new File(jarPath);
  if (jarFile.exists()) {
    job.setJar(jarPath);
    logger.info("append job jar: " + jarPath);
  }
 else {
    job.setJarByClass(this.getClass());
  }
  String kylinHiveDependency=System.getProperty("kylin.hive.dependency");
  logger.info("append kylin.hive.dependency: " + kylinHiveDependency + " to "+ MAP_REDUCE_CLASSPATH);
  if (kylinHiveDependency != null) {
    kylinHiveDependency=kylinHiveDependency.replace(":",",");
    Configuration jobConf=job.getConfiguration();
    String classpath=jobConf.get(MAP_REDUCE_CLASSPATH);
    if (classpath == null || classpath.length() == 0) {
      logger.info("Didn't find " + MAP_REDUCE_CLASSPATH + " in job configuration, will run 'mapred classpath' to get the default value.");
      classpath=getDefaultMapRedClasspath();
      logger.info("The default mapred classpath is: " + classpath);
    }
    jobConf.set(MAP_REDUCE_CLASSPATH,classpath + "," + kylinHiveDependency);
  }
  logger.info("Hadoop job classpath is: " + job.getConfiguration().get(MAP_REDUCE_CLASSPATH));
}

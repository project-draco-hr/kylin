{
  final List<Pair<byte[],byte[]>> selectedColumns=makeHBaseColumns(selectedColBlocks);
  LazyRowKeyEncoder encoder=new LazyRowKeyEncoder(cubeSeg,cuboid);
  byte[] start=encoder.createBuf();
  byte[] end=encoder.createBuf();
  encoder.setBlankByte(RowConstants.ROWKEY_LOWER_BYTE);
  encoder.encode(pkStart,pkStart.getInfo().getPrimaryKey(),start);
  encoder.setBlankByte(RowConstants.ROWKEY_UPPER_BYTE);
  encoder.encode(pkEnd,pkEnd.getInfo().getPrimaryKey(),end);
  byte[] temp=new byte[end.length + 1];
  System.arraycopy(end,0,temp,0,end.length);
  end=temp;
  List<Pair<byte[],byte[]>> hbaseFuzzyKeys=translateFuzzyKeys(fuzzyKeys);
  KylinConfig config=cubeSeg.getCubeDesc().getConfig();
  int hbaseCaching=config.getHBaseScanCacheRows();
  int hbaseMaxResultSize=config.getHBaseScanMaxResultSize();
  if (isMemoryHungry(selectedColBlocks))   hbaseCaching/=10;
  return new RawScan(start,end,selectedColumns,hbaseFuzzyKeys,hbaseCaching,hbaseMaxResultSize);
}

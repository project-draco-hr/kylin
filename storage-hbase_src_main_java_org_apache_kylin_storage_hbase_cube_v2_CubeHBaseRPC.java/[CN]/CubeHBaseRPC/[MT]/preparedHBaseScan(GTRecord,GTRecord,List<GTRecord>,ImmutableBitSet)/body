{
  final List<Pair<byte[],byte[]>> selectedColumns=makeHBaseColumns(selectedColBlocks);
  List<RawScan> ret=Lists.newArrayList();
  byte[] start=makeRowKeyToScan(pkStart,RowConstants.ROWKEY_LOWER_BYTE);
  byte[] end=makeRowKeyToScan(pkEnd,RowConstants.ROWKEY_UPPER_BYTE);
  List<Pair<byte[],byte[]>> hbaseFuzzyKeys=translateFuzzyKeys(fuzzyKeys);
  short cuboidShardNum=cubeSeg.getCuboidShardNum(cuboid.getId());
  for (short i=0; i < cuboidShardNum; ++i) {
    short shard=ShardingHash.normalize(cubeSeg.getCuboidBaseShard(cuboid.getId()),i,cubeSeg.getTotalShards());
    byte[] shardStart=Arrays.copyOf(start,start.length);
    byte[] shardEnd=new byte[end.length + 1];
    System.arraycopy(end,0,shardEnd,0,end.length);
    BytesUtil.writeShort(shard,shardStart,0,RowConstants.ROWKEY_SHARDID_LEN);
    BytesUtil.writeShort(shard,shardEnd,0,RowConstants.ROWKEY_SHARDID_LEN);
    ret.add(new RawScan(shardStart,shardEnd,selectedColumns,hbaseFuzzyKeys));
  }
  return ret;
}

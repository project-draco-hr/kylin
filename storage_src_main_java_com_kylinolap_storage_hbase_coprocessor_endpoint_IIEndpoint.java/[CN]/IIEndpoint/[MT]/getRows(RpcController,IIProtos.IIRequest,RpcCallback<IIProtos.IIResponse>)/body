{
  CoprocessorRowType type=null;
  CoprocessorProjector projector=null;
  EndpointAggregators aggregators=null;
  CoprocessorFilter filter=null;
  if (request.hasType()) {
    type=CoprocessorRowType.deserialize(request.getType().toByteArray());
  }
  if (request.hasProjector()) {
    projector=CoprocessorProjector.deserialize(request.getProjector().toByteArray());
  }
  if (request.hasAggregator()) {
    aggregators=EndpointAggregators.deserialize(request.getAggregator().toByteArray());
  }
  if (request.hasFilter()) {
    filter=CoprocessorFilter.deserialize(request.getFilter().toByteArray());
  }
  IIProtos.IIResponse response=null;
  RegionScanner innerScanner=null;
  HRegion region=null;
  try {
    ByteBuffer byteBuffer=request.getTableInfo().asReadOnlyByteBuffer();
    TableRecordInfoDigest tableInfo=TableRecordInfoDigest.deserialize(byteBuffer);
    region=env.getRegion();
    innerScanner=region.getScanner(buildScan());
    region.startRegionOperation();
synchronized (innerScanner) {
      IIKeyValueCodec codec=new IIKeyValueCodec(tableInfo);
      Iterable<Slice> slices=codec.decodeKeyValue(new HbaseServerKVIterator(innerScanner));
      if (aggregators.isEmpty()) {
        response=getNonAggregatedResponse(slices,filter,type);
      }
 else {
        response=getAggregatedResponse(slices,filter,type,projector,aggregators);
      }
    }
  }
 catch (  IOException ioe) {
    ResponseConverter.setControllerException(controller,ioe);
  }
 finally {
    IOUtils.closeQuietly(innerScanner);
    if (region != null) {
      try {
        region.closeRegionOperation();
      }
 catch (      IOException e) {
        e.printStackTrace();
        throw new RuntimeException(e);
      }
    }
  }
  done.run(response);
}

{
  int bufOffset=0;
  for (  int idx : measureIdxUsingDict) {
    TopNCounter<ByteArray> topNCounters=(TopNCounter<ByteArray>)measureObjs[idx];
    MeasureDesc measureDesc=measuresDescs.get(idx);
    String displayCol=measureDesc.getFunction().getParameter().getDisplayColumn().toUpperCase();
    if (StringUtils.isNotEmpty(displayCol)) {
      ColumnDesc sourceColumn=cubeDesc.getFactTableDesc().findColumnByName(displayCol);
      TblColRef colRef=new TblColRef(sourceColumn);
      DictionaryManager dictMgr=DictionaryManager.getInstance(config);
      Dictionary<?> sourceDict=dictMgr.getDictionary(sourceCubeSegment.getDictResPath(colRef));
      Dictionary<?> mergedDict=dictMgr.getDictionary(mergedCubeSegment.getDictResPath(colRef));
      int topNSize=topNCounters.size();
      while (sourceDict.getSizeOfValue() * topNSize > newKeyBodyBuf.length - bufOffset || mergedDict.getSizeOfValue() * topNSize > newKeyBodyBuf.length - bufOffset || mergedDict.getSizeOfId() * topNSize > newKeyBodyBuf.length - bufOffset) {
        byte[] oldBuf=newKeyBodyBuf;
        newKeyBodyBuf=new byte[2 * newKeyBodyBuf.length];
        System.arraycopy(oldBuf,0,newKeyBodyBuf,0,oldBuf.length);
      }
      for (      Counter<ByteArray> c : topNCounters) {
        int idInSourceDict=BytesUtil.readUnsigned(c.getItem().array(),c.getItem().offset(),c.getItem().length());
        int idInMergedDict;
        int size=sourceDict.getValueBytesFromId(idInSourceDict,newKeyBodyBuf,bufOffset);
        if (size < 0) {
          idInMergedDict=mergedDict.nullId();
        }
 else {
          idInMergedDict=mergedDict.getIdFromValueBytes(newKeyBodyBuf,bufOffset,size);
        }
        BytesUtil.writeUnsigned(idInMergedDict,newKeyBodyBuf,bufOffset,mergedDict.getSizeOfId());
        c.getItem().set(newKeyBodyBuf,bufOffset,mergedDict.getSizeOfId());
        bufOffset+=mergedDict.getSizeOfId();
      }
    }
  }
}

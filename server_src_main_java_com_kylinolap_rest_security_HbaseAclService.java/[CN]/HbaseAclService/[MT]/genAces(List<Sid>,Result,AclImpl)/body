{
  List<AceInfo> aceInfos=new ArrayList<AceInfo>();
  if (null != sids) {
    for (    Sid sid : sids) {
      String sidName=null;
      if (sid instanceof PrincipalSid) {
        sidName=((PrincipalSid)sid).getPrincipal();
      }
 else       if (sid instanceof GrantedAuthoritySid) {
        sidName=((GrantedAuthoritySid)sid).getGrantedAuthority();
      }
      aceInfos.add(aceSerializer.deserialize(result.getValue(Bytes.toBytes(ACL_ACES_FAMILY),Bytes.toBytes(sidName))));
    }
  }
 else {
    NavigableMap<byte[],byte[]> familyMap=result.getFamilyMap(Bytes.toBytes(ACL_ACES_FAMILY));
    for (    byte[] qualifier : familyMap.keySet()) {
      aceInfos.add(aceSerializer.deserialize(familyMap.get(qualifier)));
    }
  }
  List<AccessControlEntry> newAces=new ArrayList<AccessControlEntry>();
  for (int i=0; i < aceInfos.size(); i++) {
    AceInfo aceInfo=aceInfos.get(i);
    Sid sid=aceInfo.getSidInfo().isPrincipal() ? new PrincipalSid(aceInfo.getSidInfo().getSid()) : new GrantedAuthoritySid(aceInfo.getSidInfo().getSid());
    AccessControlEntry ace=new AccessControlEntryImpl(Long.valueOf(i),acl,sid,aclPermissionFactory.buildFromMask(aceInfo.getPermissionMask()),false,false,false);
    newAces.add(ace);
  }
  this.setAces(acl,newAces);
}

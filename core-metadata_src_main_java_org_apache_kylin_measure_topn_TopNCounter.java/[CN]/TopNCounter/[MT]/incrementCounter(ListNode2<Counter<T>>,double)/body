{
  Counter<T> counter=counterNode.getValue();
  counter.count+=incrementCount;
  ListNode2<Counter<T>> nodeNext;
  if (incrementCount > 0) {
    nodeNext=counterNode.getNext();
  }
 else {
    nodeNext=counterNode.getPrev();
  }
  counterList.remove(counterNode);
  counterNode.prev=null;
  counterNode.next=null;
  if (incrementCount > 0) {
    while (nodeNext != null && counter.count >= nodeNext.getValue().count) {
      nodeNext=nodeNext.getNext();
    }
    if (nodeNext != null) {
      counterList.addBefore(nodeNext,counterNode);
    }
 else {
      counterList.add(counterNode);
    }
  }
 else {
    while (nodeNext != null && counter.count < nodeNext.getValue().count) {
      nodeNext=nodeNext.getPrev();
    }
    if (nodeNext != null) {
      counterList.addAfter(nodeNext,counterNode);
    }
 else {
      counterList.enqueue(counterNode);
    }
  }
}

{
  if (!this.context.hasPrecalculatedFields() && func.needRewriteField()) {
    logger.info(func + "skip rewriteAggregateCall because no pre-aggregated field available");
    return aggCall;
  }
  List<Integer> newArgList=Lists.newArrayList(aggCall.getArgList());
  if (func.needRewriteField()) {
    RelDataTypeField field=getInput().getRowType().getField(func.getRewriteFieldName(),true,false);
    if (newArgList.isEmpty()) {
      newArgList.add(field.getIndex());
    }
 else {
      newArgList.set(0,field.getIndex());
    }
  }
  RelDataType fieldType=aggCall.getType();
  SqlAggFunction newAgg=aggCall.getAggregation();
  if (func.isCount()) {
    newAgg=SqlStdOperatorTable.SUM0;
  }
 else   if (func.getMeasureType().getRewriteCalciteAggrFunctionClass() != null) {
    newAgg=createCustomAggFunction(func.getExpression(),fieldType,func.getMeasureType().getRewriteCalciteAggrFunctionClass());
  }
  AggregateCall newAggCall=new AggregateCall(newAgg,false,newArgList,fieldType,newAgg.getName());
  return newAggCall;
}

{
  List<Integer> newArgList=new ArrayList<Integer>(1);
  String fieldName=func.getRewriteFieldName();
  RelDataTypeField field=getChild().getRowType().getField(fieldName,true);
  newArgList.add(field.getIndex());
  RelDataType fieldType=aggCall.getType();
  Aggregation newAgg=aggCall.getAggregation();
  if (func.isCountDistinct()) {
    newAgg=createHyperLogLogAggFunction(fieldType);
  }
 else   if (func.isCount()) {
    newAgg=SqlStdOperatorTable.SUM0;
  }
  AggregateCall newAggCall=new AggregateCall(newAgg,false,newArgList,fieldType,newAgg.getName());
  SqlAggFunction aggFunction=(SqlAggFunction)newAggCall.getAggregation();
  AggCallBinding callBinding=newAggCall.createBinding(this);
  RelDataType inferReturnType=aggFunction.inferReturnType(callBinding);
  return new AggregateCall(newAgg,false,newArgList,inferReturnType,newAgg.getName());
}

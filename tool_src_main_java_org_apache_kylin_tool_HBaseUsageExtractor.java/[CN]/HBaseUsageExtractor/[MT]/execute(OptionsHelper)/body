{
  String dest=null;
  if (optionsHelper.hasOption(OPTION_DEST)) {
    dest=optionsHelper.getOptionValue(OPTION_DEST);
  }
  if (org.apache.commons.lang3.StringUtils.isEmpty(dest)) {
    throw new RuntimeException("destDir is not set, exit directly without extracting");
  }
  if (!dest.endsWith("/")) {
    dest=dest + "/";
  }
  kylinConfig=KylinConfig.getInstanceFromEnv();
  cubeManager=CubeManager.getInstance(kylinConfig);
  realizationRegistry=RealizationRegistry.getInstance(kylinConfig);
  projectManager=ProjectManager.getInstance(kylinConfig);
  if (optionsHelper.hasOption(OPTION_PROJECT)) {
    String projectName=optionsHelper.getOptionValue(OPTION_PROJECT);
    ProjectInstance projectInstance=projectManager.getProject(projectName);
    if (projectInstance == null) {
      throw new IllegalArgumentException("Project " + projectName + " does not exist");
    }
    List<RealizationEntry> realizationEntries=projectInstance.getRealizationEntries();
    for (    RealizationEntry realizationEntry : realizationEntries) {
      retrieveResourcePath(getRealization(realizationEntry));
    }
  }
 else   if (optionsHelper.hasOption(OPTION_CUBE)) {
    String cubeName=optionsHelper.getOptionValue(OPTION_CUBE);
    IRealization realization;
    if ((realization=cubeManager.getRealization(cubeName)) != null) {
      retrieveResourcePath(realization);
    }
 else {
      throw new IllegalArgumentException("No cube found with name of " + cubeName);
    }
  }
  extractCommonInfo(dest);
  extractHTables(dest);
  logger.info("Extracted metadata files located at: " + new File(dest).getAbsolutePath());
}

{
  Assert.notNull(ae,"Acl domain object required");
  Assert.notNull(parentAe,"Parent acl required");
  ObjectIdentity objectIdentity=new ObjectIdentityImpl(ae.getClass(),ae.getId());
  MutableAcl acl=null;
  try {
    acl=(MutableAcl)aclService.readAclById(objectIdentity);
  }
 catch (  NotFoundException e) {
    acl=(MutableAcl)init(ae,null);
  }
  ObjectIdentity parentObjectIdentity=new ObjectIdentityImpl(parentAe.getClass(),parentAe.getId());
  MutableAcl parentAcl=null;
  try {
    parentAcl=(MutableAcl)aclService.readAclById(parentObjectIdentity);
  }
 catch (  NotFoundException e) {
    parentAcl=(MutableAcl)init(parentAe,null);
  }
  if (null == acl || null == parentAcl) {
    return;
  }
  acl.setEntriesInheriting(true);
  acl.setParent(parentAcl);
  aclService.updateAcl(acl);
}

{
  logger.info("Loading L2 project cache for " + project);
  ProjectCache projectCache=new ProjectCache(project);
  ProjectInstance pi=mgr.getProject(project);
  if (pi == null)   throw new IllegalArgumentException("Project '" + project + "' does not exist;");
  MetadataManager metaMgr=mgr.getMetadataManager();
  for (  String tableName : pi.getTables()) {
    TableDesc tableDesc=metaMgr.getTableDesc(tableName);
    if (tableDesc != null) {
      projectCache.tables.put(tableDesc.getIdentity(),new TableCache(tableDesc));
    }
 else {
      logger.warn("Table '" + tableName + "' defined under project '"+ project+ "' is not found");
    }
  }
  for (  String extFilterName : pi.getExtFilters()) {
    ExternalFilterDesc filterDesc=metaMgr.getExtFilterDesc(extFilterName);
    if (filterDesc != null) {
      projectCache.extFilters.put(extFilterName,filterDesc);
    }
 else {
      logger.warn("External Filter '" + extFilterName + "' defined under project '"+ project+ "' is not found");
    }
  }
  RealizationRegistry registry=RealizationRegistry.getInstance(mgr.getConfig());
  for (  RealizationEntry entry : pi.getRealizationEntries()) {
    IRealization realization=registry.getRealization(entry.getType(),entry.getRealization());
    if (realization != null) {
      projectCache.realizations.add(realization);
    }
 else {
      logger.warn("Realization '" + entry + "' defined under project '"+ project+ "' is not found");
    }
    IRealization parasite=registry.getRealization(RealizationType.INVERTED_INDEX,entry.getRealization());
    if (parasite != null) {
      projectCache.realizations.add(parasite);
    }
  }
  for (  IRealization realization : projectCache.realizations) {
    if (sanityCheck(projectCache,realization)) {
      mapTableToRealization(projectCache,realization);
      markExposedTablesAndColumns(projectCache,realization);
    }
  }
  return projectCache;
}

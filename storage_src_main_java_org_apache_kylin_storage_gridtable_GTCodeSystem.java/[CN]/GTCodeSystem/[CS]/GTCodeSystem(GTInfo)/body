{
  this.info=info;
  this.serializers=new DataTypeSerializer[info.nColumns];
  for (int i=0; i < info.nColumns; i++) {
    this.serializers[i]=DataTypeSerializer.create(info.colTypes[i]);
  }
  this.filterCS=new IFilterCodeSystem<ByteArray>(){
    @Override public boolean isNull(    ByteArray code){
      return (code == null || code.length() == 0);
    }
    @Override public int compare(    ByteArray code1,    ByteArray code2){
      return code1.compareTo(code2);
    }
    @Override public void serialize(    ByteArray code,    ByteBuffer buffer){
      BytesUtil.writeByteArray(code.array(),code.offset(),code.length(),buffer);
    }
    @Override public ByteArray deserialize(    ByteBuffer buffer){
      return new ByteArray(BytesUtil.readByteArray(buffer));
    }
  }
;
}

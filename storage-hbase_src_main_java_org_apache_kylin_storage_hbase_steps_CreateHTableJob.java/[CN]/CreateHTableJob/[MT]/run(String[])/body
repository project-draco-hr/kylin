{
  Options options=new Options();
  options.addOption(OPTION_CUBE_NAME);
  options.addOption(OPTION_SEGMENT_ID);
  options.addOption(OPTION_PARTITION_FILE_PATH);
  options.addOption(OPTION_STATISTICS_ENABLED);
  parseOptions(options,args);
  partitionFilePath=new Path(getOptionValue(OPTION_PARTITION_FILE_PATH));
  boolean statsEnabled=Boolean.parseBoolean(getOptionValue(OPTION_STATISTICS_ENABLED));
  String cubeName=getOptionValue(OPTION_CUBE_NAME).toUpperCase();
  CubeManager cubeMgr=CubeManager.getInstance(KylinConfig.getInstanceFromEnv());
  cube=cubeMgr.getCube(cubeName);
  cubeDesc=cube.getDescriptor();
  kylinConfig=cube.getConfig();
  segmentID=getOptionValue(OPTION_SEGMENT_ID);
  CubeSegment cubeSegment=cube.getSegmentById(segmentID);
  Configuration conf=HBaseConnection.getCurrentHBaseConfiguration();
  try {
    byte[][] splitKeys;
    if (statsEnabled) {
      final Map<Long,Double> cuboidSizeMap=new CubeStatsReader(cubeSegment,kylinConfig).getCuboidSizeMap();
      splitKeys=getRegionSplitsFromCuboidStatistics(cuboidSizeMap,kylinConfig,cubeSegment,partitionFilePath.getParent());
    }
 else {
      splitKeys=getRegionSplits(conf,partitionFilePath);
    }
    CubeHTableUtil.createHTable(cubeSegment,splitKeys);
    return 0;
  }
 catch (  Exception e) {
    printUsage(options);
    e.printStackTrace(System.err);
    logger.error(e.getLocalizedMessage(),e);
    return 2;
  }
}

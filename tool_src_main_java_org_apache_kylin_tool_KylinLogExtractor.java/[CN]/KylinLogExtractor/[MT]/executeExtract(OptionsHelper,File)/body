{
  beforeExtract();
  int logPeriod=optionsHelper.hasOption(OPTION_LOG_PERIOD) ? Integer.valueOf(optionsHelper.getOptionValue(OPTION_LOG_PERIOD)) : DEFAULT_LOG_PERIOD;
  if (logPeriod < 1) {
    logger.warn("No logs to extract.");
    return;
  }
  logger.info("Start to extract kylin logs in {} days",logPeriod);
  List<File> logDirs=Lists.newArrayList();
  logDirs.add(new File(KylinConfig.getKylinHome(),"logs"));
  String kylinVersion=ToolUtil.decideKylinMajorVersionFromCommitFile();
  if (kylinVersion != null && kylinVersion.equals("1.3")) {
    logDirs.add(new File(KylinConfig.getKylinHome(),"tomcat/logs"));
  }
  final ArrayList<File> requiredLogFiles=Lists.newArrayList();
  final long logThresholdTime=System.currentTimeMillis() - logPeriod * 24 * 3600* 1000;
  for (  File kylinLogDir : logDirs) {
    final File[] allLogFiles=kylinLogDir.listFiles();
    if (allLogFiles == null || allLogFiles.length == 0) {
      return;
    }
    for (    File logFile : allLogFiles) {
      if (logFile.lastModified() > logThresholdTime) {
        requiredLogFiles.add(logFile);
      }
    }
  }
  for (  File logFile : requiredLogFiles) {
    logger.info("Log file:" + logFile.getAbsolutePath());
    if (logFile.exists()) {
      FileUtils.copyFileToDirectory(logFile,exportDir);
    }
  }
}

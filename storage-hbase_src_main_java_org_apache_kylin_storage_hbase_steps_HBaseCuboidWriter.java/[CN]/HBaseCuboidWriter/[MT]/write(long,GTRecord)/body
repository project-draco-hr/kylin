{
  final ByteBuffer key=createKey(cuboidId,record);
  final Cuboid cuboid=Cuboid.findById(cubeDesc,cuboidId);
  final int nDims=cuboid.getColumns().size();
  final ImmutableBitSet bitSet=new ImmutableBitSet(nDims,nDims + cubeDesc.getMeasures().size());
  for (int i=0; i < nColumns; i++) {
    final Object[] values=record.getValues(bitSet,measureValues);
    final KeyValue keyValue=keyValueCreators.get(i).create(key.array(),0,key.position(),values);
    final Put put=new Put(copy(key.array(),0,key.position()));
    byte[] family=copy(keyValue.getFamilyArray(),keyValue.getFamilyOffset(),keyValue.getFamilyLength());
    byte[] qualifier=copy(keyValue.getQualifierArray(),keyValue.getQualifierOffset(),keyValue.getQualifierLength());
    byte[] value=copy(keyValue.getValueArray(),keyValue.getValueOffset(),keyValue.getValueLength());
    put.add(family,qualifier,value);
    puts.add(put);
  }
  if (puts.size() >= BATCH_PUT_THRESHOLD) {
    flush();
  }
}

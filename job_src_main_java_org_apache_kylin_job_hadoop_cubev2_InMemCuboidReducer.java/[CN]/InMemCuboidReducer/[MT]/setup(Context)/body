{
  super.bindCurrentConfiguration(context.getConfiguration());
  String cubeName=context.getConfiguration().get(BatchConstants.CFG_CUBE_NAME).toUpperCase();
  KylinConfig config=AbstractHadoopJob.loadKylinPropsAndMetadata();
  CubeDesc cubeDesc=CubeManager.getInstance(config).getCube(cubeName).getDescriptor();
  List<MeasureDesc> measuresDescs=Lists.newArrayList();
  keyValueCreators=Lists.newArrayList();
  int startPosition=0;
  for (  HBaseColumnFamilyDesc cfDesc : cubeDesc.getHBaseMapping().getColumnFamily()) {
    for (    HBaseColumnDesc colDesc : cfDesc.getColumns()) {
      keyValueCreators.add(new InMemKeyValueCreator(colDesc,startPosition));
      startPosition+=colDesc.getMeasures().length;
      for (      MeasureDesc measure : colDesc.getMeasures()) {
        measuresDescs.add(measure);
      }
    }
  }
  codec=new MeasureCodec(measuresDescs);
  aggs=new MeasureAggregators(measuresDescs);
  input=new Object[measuresDescs.size()];
  result=new Object[measuresDescs.size()];
  nColumns=keyValueCreators.size();
}

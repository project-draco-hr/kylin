{
  MetadataManager metadataManager=MetadataManager.getInstance(KylinConfig.getInstanceFromEnv());
  CubeInstance cubeInstance=CubeManager.getInstance(KylinConfig.getInstanceFromEnv()).getCube(streamingConfig.getCubeName());
  List<String> data=StreamingTableDataGenerator.generate(10000,startTime,endTime,cubeInstance.getFactTable());
  TableDesc tableDesc=metadataManager.getTableDesc(cubeInstance.getFactTable());
  KafkaDataLoader.loadIntoKafka(streamingConfig,data);
  List<TblColRef> tableColumns=Lists.newArrayList();
  for (  ColumnDesc columnDesc : tableDesc.getColumns()) {
    tableColumns.add(new TblColRef(columnDesc));
  }
  TimedJsonStreamParser timedJsonStreamParser=new TimedJsonStreamParser(tableColumns,true);
  StringBuilder sb=new StringBuilder();
  for (  String json : data) {
    List<String> rowColumns=timedJsonStreamParser.parse(new StreamMessage(0,json.getBytes())).getStreamMessage();
    sb.append(StringUtils.join(rowColumns,","));
    sb.append(System.getProperty("line.separator"));
  }
  overrideFactTableData(sb.toString(),cubeInstance.getFactTable());
}

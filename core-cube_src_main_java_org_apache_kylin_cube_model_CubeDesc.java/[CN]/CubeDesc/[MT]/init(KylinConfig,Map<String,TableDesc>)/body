{
  this.errors.clear();
  this.config=config;
  if (this.modelName == null || this.modelName.length() == 0) {
    this.addError("The cubeDesc '" + this.getName() + "' doesn't have data model specified.");
  }
  validate(this);
  this.model=MetadataManager.getInstance(config).getDataModelDesc(this.modelName);
  if (this.model == null) {
    this.addError("No data model found with name '" + modelName + "'.");
  }
  for (  DimensionDesc dim : dimensions) {
    dim.init(this,tables);
  }
  initDimensionColumns();
  initMeasureColumns();
  rowkey.init(this);
  for (  AggregationGroup agg : this.aggregationGroups) {
    agg.init(this,rowkey);
  }
  if (hbaseMapping != null) {
    hbaseMapping.init(this);
  }
  initMeasureReferenceToColumnFamily();
  List<TblColRef> dimCols=listDimensionColumnsExcludingDerived(true);
  if (rowkey.getRowKeyColumns().length != dimCols.size()) {
    addError("RowKey columns count (" + rowkey.getRowKeyColumns().length + ") does not match dimension columns count ("+ dimCols.size()+ "). ");
  }
}

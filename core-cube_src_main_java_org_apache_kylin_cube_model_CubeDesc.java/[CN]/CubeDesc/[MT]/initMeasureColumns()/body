{
  if (measures == null || measures.isEmpty()) {
    return;
  }
  TableDesc factTable=getFactTableDesc();
  for (  MeasureDesc m : measures) {
    m.setName(m.getName().toUpperCase());
    if (m.getDependentMeasureRef() != null) {
      m.setDependentMeasureRef(m.getDependentMeasureRef().toUpperCase());
    }
    FunctionDesc f=m.getFunction();
    f.setExpression(f.getExpression().toUpperCase());
    f.initReturnDataType();
    ParameterDesc p=f.getParameter();
    p.normalizeColumnValue();
    if (p.isColumnType()) {
      ArrayList<TblColRef> colRefs=Lists.newArrayList();
      for (      String cName : p.getValue().split("\\s*,\\s*")) {
        ColumnDesc sourceColumn=factTable.findColumnByName(cName);
        TblColRef colRef=new TblColRef(sourceColumn);
        colRefs.add(colRef);
        allColumns.add(colRef);
      }
      if (colRefs.isEmpty() == false)       p.setColRefs(colRefs);
    }
    if (m.getFunction().isHolisticCountDistinct() && StringUtils.isBlank(m.getDependentMeasureRef())) {
      throw new IllegalStateException(m + " is a holistic count distinct but it has no DependentMeasureRef defined!");
    }
  }
}

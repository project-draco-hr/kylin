{
  final KafkaConfig kafkaConfig=StreamManager.getInstance(KylinConfig.getInstanceFromEnv()).getKafkaConfig("kafka_test");
  Properties props=new Properties();
  props.put("metadata.broker.list",StringUtils.join(Iterators.transform(kafkaConfig.getBrokers().iterator(),new Function<Broker,String>(){
    @Nullable @Override public String apply(    @Nullable Broker broker){
      return broker.getConnectionString();
    }
  }
),","));
  props.put("serializer.class","kafka.serializer.StringEncoder");
  props.put("request.required.acks","1");
  ProducerConfig config=new ProducerConfig(props);
  final Producer<String,String> producer=new Producer<String,String>(config);
  scheduledExecutorService.scheduleAtFixedRate(new Thread(new Runnable(){
    @Override public void run(){
      final KeyedMessage<String,String> message=new KeyedMessage<String,String>(kafkaConfig.getTopic(),getOneMessage());
      producer.send(message);
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
),0,1000 / frequency,TimeUnit.MILLISECONDS);
}

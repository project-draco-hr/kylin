{
  Range<Long> cacheExclude=this.underlyingStorage.getVolatilePeriod();
  if (cacheExclude != null) {
    List<Range<Long>> cachablePeriods=RangeUtil.remove(ts,cacheExclude);
    if (cachablePeriods.size() == 1) {
      if (!ts.equals(cachablePeriods.get(0))) {
        logger.info("With respect to each shard's build status, the cacheable tsRange shrinks from " + RangeUtil.formatTsRange(ts) + " to "+ RangeUtil.formatTsRange(cachablePeriods.get(0)));
      }
      ts=cachablePeriods.get(0);
    }
 else {
    }
  }
  StreamSQLResult newCacheEntry=new StreamSQLResult(duplicated,ts,partitionColRef);
  CACHE_MANAGER.getCache(this.underlyingStorage.getStorageUUID()).put(new Element(streamSQLDigest,newCacheEntry));
  logger.info("cache after the query: " + newCacheEntry);
}

{
  int p=n + firstByteOffset;
  int len=BytesUtil.readUnsigned(trieBytes,p - 1,1);
  System.arraycopy(trieBytes,p,buf,tail,len);
  tail+=len;
  boolean isEndOfValue=checkFlag(n,BIT_IS_END_OF_VALUE);
  if (isEndOfValue) {
    idToValueBytesCache[seq]=visitor.makeValueBytes(buf,tail);
    seq++;
  }
  int c=headSize + (BytesUtil.readUnsigned(trieBytes,n,sizeChildOffset) & childOffsetMask);
  if (c == headSize)   return;
  while (true) {
    enableIdToValueBytesCache_recursion(c,seq,buf,tail,visitor);
    int nValuesBeneath=BytesUtil.readUnsigned(trieBytes,c + sizeChildOffset,sizeNoValuesBeneath);
    seq+=nValuesBeneath;
    if (checkFlag(c,BIT_IS_LAST_CHILD))     break;
    p=c + firstByteOffset;
    c=p + BytesUtil.readUnsigned(trieBytes,p - 1,1);
  }
}

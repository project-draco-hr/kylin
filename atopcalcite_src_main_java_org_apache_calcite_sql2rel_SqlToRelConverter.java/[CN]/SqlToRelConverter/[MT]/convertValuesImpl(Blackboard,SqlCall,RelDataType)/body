{
  RelNode valuesRel=convertRowValues(bb,values,values.getOperandList(),true,targetRowType);
  if (valuesRel != null) {
    bb.setRoot(valuesRel,true);
    return;
  }
  List<RelNode> unionRels=new ArrayList<RelNode>();
  for (  SqlNode rowConstructor1 : values.getOperandList()) {
    SqlCall rowConstructor=(SqlCall)rowConstructor1;
    Blackboard tmpBb=createBlackboard(bb.scope,null);
    replaceSubqueries(tmpBb,rowConstructor,RelOptUtil.Logic.TRUE_FALSE_UNKNOWN);
    List<Pair<RexNode,String>> exps=new ArrayList<Pair<RexNode,String>>();
    for (    Ord<SqlNode> operand : Ord.zip(rowConstructor.getOperandList())) {
      exps.add(Pair.of(tmpBb.convertExpression(operand.e),validator.deriveAlias(operand.e,operand.i)));
    }
    RelNode in=(null == tmpBb.root) ? LogicalValues.createOneRow(cluster) : tmpBb.root;
    unionRels.add(RelOptUtil.createProject(in,Pair.left(exps),Pair.right(exps),true));
  }
  if (unionRels.size() == 0) {
    throw Util.newInternal("empty values clause");
  }
 else   if (unionRels.size() == 1) {
    bb.setRoot(unionRels.get(0),true);
  }
 else {
    bb.setRoot(new LogicalUnion(cluster,unionRels,true),true);
  }
}

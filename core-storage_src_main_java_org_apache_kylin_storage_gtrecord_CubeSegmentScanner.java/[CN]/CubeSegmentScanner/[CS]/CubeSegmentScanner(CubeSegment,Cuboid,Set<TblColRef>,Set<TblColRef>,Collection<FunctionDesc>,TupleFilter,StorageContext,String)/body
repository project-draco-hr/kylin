{
  this.cuboid=cuboid;
  this.cubeSeg=cubeSeg;
  ITupleFilterTransformer translator=new BuildInFunctionTransformer(cubeSeg.getDimensionEncodingMap());
  filter=translator.transform(filter);
  String plannerName=KylinConfig.getInstanceFromEnv().getQueryStorageVisitPlanner();
  CubeScanRangePlanner scanRangePlanner;
  try {
    scanRangePlanner=(CubeScanRangePlanner)Class.forName(plannerName).getConstructor(CubeSegment.class,Cuboid.class,TupleFilter.class,Set.class,Set.class,Collection.class).newInstance(cubeSeg,cuboid,filter,dimensions,groups,metrics);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  scanRequest=scanRangePlanner.planScanRequest();
  if (scanRequest != null) {
    scanRequest.setAllowStorageAggregation(context.isNeedStorageAggregation());
    scanRequest.setAggCacheMemThreshold(cubeSeg.getCubeInstance().getConfig().getQueryCoprocessorMemGB());
    scanRequest.setStorageScanRowNumThreshold(context.getThreshold());
    scanRequest.setStoragePushDownLimit(context.getStoragePushDownLimit());
  }
  scanner=new ScannerWorker(cubeSeg,cuboid,scanRequest,gtStorage);
}

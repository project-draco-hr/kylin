{
  this.cuboid=cuboid;
  this.cubeSeg=cubeSeg;
  byte[] serialize=TupleFilterSerializer.serialize(originalfilter,StringCodeSystem.INSTANCE);
  TupleFilter filter=TupleFilterSerializer.deserialize(serialize,StringCodeSystem.INSTANCE);
  ITupleFilterTransformer translator=new BuiltInFunctionTransformer(cubeSeg.getDimensionEncodingMap());
  filter=translator.transform(filter);
  CubeScanRangePlanner scanRangePlanner;
  try {
    scanRangePlanner=new CubeScanRangePlanner(cubeSeg,cuboid,filter,dimensions,groups,metrics,context);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  scanRequest=scanRangePlanner.planScanRequest();
  scanner=new ScannerWorker(cubeSeg,cuboid,scanRequest,gtStorage);
}

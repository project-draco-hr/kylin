{
  Set<String> dimTableCache=new HashSet<String>();
  CubeDesc cubeDesc=intermediateTableDesc.getCubeDesc();
  String factTableName=cubeDesc.getFactTable();
  sql.append("FROM " + factTableName + "\n");
  for (  DimensionDesc dim : cubeDesc.getDimensions()) {
    JoinDesc join=dim.getJoin();
    if (join != null && join.getType().equals("") == false) {
      String joinType=join.getType().toUpperCase();
      String dimTableName=dim.getTable();
      if (!dimTableCache.contains(dimTableName)) {
        TblColRef[] pk=join.getPrimaryKeyColumns();
        TblColRef[] fk=join.getForeignKeyColumns();
        if (pk.length != fk.length) {
          throw new RuntimeException("Invalid join condition of dimension " + dim.getName());
        }
        sql.append(joinType + " JOIN " + dimTableName+ "\n");
        sql.append("ON ");
        for (int i=0; i < pk.length; i++) {
          if (i > 0) {
            sql.append(" AND ");
          }
          sql.append(factTableName + "." + fk[i].getName()+ " = "+ dimTableName+ "."+ pk[i].getName());
        }
        sql.append("\n");
        dimTableCache.add(dimTableName);
      }
    }
  }
}

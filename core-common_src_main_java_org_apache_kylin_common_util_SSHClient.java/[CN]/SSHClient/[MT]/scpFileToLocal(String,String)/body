{
  FileOutputStream fos=null;
  try {
    System.out.println("SCP remote file " + rfile + " to local "+ lfile);
    String prefix=null;
    if (new File(lfile).isDirectory()) {
      prefix=lfile + File.separator;
    }
    Session session=newJSchSession();
    session.connect();
    String command="scp -f " + rfile;
    Channel channel=session.openChannel("exec");
    ((ChannelExec)channel).setCommand(command);
    OutputStream out=channel.getOutputStream();
    InputStream in=channel.getInputStream();
    channel.connect();
    byte[] buf=new byte[1024];
    buf[0]=0;
    out.write(buf,0,1);
    out.flush();
    while (true) {
      int c=checkAck(in);
      if (c != 'C') {
        break;
      }
      in.read(buf,0,5);
      long filesize=0L;
      while (true) {
        if (in.read(buf,0,1) < 0) {
          break;
        }
        if (buf[0] == ' ')         break;
        filesize=filesize * 10L + (long)(buf[0] - '0');
      }
      String file=null;
      for (int i=0; ; i++) {
        in.read(buf,i,1);
        if (buf[i] == (byte)0x0a) {
          file=new String(buf,0,i);
          break;
        }
      }
      buf[0]=0;
      out.write(buf,0,1);
      out.flush();
      fos=new FileOutputStream(prefix == null ? lfile : prefix + file);
      int foo;
      while (true) {
        if (buf.length < filesize)         foo=buf.length;
 else         foo=(int)filesize;
        foo=in.read(buf,0,foo);
        if (foo < 0) {
          break;
        }
        fos.write(buf,0,foo);
        filesize-=foo;
        if (filesize == 0L)         break;
      }
      fos.close();
      fos=null;
      if (checkAck(in) != 0) {
        System.exit(0);
      }
      buf[0]=0;
      out.write(buf,0,1);
      out.flush();
    }
    in.close();
    out.close();
    session.disconnect();
  }
 catch (  Exception e) {
    throw e;
  }
 finally {
    IOUtils.closeQuietly(fos);
  }
}

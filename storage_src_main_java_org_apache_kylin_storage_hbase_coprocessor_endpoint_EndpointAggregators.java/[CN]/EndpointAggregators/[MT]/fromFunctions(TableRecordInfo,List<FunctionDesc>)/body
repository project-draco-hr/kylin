{
  String[] funcNames=new String[metrics.size()];
  String[] dataTypes=new String[metrics.size()];
  MetricInfo[] metricInfos=new MetricInfo[metrics.size()];
  for (int i=0; i < metrics.size(); i++) {
    FunctionDesc functionDesc=metrics.get(i);
    funcNames[i]=functionDesc.getExpression();
    dataTypes[i]=functionDesc.getReturnType();
    if (functionDesc.isCount()) {
      metricInfos[i]=new MetricInfo(MetricType.Count);
    }
 else     if (functionDesc.isAppliedOnDimension()) {
      metricInfos[i]=new MetricInfo(MetricType.DimensionAsMetric);
    }
 else {
      int index=tableInfo.findMetric(functionDesc.getParameter().getValue());
      if (index < 0) {
        throw new IllegalStateException("Column " + functionDesc.getParameter().getColRefs().get(0) + " is not found in II");
      }
      if (functionDesc.isCountDistinct()) {
        metricInfos[i]=new MetricInfo(MetricType.DistinctCount,index,functionDesc.getReturnDataType().getPrecision());
      }
 else {
        metricInfos[i]=new MetricInfo(MetricType.Normal,index);
      }
    }
  }
  return new EndpointAggregators(funcNames,dataTypes,metricInfos,tableInfo.getDigest());
}

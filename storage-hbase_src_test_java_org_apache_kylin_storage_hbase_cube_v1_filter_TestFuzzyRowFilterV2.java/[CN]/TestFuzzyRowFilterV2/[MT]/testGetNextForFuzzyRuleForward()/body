{
  assertNext(false,new byte[]{0,1,2},new byte[]{0,-1,-1},new byte[]{1,2,1,0,1},new byte[]{2,1,2,0,0});
  assertNext(false,new byte[]{0,1,2},new byte[]{0,-1,-1},new byte[]{1,1,2,0,1},new byte[]{1,1,2,0,2});
  assertNext(false,new byte[]{0,1,0,2,0},new byte[]{0,-1,0,-1,0},new byte[]{1,0,2,0,1},new byte[]{1,1,0,2,0});
  assertNext(false,new byte[]{1,0,1},new byte[]{-1,0,-1},new byte[]{1,(byte)128,2,0,1},new byte[]{1,(byte)129,1,0,0});
  assertNext(false,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,0,1},new byte[]{5,1,1,1});
  assertNext(false,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,0,1,1},new byte[]{5,1,0,1,2});
  assertNext(false,new byte[]{0,1,0,0},new byte[]{0,-1,0,0},new byte[]{5,1,(byte)255,1},new byte[]{5,1,(byte)255,2});
  assertNext(false,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,(byte)255,1},new byte[]{6,1,0,1});
  assertNext(false,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,(byte)255,0},new byte[]{5,1,(byte)255,1});
  assertNext(false,new byte[]{5,1,1,0},new byte[]{-1,-1,0,0},new byte[]{5,1,(byte)255,1},new byte[]{5,1,(byte)255,2});
  assertNext(false,new byte[]{1,1,1,1},new byte[]{-1,-1,0,0},new byte[]{1,1,2,2},new byte[]{1,1,2,3});
  assertNext(false,new byte[]{1,1,1,1},new byte[]{-1,-1,0,0},new byte[]{1,1,3,2},new byte[]{1,1,3,3});
  assertNext(false,new byte[]{1,1,1,1},new byte[]{0,0,0,0},new byte[]{1,1,2,3},new byte[]{1,1,2,4});
  assertNext(false,new byte[]{1,1,1,1},new byte[]{0,0,0,0},new byte[]{1,1,3,2},new byte[]{1,1,3,3});
  assertNext(false,new byte[]{1,1,0,0},new byte[]{-1,-1,0,0},new byte[]{0,1,3,2},new byte[]{1,1,0,0});
  Assert.assertNull(FuzzyRowFilterV2.getNextForFuzzyRule(new byte[]{2,3,1,1,1},new byte[]{1,0,1},new byte[]{-1,0,-1}));
  Assert.assertNull(FuzzyRowFilterV2.getNextForFuzzyRule(new byte[]{1,(byte)245,1,3,0},new byte[]{1,1,0,3},new byte[]{-1,-1,0,-1}));
  Assert.assertNull(FuzzyRowFilterV2.getNextForFuzzyRule(new byte[]{1,3,1,3,0},new byte[]{1,2,0,3},new byte[]{-1,-1,0,-1}));
  Assert.assertNull(FuzzyRowFilterV2.getNextForFuzzyRule(new byte[]{2,1,1,1,0},new byte[]{1,2,0,3},new byte[]{-1,-1,0,-1}));
}

{
  assertNext(true,new byte[]{0,1,2},new byte[]{0,-1,-1},new byte[]{1,2,1,0,1},new byte[]{1,1,2,(byte)0xFF,(byte)0xFF});
  assertNext(true,new byte[]{0,1,0,2,0},new byte[]{0,-1,0,-1,0},new byte[]{1,2,1,3,1},new byte[]{1,1,0,2,0});
  assertNext(true,new byte[]{1,0,1},new byte[]{-1,0,-1},new byte[]{1,(byte)128,2,0,1},new byte[]{1,(byte)128,1,(byte)0xFF,(byte)0xFF});
  assertNext(true,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,0,2,1},new byte[]{5,1,0,1,(byte)0xFF});
  assertNext(true,new byte[]{0,1,0,0},new byte[]{0,-1,0,0},new byte[]{5,1,(byte)255,1},new byte[]{5,1,(byte)255,0});
  assertNext(true,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,0,1},new byte[]{4,1,(byte)255,1});
  assertNext(true,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,(byte)255,0},new byte[]{5,1,(byte)254,1});
  assertNext(true,new byte[]{1,1,0,0},new byte[]{-1,-1,0,0},new byte[]{2,1,3,2},new byte[]{1,1,0,0});
  assertNext(true,new byte[]{1,0,1},new byte[]{-1,0,-1},new byte[]{2,3,1,1,1},new byte[]{1,0,1,(byte)0xFF,(byte)0xFF});
  assertNext(true,new byte[]{1,1,0,3},new byte[]{-1,-1,0,-1},new byte[]{1,(byte)245,1,3,0},new byte[]{1,1,0,3,(byte)0xFF});
  assertNext(true,new byte[]{1,2,0,3},new byte[]{-1,-1,0,-1},new byte[]{1,3,1,3,0},new byte[]{1,2,0,3,(byte)0xFF});
  assertNext(true,new byte[]{1,2,0,3},new byte[]{-1,-1,0,-1},new byte[]{2,1,1,1,0},new byte[]{1,2,0,3,(byte)0xFF});
  assertNext(true,new byte[]{1,0,1},new byte[]{-1,0,-1},new byte[]{1,(byte)128,2},new byte[]{1,(byte)128,1});
  assertNext(true,new byte[]{0,1,0,1},new byte[]{0,-1,0,-1},new byte[]{5,1,0,2},new byte[]{5,1,0,1});
  assertNext(true,new byte[]{5,1,1,0},new byte[]{-1,-1,0,0},new byte[]{5,1,(byte)0xFF,1},new byte[]{5,1,(byte)0xFF,0});
  assertNext(true,new byte[]{1,1,1,1},new byte[]{-1,-1,0,0},new byte[]{1,1,2,2},new byte[]{1,1,2,1});
  assertNext(true,new byte[]{1,1,1,1},new byte[]{0,0,0,0},new byte[]{1,1,2,3},new byte[]{1,1,2,2});
  Assert.assertNull(FuzzyRowFilterV2.getNextForFuzzyRule(true,new byte[]{1,1,1,3,0},new byte[]{1,2,0,3},new byte[]{-1,-1,0,-1}));
}

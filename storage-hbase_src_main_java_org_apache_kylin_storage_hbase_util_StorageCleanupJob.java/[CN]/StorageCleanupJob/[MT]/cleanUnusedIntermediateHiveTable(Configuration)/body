{
  final KylinConfig config=KylinConfig.getInstanceFromEnv();
  final CliCommandExecutor cmdExec=config.getCliCommandExecutor();
  final int uuidLength=36;
  final String useDatabaseHql="USE " + config.getHiveDatabaseForIntermediateTable() + ";";
  final HiveCmdBuilder hiveCmdBuilder=new HiveCmdBuilder();
  hiveCmdBuilder.addStatement(useDatabaseHql);
  hiveCmdBuilder.addStatement("show tables " + "\'kylin_intermediate_*\'" + "; ");
  Pair<Integer,String> result=cmdExec.execute(hiveCmdBuilder.build());
  String outputStr=result.getSecond();
  BufferedReader reader=new BufferedReader(new StringReader(outputStr));
  String line=null;
  List<String> allJobs=executableManager.getAllJobIds();
  List<String> allHiveTablesNeedToBeDeleted=new ArrayList<String>();
  List<String> workingJobList=new ArrayList<String>();
  for (  String jobId : allJobs) {
    final ExecutableState state=executableManager.getOutput(jobId).getState();
    if (!state.isFinalState()) {
      workingJobList.add(jobId);
      logger.info("Skip intermediate hive table with job id " + jobId + " with job status "+ state);
    }
  }
  while ((line=reader.readLine()) != null) {
    if (line.startsWith("kylin_intermediate_")) {
      boolean isNeedDel=false;
      String uuid=line.substring(line.length() - uuidLength,line.length());
      uuid=uuid.replace("_","-");
      if (allJobs.contains(uuid) && !workingJobList.contains(uuid)) {
        isNeedDel=true;
      }
      if (isNeedDel) {
        allHiveTablesNeedToBeDeleted.add(line);
      }
    }
  }
  if (delete == true) {
    hiveCmdBuilder.reset();
    hiveCmdBuilder.addStatement(useDatabaseHql);
    for (    String delHive : allHiveTablesNeedToBeDeleted) {
      hiveCmdBuilder.addStatement("drop table if exists " + delHive + "; ");
      logger.info("Remove " + delHive + " from hive tables.");
    }
    try {
      cmdExec.execute(hiveCmdBuilder.build());
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
 else {
    System.out.println("------ Intermediate Hive Tables To Be Dropped ------");
    for (    String hiveTable : allHiveTablesNeedToBeDeleted) {
      System.out.println(hiveTable);
    }
    System.out.println("----------------------------------------------------");
  }
  if (reader != null)   reader.close();
}

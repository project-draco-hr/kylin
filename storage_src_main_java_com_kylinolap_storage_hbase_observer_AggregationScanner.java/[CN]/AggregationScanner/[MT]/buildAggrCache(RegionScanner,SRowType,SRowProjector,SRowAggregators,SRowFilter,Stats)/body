{
  AggregationCache aggCache=new AggregationCache(aggregators,0);
  SRowTuple tuple=new SRowTuple(type);
  boolean hasMore=true;
  List<Cell> results=new ArrayList<Cell>();
  while (hasMore) {
    results.clear();
    hasMore=innerScanner.nextRaw(results);
    if (results.isEmpty())     continue;
    if (stats != null)     stats.countInputRow(results);
    Cell cell=results.get(0);
    tuple.setUnderlying(cell.getRowArray(),cell.getRowOffset(),cell.getRowLength());
    if (filter != null && filter.evaluate(tuple) == false)     continue;
    AggrKey aggKey=projector.getRowKey(results);
    MeasureAggregator[] bufs=aggCache.getBuffer(aggKey);
    aggregators.aggregate(bufs,results);
    aggCache.checkMemoryUsage();
  }
  return aggCache;
}

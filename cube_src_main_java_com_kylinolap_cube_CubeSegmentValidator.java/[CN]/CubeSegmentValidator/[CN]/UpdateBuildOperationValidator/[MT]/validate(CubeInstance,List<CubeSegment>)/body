{
  if (newSegments.size() != 1 && newSegments.size() != 2) {
    throw new CubeIntegrityException("Invalid new segment count, got " + newSegments.size());
  }
  CubeSegment previousSeg=null;
  for (  CubeSegment newSegment : newSegments) {
    if (null == previousSeg) {
      previousSeg=newSegment;
    }
 else {
      if (previousSeg.getDateRangeEnd() != newSegment.getDateRangeStart()) {
        throw new CubeIntegrityException("Invalid date range.");
      }
    }
  }
  if (cubeInstance.getSegments().size() == 0) {
    if (cubeInstance.getDescriptor().getCubePartitionDesc().getPartitionDateStart() != newSegments.get(0).getDateRangeStart()) {
      throw new CubeIntegrityException("Invalid start date.");
    }
  }
 else {
    CubeSegment startSegment=newSegments.get(0);
    CubeSegment matchSeg=null;
    for (    CubeSegment segment : cubeInstance.getSegments()) {
      if (segment.getDateRangeStart() == startSegment.getDateRangeStart()) {
        matchSeg=segment;
      }
    }
    if (newSegments.size() == 2 && null == matchSeg) {
      throw new CubeIntegrityException("Invalid date range.");
    }
    if (newSegments.size() == 2 && newSegments.get(newSegments.size() - 1).getDateRangeEnd() < matchSeg.getDateRangeEnd()) {
      throw new CubeIntegrityException("Invalid date range.");
    }
  }
}

{
  SimpleConsumer consumer=null;
  for (  Broker broker : kafkaConfig.getBrokers()) {
    try {
      consumer=new SimpleConsumer(broker.host(),broker.port(),kafkaConfig.getTimeout(),kafkaConfig.getBufferSize(),"topic_meta_lookup");
      List<String> topics=Collections.singletonList(kafkaConfig.getTopic());
      TopicMetadataRequest req=new TopicMetadataRequest(topics);
      TopicMetadataResponse resp=consumer.send(req);
      final List<TopicMetadata> topicMetadatas=resp.topicsMetadata();
      if (topicMetadatas.size() != 1) {
        break;
      }
      final TopicMetadata topicMetadata=topicMetadatas.get(0);
      if (topicMetadata.errorCode() != 0) {
        break;
      }
      List<Integer> partitionIds=Lists.transform(topicMetadata.partitionsMetadata(),new Function<PartitionMetadata,Integer>(){
        @Nullable @Override public Integer apply(        PartitionMetadata partitionMetadata){
          return partitionMetadata.partitionId();
        }
      }
);
      return new TopicMeta(kafkaConfig.getTopic(),partitionIds);
    }
  finally {
      if (consumer != null) {
        consumer.close();
      }
    }
  }
  logger.debug("cannot find topic:" + kafkaConfig.getTopic());
  return null;
}

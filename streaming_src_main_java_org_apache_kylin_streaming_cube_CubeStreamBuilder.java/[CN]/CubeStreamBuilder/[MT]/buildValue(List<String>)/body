{
  Object[] values=new Object[desc.getMeasures().size()];
  MeasureDesc measureDesc=null;
  for (int i=0, n=desc.getMeasures().size(); i < n; i++) {
    measureDesc=desc.getMeasures().get(i);
    Object value=null;
    int[] flatTableIdx=intermediateTableDesc.getMeasureColumnIndexes()[i];
    FunctionDesc function=desc.getMeasures().get(i).getFunction();
    if (function.isCount() || function.isHolisticCountDistinct()) {
      value=ONE;
    }
 else     if (flatTableIdx == null) {
      value=measureCodec.getSerializer(i).valueOf(measureDesc.getFunction().getParameter().getValue());
    }
 else     if (flatTableIdx.length == 1) {
      value=measureCodec.getSerializer(i).valueOf(Bytes.toBytes(row.get(flatTableIdx[0])));
    }
 else {
      for (      int x : flatTableIdx) {
        if (value == null)         value=row.get(x);
 else         value=value + "," + row.get(x);
      }
      value=measureCodec.getSerializer(i).valueOf(Bytes.toBytes((String)value));
    }
    values[i]=value;
  }
  return values;
}

{
  Pair<BitSet,BitSet> columnBitSets=getDimensionAndMetricColumBitSet(parentCuboidId);
  BitSet parentDimensions=columnBitSets.getFirst();
  BitSet measureColumns=columnBitSets.getSecond();
  BitSet childDimensions=(BitSet)parentDimensions.clone();
  long mask=Long.highestOneBit(parentCuboidId);
  long childCuboidId=cuboidId;
  long parentCuboidIdActualLength=Long.SIZE - Long.numberOfLeadingZeros(parentCuboidId);
  int index=0;
  for (int i=0; i < parentCuboidIdActualLength; i++) {
    if ((mask & parentCuboidId) > 0) {
      if ((mask & childCuboidId) == 0) {
        childDimensions.set(index,false);
      }
      index++;
    }
    mask=mask >> 1;
  }
  IGTScanner scanner=parentCuboid.scanAndAggregate(null,null,childDimensions,measureColumns,metricsAggrFuncs,null);
  GridTable cuboidGridTable=newGridTableByCuboidID(cuboidId);
  GTBuilder builder=cuboidGridTable.rebuild();
  GTRecord r=new GTRecord(cuboidGridTable.getInfo());
  BitSet allNeededColumns=new BitSet();
  allNeededColumns.or(childDimensions);
  allNeededColumns.or(measureColumns);
  for (  GTRecord record : scanner) {
    updateMeasureRef(record,r,allNeededColumns);
    builder.write(r);
  }
  builder.close();
  return cuboidGridTable;
}

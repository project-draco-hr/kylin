{
  IIJoinedFlatTableDesc intermediateTableDesc=new IIJoinedFlatTableDesc(desc);
  JobEngineConfig jobEngineConfig=new JobEngineConfig(kylinConfig);
  final String uuid=UUID.randomUUID().toString();
  final String dropTableHql=JoinedFlatTable.generateDropTableStatement(intermediateTableDesc,uuid);
  final String createTableHql=JoinedFlatTable.generateCreateTableStatement(intermediateTableDesc,jobEngineConfig.getHdfsWorkingDirectory() + "/kylin-" + uuid,uuid);
  String insertDataHqls;
  try {
    insertDataHqls=JoinedFlatTable.generateInsertDataStatement(intermediateTableDesc,uuid,jobEngineConfig);
  }
 catch (  IOException e1) {
    e1.printStackTrace();
    throw new RuntimeException("Failed to generate insert data SQL for intermediate table.");
  }
  ShellExecutable step=new ShellExecutable();
  StringBuffer buf=new StringBuffer();
  buf.append("hive -e \"");
  buf.append(dropTableHql + "\n");
  buf.append(createTableHql + "\n");
  buf.append(insertDataHqls + "\n");
  buf.append("\"");
  step.setCmd(buf.toString());
  logger.info(step.getCmd());
  step.setName(ExecutableConstants.STEP_NAME_CREATE_FLAT_HIVE_TABLE);
  kylinConfig.getCliCommandExecutor().execute(step.getCmd(),null);
  return intermediateTableDesc.getTableName(uuid);
}

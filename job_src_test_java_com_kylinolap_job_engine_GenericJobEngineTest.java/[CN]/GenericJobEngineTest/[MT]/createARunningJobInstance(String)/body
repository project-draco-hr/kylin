{
  CubeInstance cube=CubeManager.getInstance(KylinConfig.getInstanceFromEnv()).getCube(cubeName);
  cube.getSegments().clear();
  CubeManager.getInstance(KylinConfig.getInstanceFromEnv()).updateCube(cube);
  CubeSegment seg=CubeManager.getInstance(KylinConfig.getInstanceFromEnv()).allocateSegments(cube,CubeBuildTypeEnum.BUILD,0,12345L).get(0);
  JobInstance jobInstance=new JobInstance();
  jobInstance.setUuid(uuid);
  jobInstance.setRelatedCube(cubeName);
  jobInstance.setRelatedSegment(seg.getName());
  jobInstance.setName("A_Running_Job");
  jobInstance.setType(CubeBuildTypeEnum.BUILD);
  JobStep step1=new JobStep();
  step1.setName("step1");
  step1.setExecCmd("echo step1");
  step1.setStatus(JobStepStatusEnum.FINISHED);
  step1.setSequenceID(0);
  step1.setRunAsync(false);
  step1.setCmdType(JobStepCmdTypeEnum.SHELL_CMD);
  JobStep step2=new JobStep();
  step2.setName("step2");
  step2.setExecCmd(mrCmd + mrOutputDir1);
  step2.setStatus(JobStepStatusEnum.RUNNING);
  step2.setSequenceID(1);
  step2.setRunAsync(true);
  step2.setCmdType(JobStepCmdTypeEnum.SHELL_CMD_HADOOP);
  JobStep step3=new JobStep();
  step3.setName("step3");
  step3.setExecCmd("java -jar /tmp/SampleJavaProgram.jarfile 3");
  step3.setStatus(JobStepStatusEnum.PENDING);
  step3.setSequenceID(2);
  step3.setRunAsync(false);
  step3.setCmdType(JobStepCmdTypeEnum.SHELL_CMD);
  jobInstance.addStep(0,step1);
  jobInstance.addStep(1,step2);
  jobInstance.addStep(2,step3);
  return jobInstance;
}

{
  KylinConfig kylinCfg=KylinConfig.getInstanceFromEnv();
  JobManager jobManager=new JobManager("JobInstanceTest",new JobEngineConfig(kylinCfg));
  JobInstance jobInstance=jobManager.createJob("test_kylin_cube_with_slr_1_new_segment","20130331080000_20131212080000",CubeBuildTypeEnum.BUILD);
  assertEquals(JobStatusEnum.PENDING,jobInstance.getStatus());
  jobInstance.getSteps().get(3).setStatus(JobStepStatusEnum.ERROR);
  assertEquals(JobStatusEnum.ERROR,jobInstance.getStatus());
  jobInstance.getSteps().get(0).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(1).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(2).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(3).setStatus(JobStepStatusEnum.PENDING);
  assertEquals(JobStatusEnum.PENDING,jobInstance.getStatus());
  jobInstance.getSteps().get(0).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(1).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(2).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(3).setStatus(JobStepStatusEnum.RUNNING);
  assertEquals(JobStatusEnum.RUNNING,jobInstance.getStatus());
  jobInstance.getSteps().get(0).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(1).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(2).setStatus(JobStepStatusEnum.FINISHED);
  jobInstance.getSteps().get(3).setStatus(JobStepStatusEnum.DISCARDED);
  assertEquals(JobStatusEnum.DISCARDED,jobInstance.getStatus());
  for (  JobStep step : jobInstance.getSteps()) {
    step.setStatus(JobStepStatusEnum.FINISHED);
  }
  assertEquals(JobStatusEnum.FINISHED,jobInstance.getStatus());
  for (  JobStep step : jobInstance.getSteps()) {
    step.setStatus(JobStepStatusEnum.NEW);
  }
  assertEquals(JobStatusEnum.NEW,jobInstance.getStatus());
  jobInstance.getSteps().get(3).setStatus(JobStepStatusEnum.WAITING);
  assertEquals(JobStatusEnum.RUNNING,jobInstance.getStatus());
}

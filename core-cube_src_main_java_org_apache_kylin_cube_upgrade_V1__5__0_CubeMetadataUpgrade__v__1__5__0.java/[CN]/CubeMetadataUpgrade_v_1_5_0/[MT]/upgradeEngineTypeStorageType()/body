{
  CubeManager cubeManager=CubeManager.getInstance(config);
  List<CubeInstance> cubes=cubeManager.listAllCubes();
  for (  CubeInstance cube : cubes) {
    try {
      org.apache.kylin.cube.model.CubeDesc cubeDesc=cube.getDescriptor();
      if (cube.getFirstSegment() == null && cubeDesc != null && cubeDesc.getStorageType() == IStorageAware.ID_HBASE && cubeDesc.getEngineType() == IEngineAware.ID_MR_V1) {
        logger.info("CubeMetadataUpgrade_v_1_5_0 handling in upgradeEngineTypeStorageType {}",cube.getName());
        cubeDesc.setEngineType(IEngineAware.ID_MR_V2);
        cubeDesc.setStorageType(IStorageAware.ID_SHARDED_HBASE);
        store.putResource(cubeDesc.getResourcePath(),cubeDesc,CubeDescManager.CUBE_DESC_SERIALIZER);
        updatedResources.add(cubeDesc.getResourcePath());
      }
 else {
        logger.info("CubeDesc {}'s storage type and engine type will not be upgraded because they're not empty",cubeDesc.getName());
      }
    }
 catch (    Exception e) {
      logger.error("error",e);
      errorMsgs.add("upgradeEngineTypeStorageType [" + cube.getName() + "] failed: "+ e.getLocalizedMessage());
    }
  }
}

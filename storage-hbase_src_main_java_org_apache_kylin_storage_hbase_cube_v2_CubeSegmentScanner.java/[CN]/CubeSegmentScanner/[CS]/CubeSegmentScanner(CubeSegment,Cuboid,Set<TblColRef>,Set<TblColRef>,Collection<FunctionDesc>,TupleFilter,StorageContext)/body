{
  this.cuboid=cuboid;
  this.cubeSeg=cubeSeg;
  ITupleFilterTransformer translator=new BuildInFunctionTransformer(cubeSeg.getDimensionEncodingMap());
  filter=translator.transform(filter);
  String plannerName=KylinConfig.getInstanceFromEnv().getQueryStorageVisitPlanner();
  GTScanRangePlanner scanRangePlanner;
  try {
    scanRangePlanner=(GTScanRangePlanner)Class.forName(plannerName).getConstructor(CubeSegment.class,Cuboid.class,TupleFilter.class,Set.class,Set.class,Collection.class).newInstance(cubeSeg,cuboid,filter,dimensions,groups,metrics);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  scanRequest=scanRangePlanner.planScanRequest();
  if (scanRequest != null) {
    scanRequest.setAllowPreAggregation(!context.isExactAggregation());
    scanRequest.setAggrCacheGB(cubeSeg.getCubeInstance().getConfig().getQueryCoprocessorMemGB());
    if (context.isLimitEnabled())     scanRequest.setRowLimit(context.getLimit());
  }
  scanner=new ScannerWorker(cubeSeg,cuboid,scanRequest);
}

{
  if (!cube.needAutoMerge()) {
    logger.debug("Cube " + cube.getName() + " doesn't need auto merge");
    return null;
  }
  if (cube.getBuildingSegments().size() > 0) {
    logger.debug("Cube " + cube.getName() + " has bulding segment, will not trigger merge at this moment");
    return null;
  }
  List<CubeSegment> ready=cube.getSegments(SegmentStatusEnum.READY);
  long[] timeRanges=cube.getDescriptor().getAutoMergeTimeRanges();
  Arrays.sort(timeRanges);
  for (int i=timeRanges.length - 1; i >= 0; i--) {
    long toMergeRange=timeRanges[i];
    for (int s=0; s < ready.size(); s++) {
      CubeSegment seg=ready.get(s);
      Pair<CubeSegment,CubeSegment> p=findMergeOffsetsByDateRange(ready.subList(s,ready.size()),seg.getDateRangeStart(),seg.getDateRangeStart() + toMergeRange,toMergeRange);
      if (p != null && p.getSecond().getDateRangeEnd() - p.getFirst().getDateRangeStart() >= toMergeRange)       return Pair.newPair(p.getFirst().getSourceOffsetStart(),p.getSecond().getSourceOffsetEnd());
    }
  }
  return null;
}

{
  if (++aggregatedRowCount % 100000 == 0) {
    if (memTracker != null) {
      memTracker.markHigh();
    }
    if (spillThreshold > 0) {
      if (estimatedMemSize() > spillThreshold) {
        spillBuffMap();
      }
    }
  }
  final byte[] key=createKey(r);
  MeasureAggregator[] aggrs=aggBufMap.get(key);
  if (aggrs == null) {
    if (aggBufMap.size() >= stopForLimit) {
      return false;
    }
    aggrs=newAggregators();
    aggBufMap.put(key,aggrs);
  }
  for (int i=0; i < aggrs.length; i++) {
    if (aggrMask[i]) {
      int col=metrics.trueBitAt(i);
      Object metrics=info.codeSystem.decodeColumnValue(col,r.cols[col].asBuffer());
      aggrs[i].aggregate(metrics);
    }
  }
  return true;
}

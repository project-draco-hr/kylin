{
  if (dumps.isEmpty()) {
    return new Iterator<GTRecord>(){
      final Iterator<Entry<byte[],MeasureAggregator[]>> it=aggBufMap.entrySet().iterator();
      final ReturningRecord returningRecord=new ReturningRecord();
      @Override public boolean hasNext(){
        return it.hasNext();
      }
      @Override public GTRecord next(){
        Entry<byte[],MeasureAggregator[]> entry=it.next();
        returningRecord.load(entry.getKey(),entry.getValue());
        return returningRecord.record;
      }
      @Override public void remove(){
        throw new UnsupportedOperationException();
      }
    }
;
  }
 else {
    logger.info("Last spill, current AggregationCache memory estimated size is: " + getEstimateSizeOfAggrCache());
    this.spillBuffMap();
    return new Iterator<GTRecord>(){
      final DumpMerger merger=new DumpMerger(dumps);
      final Iterator<Pair<byte[],MeasureAggregator[]>> it=merger.iterator();
      final ReturningRecord returningRecord=new ReturningRecord();
      @Override public boolean hasNext(){
        return it.hasNext();
      }
      @Override public GTRecord next(){
        Pair<byte[],MeasureAggregator[]> entry=it.next();
        returningRecord.load(entry.getKey(),entry.getValue());
        return returningRecord.record;
      }
      @Override public void remove(){
        throw new UnsupportedOperationException();
      }
    }
;
  }
}

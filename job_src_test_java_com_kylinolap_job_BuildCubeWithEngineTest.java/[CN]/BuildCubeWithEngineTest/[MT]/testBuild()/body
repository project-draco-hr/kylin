{
  final String testCubeName="test_kylin_cube_without_slr_left_join_empty";
  final CubeInstance testCube=cubeManager.getCube(testCubeName);
  testCube.getSegments().clear();
  cubeManager.updateCube(testCube);
  SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
  Date date1=dateFormat.parse("2013-01-01");
  final CubeSegment cubeSegment1=cubeManager.appendSegments(testCube,0,date1.getTime());
  final CubingJobBuilder cubingJobBuilder=CubingJobBuilder.newBuilder().setJobEnginConfig(jobEngineConfig).setSegment(cubeSegment1);
  final CubingJob job=cubingJobBuilder.buildJob();
  jobService.addJob(job);
  waitForJob(job.getId());
  assertEquals(ExecutableState.SUCCEED,jobService.getOutput(job.getId()).getState());
  Date date2=dateFormat.parse("2015-01-01");
  final CubeSegment cubeSegment2=cubeManager.appendSegments(testCube,date1.getTime(),date2.getTime());
  final CubingJob job2=CubingJobBuilder.newBuilder().setJobEnginConfig(jobEngineConfig).setSegment(cubeSegment2).buildJob();
  jobService.addJob(job2);
  waitForJob(job2.getId());
  assertEquals(ExecutableState.SUCCEED,jobService.getOutput(job2.getId()).getState());
  final CubeSegment cubeSegment3=cubeManager.mergeSegments(testCube,0,date2.getTime());
  final CubingJob job3=CubingJobBuilder.newBuilder().setJobEnginConfig(jobEngineConfig).setSegment(cubeSegment3).mergeJob();
  jobService.addJob(job3);
  waitForJob(job3.getId());
  assertEquals(ExecutableState.SUCCEED,jobService.getOutput(job3.getId()).getState());
}

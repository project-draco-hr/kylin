{
  MetadataManager metaMgr=MetadataManager.getInstance(this.getTestConfig());
  File temp=File.createTempFile("temp",".csv");
  temp.createNewFile();
  for (  String tablename : TABLE_NAMES) {
    tablename=tablename.toUpperCase();
    File localBufferFile=new File(temp.getParent() + File.separator + tablename+ ".csv");
    localBufferFile.createNewFile();
    InputStream hbaseDataStream=metaMgr.getStore().getResource("/data/" + tablename + ".csv");
    FileOutputStream localFileStream=new FileOutputStream(localBufferFile);
    IOUtils.copy(hbaseDataStream,localFileStream);
    hbaseDataStream.close();
    localFileStream.close();
    this.scpFilesToHadoopCli(new String[]{localBufferFile.getPath()},this.getHadoopCliWorkingDir());
    localBufferFile.delete();
  }
  temp.delete();
  this.execHiveCommand(this.generateCreateTableHql(metaMgr.getTableDesc(TABLE_CAL_DT.toUpperCase())));
  this.execHiveCommand(this.generateCreateTableHql(metaMgr.getTableDesc(TABLE_CATEGORY_GROUPINGS.toUpperCase())));
  this.execHiveCommand(this.generateCreateTableHql(metaMgr.getTableDesc(TABLE_KYLIN_FACT.toUpperCase())));
  this.execHiveCommand(this.generateCreateTableHql(metaMgr.getTableDesc(TABLE_SELLER_TYPE_DIM.toUpperCase())));
  this.execHiveCommand(this.generateCreateTableHql(metaMgr.getTableDesc(TABLE_SITES.toUpperCase())));
  this.execHiveCommand(this.generateLoadDataHql(TABLE_CAL_DT));
  this.execHiveCommand(this.generateLoadDataHql(TABLE_CATEGORY_GROUPINGS));
  this.execHiveCommand(this.generateLoadDataHql(TABLE_KYLIN_FACT));
  this.execHiveCommand(this.generateLoadDataHql(TABLE_SELLER_TYPE_DIM));
  this.execHiveCommand(this.generateLoadDataHql(TABLE_SITES));
}

{
  this.prepareTestData("left");
  SimpleDateFormat f=new SimpleDateFormat("yyyy-MM-dd");
  f.setTimeZone(TimeZone.getTimeZone("GMT"));
  long dateStart;
  long dateEnd;
  ArrayList<String> jobs=new ArrayList<String>();
  CubeManager cubeMgr=CubeManager.getInstance(KylinConfig.getInstanceFromEnv());
  dateStart=cubeMgr.getCube("test_kylin_cube_with_slr_left_join_empty").getDescriptor().getCubePartitionDesc().getPartitionDateStart();
  dateEnd=f.parse("2050-11-12").getTime();
  jobs.addAll(this.submitJob("test_kylin_cube_with_slr_left_join_empty",dateStart,dateEnd,CubeBuildTypeEnum.BUILD));
  dateStart=cubeMgr.getCube("test_kylin_cube_without_slr_left_join_empty").getDescriptor().getCubePartitionDesc().getPartitionDateStart();
  dateEnd=f.parse("2012-06-01").getTime();
  jobs.addAll(this.submitJob("test_kylin_cube_without_slr_left_join_empty",dateStart,dateEnd,CubeBuildTypeEnum.BUILD));
  waitCubeBuilt(jobs);
  jobs.clear();
  dateStart=f.parse("2012-03-01").getTime();
  dateEnd=f.parse("2022-01-01").getTime();
  jobs.addAll(this.submitJob("test_kylin_cube_without_slr_left_join_empty",dateStart,dateEnd,CubeBuildTypeEnum.BUILD));
  waitCubeBuilt(jobs);
  jobs.clear();
  dateEnd=f.parse("2022-01-01").getTime();
  jobs.addAll(this.submitJob("test_kylin_cube_without_slr_left_join_empty",0,dateEnd,CubeBuildTypeEnum.MERGE));
  waitCubeBuilt(jobs);
}

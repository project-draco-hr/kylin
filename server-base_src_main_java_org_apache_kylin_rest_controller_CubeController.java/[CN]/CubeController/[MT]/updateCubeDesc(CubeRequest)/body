{
  CubeDesc desc=deserializeCubeDesc(cubeRequest);
  if (desc == null) {
    return cubeRequest;
  }
  String projectName=(null == cubeRequest.getProject()) ? ProjectInstance.DEFAULT_PROJECT_NAME : cubeRequest.getProject();
  try {
    CubeInstance cube=cubeService.getCubeManager().getCube(cubeRequest.getCubeName());
    if (cube == null) {
      String error="The cube named " + cubeRequest.getCubeName() + " does not exist ";
      updateRequest(cubeRequest,false,error);
      return cubeRequest;
    }
    if (!cube.getDescriptor().getName().equalsIgnoreCase(desc.getName())) {
      String error="Cube Desc renaming is not allowed: desc.getName(): " + desc.getName() + ", cubeRequest.getCubeName(): "+ cubeRequest.getCubeName();
      updateRequest(cubeRequest,false,error);
      return cubeRequest;
    }
    if (cube.getSegments().size() != 0 && !cube.getDescriptor().consistentWith(desc)) {
      String error="CubeDesc " + desc.getName() + " is inconsistent with existing. Try purge that cube first or avoid updating key cube desc fields.";
      updateRequest(cubeRequest,false,error);
      return cubeRequest;
    }
    desc=cubeService.updateCubeAndDesc(cube,desc,projectName,true);
  }
 catch (  AccessDeniedException accessDeniedException) {
    throw new ForbiddenException("You don't have right to update this cube.");
  }
catch (  Exception e) {
    logger.error("Failed to deal with the request:" + e.getLocalizedMessage(),e);
    throw new InternalErrorException("Failed to deal with the request: " + e.getLocalizedMessage());
  }
  if (!desc.getError().isEmpty()) {
    updateRequest(cubeRequest,false,Joiner.on("\n").join(desc.getError()));
    return cubeRequest;
  }
  String descData=JsonUtil.writeValueAsIndentString(desc);
  cubeRequest.setCubeDescData(descData);
  cubeRequest.setSuccessful(true);
  return cubeRequest;
}

{
  List<ProjectInstance> projects=projectController.getProjects(null,null);
  int originalProjectCount=projects.size();
  CreateProjectRequest request=new CreateProjectRequest();
  request.setName("new_project");
  ProjectInstance ret=projectController.saveProject(request);
  Assert.assertEquals(ret.getOwner(),"ADMIN");
  Assert.assertEquals(ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size(),originalProjectCount + 1);
  UpdateProjectRequest updateR=new UpdateProjectRequest();
  updateR.setFormerProjectName("new_project");
  updateR.setNewProjectName("new_project_2");
  projectController.updateProject(updateR);
  Assert.assertEquals(ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size(),originalProjectCount + 1);
  Assert.assertEquals(ProjectManager.getInstance(this.getTestConfig()).getProject("new_project"),null);
  Assert.assertNotEquals(ProjectManager.getInstance(this.getTestConfig()).getProject("new_project_2"),null);
  updateR=new UpdateProjectRequest();
  updateR.setFormerProjectName("new_project_2");
  updateR.setNewProjectName("new_project_2");
  updateR.setNewDescription("hello world");
  projectController.updateProject(updateR);
  Assert.assertEquals(ProjectManager.getInstance(this.getTestConfig()).listAllProjects().size(),originalProjectCount + 1);
  Assert.assertEquals(ProjectManager.getInstance(this.getTestConfig()).getProject("new_project"),null);
  Assert.assertNotEquals(ProjectManager.getInstance(this.getTestConfig()).getProject("new_project_2"),null);
  Assert.assertEquals(ProjectManager.getInstance(this.getTestConfig()).getProject("new_project_2").getDescription(),"hello world");
}

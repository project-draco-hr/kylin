{
  final PropertyDescriptor[] props=Introspector.getBeanInfo(clazz).getPropertyDescriptors();
  for (  PropertyDescriptor prop : props) {
    for (    String skipThis : skipThese) {
      if (skipThis.equals(prop.getName())) {
        continue;
      }
    }
    findBooleanIsMethods(clazz,prop);
    final Method getter=prop.getReadMethod();
    final Method setter=prop.getWriteMethod();
    if (getter != null && setter != null) {
      final Class<?> returnType=getter.getReturnType();
      final Class<?>[] params=setter.getParameterTypes();
      if (params.length == 1 && params[0] == returnType) {
        try {
          Object value=buildValue(returnType);
          T bean=clazz.newInstance();
          setter.invoke(bean,value);
          Assert.assertEquals(String.format("Failed while testing property %s",prop.getName()),value,getter.invoke(bean));
        }
 catch (        Exception ex) {
          ex.printStackTrace();
          System.err.println(String.format("An exception was thrown while testing the property %s: %s",prop.getName(),ex.toString()));
        }
      }
    }
  }
}

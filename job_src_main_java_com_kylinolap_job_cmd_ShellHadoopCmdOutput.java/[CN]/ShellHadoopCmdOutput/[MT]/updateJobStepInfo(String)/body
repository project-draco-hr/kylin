{
  JobDAO jobDAO=JobDAO.getInstance(config);
  JobInstance jobInstance=jobDAO.getJob(jobInstanceID);
  JobStep jobStep=jobInstance.getSteps().get(jobStepID);
  Matcher matcher=PATTERN_APP_ID.matcher(message);
  if (matcher.find()) {
    String appId=matcher.group(1);
    jobStep.putInfo(JobInstance.YARN_APP_ID,appId);
    jobDAO.updateJobInstance(jobInstance);
  }
  matcher=PATTERN_APP_URL.matcher(message);
  if (matcher.find()) {
    String appTrackingUrl=matcher.group(1);
    jobStep.putInfo(JobInstance.YARN_APP_URL,appTrackingUrl);
    jobDAO.updateJobInstance(jobInstance);
  }
  matcher=PATTERN_JOB_ID.matcher(message);
  if (matcher.find()) {
    String mrJobID=matcher.group(1);
    jobStep.putInfo(JobInstance.MR_JOB_ID,mrJobID);
    jobDAO.updateJobInstance(jobInstance);
    this.mrJobID=mrJobID;
    log.debug("Get hadoop job id " + mrJobID);
  }
  matcher=PATTERN_HDFS_BYTES_WRITTEN.matcher(message);
  if (matcher.find()) {
    String hdfsWritten=matcher.group(1);
    jobStep.putInfo(JobInstance.HDFS_BYTES_WRITTEN,hdfsWritten);
    jobDAO.updateJobInstance(jobInstance);
  }
  matcher=PATTERN_SOURCE_RECORDS_COUNT.matcher(message);
  if (matcher.find()) {
    String sourceCount=matcher.group(1);
    jobStep.putInfo(JobInstance.SOURCE_RECORDS_COUNT,sourceCount);
    jobDAO.updateJobInstance(jobInstance);
  }
  matcher=PATTERN_SOURCE_RECORDS_SIZE.matcher(message);
  if (matcher.find()) {
    String sourceSize=matcher.group(1);
    jobStep.putInfo(JobInstance.SOURCE_RECORDS_SIZE,sourceSize);
    jobDAO.updateJobInstance(jobInstance);
  }
  matcher=PATTERN_HIVE_APP_ID_URL.matcher(message);
  if (matcher.find()) {
    String jobId=matcher.group(1);
    String trackingUrl=matcher.group(2);
    jobStep.putInfo(JobInstance.MR_JOB_ID,jobId);
    jobStep.putInfo(JobInstance.YARN_APP_URL,trackingUrl);
    jobDAO.updateJobInstance(jobInstance);
  }
  matcher=PATTERN_HIVE_BYTES_WRITTEN.matcher(message);
  if (matcher.find()) {
    String hdfsWritten=matcher.group(2);
    jobStep.putInfo(JobInstance.HDFS_BYTES_WRITTEN,hdfsWritten);
    jobDAO.updateJobInstance(jobInstance);
  }
}

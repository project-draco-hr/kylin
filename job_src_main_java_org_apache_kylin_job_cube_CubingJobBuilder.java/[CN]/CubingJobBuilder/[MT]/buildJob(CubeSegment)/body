{
  checkPreconditions(seg);
  final CubingJob result=initialJob(seg,"BUILD");
  final String jobId=result.getId();
  final String cuboidRootPath=getJobWorkingDir(jobId) + "/" + seg.getCubeInstance().getName()+ "/cuboid/";
  addCubingSteps(seg,cuboidRootPath,result);
  if (this.inMemoryCubing()) {
    result.addTask(createUpdateCubeInfoAfterBuildStep(seg,jobId));
  }
 else {
    addHTableSteps(seg,cuboidRootPath,result);
    result.addTask(createUpdateCubeInfoAfterBuildStep(seg,jobId));
  }
  final CubeJoinedFlatTableDesc intermediateTableDesc=new CubeJoinedFlatTableDesc(seg.getCubeDesc(),seg);
  final String hiveIntermediateTable=this.getIntermediateHiveTableName(intermediateTableDesc,jobId);
  result.addTask(createGarbageCollectionStep(seg,null,hiveIntermediateTable));
  return result;
}

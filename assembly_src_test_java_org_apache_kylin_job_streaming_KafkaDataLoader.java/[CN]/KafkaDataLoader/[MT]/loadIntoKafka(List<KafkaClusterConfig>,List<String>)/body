{
  KafkaClusterConfig clusterConfig=kafkaClusterConfigs.get(0);
  String brokerList=StringUtils.join(Collections2.transform(clusterConfig.getBrokerConfigs(),new Function<BrokerConfig,String>(){
    @Nullable @Override public String apply(    BrokerConfig brokerConfig){
      return brokerConfig.getHost() + ":" + brokerConfig.getPort();
    }
  }
),",");
  Properties props=new Properties();
  props.put("metadata.broker.list",brokerList);
  props.put("serializer.class","kafka.serializer.StringEncoder");
  props.put("request.required.acks","1");
  props.put("retry.backoff.ms",1000);
  ProducerConfig config=new ProducerConfig(props);
  Producer<String,String> producer=new Producer<String,String>(config);
  List<KeyedMessage<String,String>> keyedMessages=Lists.newArrayList();
  for (int i=0; i < messages.size(); ++i) {
    KeyedMessage<String,String> keyedMessage=new KeyedMessage<String,String>(clusterConfig.getTopic(),String.valueOf(i),messages.get(i));
    keyedMessages.add(keyedMessage);
  }
  producer.send(keyedMessages);
  producer.close();
}

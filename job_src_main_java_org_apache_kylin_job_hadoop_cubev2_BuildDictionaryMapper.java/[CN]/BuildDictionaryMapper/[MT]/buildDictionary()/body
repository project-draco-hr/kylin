{
  Map<Integer,DictionaryInfo> dictionaryMap=Maps.newHashMap();
  for (int i=0; i < intermediateTableDesc.getRowKeyColumnIndexes().length; i++) {
    if (cubeDesc.getRowkey().isUseDictionary(i)) {
      TblColRef col=cubeDesc.getRowkey().getRowKeyColumns()[i].getColRef();
      Dictionary dict=DictionaryGenerator.buildDictionaryFromValueList(col.getType(),Collections2.transform(columnDistinctValueMap.get(i),new Function<String,byte[]>(){
        @Nullable @Override public byte[] apply(        String input){
          return input.getBytes();
        }
      }
));
      logger.info("Building dictionary for " + col);
      DictionaryInfo dictInfo=new DictionaryInfo(col.getTable(),col.getName(),0,col.getDatatype(),null,"");
      dictInfo.setDictionaryObject(dict);
      dictInfo.setDictionaryClass(dict.getClass().getName());
      dictionaryMap.put(i,dictInfo);
    }
  }
  return dictionaryMap;
}

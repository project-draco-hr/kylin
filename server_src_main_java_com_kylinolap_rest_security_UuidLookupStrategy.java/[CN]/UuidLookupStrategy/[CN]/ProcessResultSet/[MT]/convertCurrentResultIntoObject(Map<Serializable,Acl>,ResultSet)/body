{
  Long id=Long.valueOf(rs.getLong("acl_id"));
  Acl acl=acls.get(id);
  if (acl == null) {
    ObjectIdentity objectIdentity=new ObjectIdentityImpl(rs.getString("class"),rs.getString("object_id_identity"));
    Acl parentAcl=null;
    long parentAclId=rs.getLong("parent_object");
    if (parentAclId != 0) {
      parentAcl=new StubAclParent(Long.valueOf(parentAclId));
    }
    boolean entriesInheriting=rs.getBoolean("entries_inheriting");
    Sid owner;
    if (rs.getBoolean("acl_principal")) {
      owner=new PrincipalSid(rs.getString("acl_sid"));
    }
 else {
      owner=new GrantedAuthoritySid(rs.getString("acl_sid"));
    }
    acl=new AclImpl(objectIdentity,id,aclAuthorizationStrategy,grantingStrategy,parentAcl,null,entriesInheriting,owner);
    acls.put(id,acl);
  }
  if (rs.getString("ace_sid") != null) {
    Long aceId=Long.valueOf(rs.getLong("ace_id"));
    Sid recipient;
    if (rs.getBoolean("ace_principal")) {
      recipient=new PrincipalSid(rs.getString("ace_sid"));
    }
 else {
      recipient=new GrantedAuthoritySid(rs.getString("ace_sid"));
    }
    int mask=rs.getInt("mask");
    Permission permission=permissionFactory.buildFromMask(mask);
    boolean granting=rs.getBoolean("granting");
    boolean auditSuccess=rs.getBoolean("audit_success");
    boolean auditFailure=rs.getBoolean("audit_failure");
    AccessControlEntryImpl ace=new AccessControlEntryImpl(aceId,acl,recipient,permission,granting,auditSuccess,auditFailure);
    List<AccessControlEntryImpl> aces=readAces((AclImpl)acl);
    if (!aces.contains(ace)) {
      aces.add(ace);
    }
  }
}

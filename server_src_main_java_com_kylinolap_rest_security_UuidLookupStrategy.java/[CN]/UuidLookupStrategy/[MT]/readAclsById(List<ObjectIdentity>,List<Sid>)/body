{
  Assert.isTrue(batchSize >= 1,"BatchSize must be >= 1");
  Assert.notEmpty(objects,"Objects to lookup required");
  Map<ObjectIdentity,Acl> result=new HashMap<ObjectIdentity,Acl>();
  Set<ObjectIdentity> currentBatchToLoad=new HashSet<ObjectIdentity>();
  for (int i=0; i < objects.size(); i++) {
    final ObjectIdentity oid=objects.get(i);
    boolean aclFound=false;
    if (result.containsKey(oid)) {
      aclFound=true;
    }
    if (!aclFound) {
      Acl acl=aclCache.getFromCache(oid);
      if (acl != null) {
        if (acl.isSidLoaded(sids)) {
          result.put(acl.getObjectIdentity(),acl);
          aclFound=true;
        }
 else {
          throw new IllegalStateException("Error: SID-filtered element detected when implementation does not perform SID filtering " + "- have you added something to the cache manually?");
        }
      }
    }
    if (!aclFound) {
      currentBatchToLoad.add(oid);
    }
    if ((currentBatchToLoad.size() == this.batchSize) || ((i + 1) == objects.size())) {
      if (currentBatchToLoad.size() > 0) {
        Map<ObjectIdentity,Acl> loadedBatch=lookupObjectIdentities(currentBatchToLoad,sids);
        result.putAll(loadedBatch);
        for (        Acl loadedAcl : loadedBatch.values()) {
          aclCache.putInCache((AclImpl)loadedAcl);
        }
        currentBatchToLoad.clear();
      }
    }
  }
  return result;
}

{
  if (delta == 0)   return true;
  ConsumerEntry entry=booking.get(consumer);
  if (entry == null) {
    if (delta <= 0)     return true;
    entry=new ConsumerEntry(consumer);
    booking.put(consumer,entry);
  }
  if (delta > 0) {
    int gap=delta - (totalBudgetMB - totalReservedMB);
    if (gap > 0)     return false;
  }
  totalReservedMB+=delta;
  entry.reservedMB+=delta;
  if (entry.reservedMB == 0) {
    booking.remove(entry.consumer);
  }
  if (debug) {
    logger.debug(entry.consumer + " reserved " + entry.reservedMB+ " MB, total reserved "+ totalReservedMB+ " MB, remaining budget "+ getRemainingBudgetMB()+ " MB");
  }
  if (delta < 0) {
synchronized (lock) {
      lock.notifyAll();
    }
  }
  return true;
}

{
  return new MeasureIngester<TopNCounter>(){
    @Override public TopNCounter valueOf(    String[] values,    MeasureDesc measureDesc,    Map<TblColRef,Dictionary<String>> dictionaryMap){
      if (values.length != 2)       throw new IllegalArgumentException();
      double counter=values[0] == null ? 0 : Double.parseDouble(values[0]);
      String literal=values[1];
      TblColRef literalCol=measureDesc.getFunction().getTopNLiteralColumn();
      Dictionary<String> dictionary=dictionaryMap.get(literalCol);
      int keyEncodedValue=dictionary.getIdFromValue(literal);
      ByteArray key=new ByteArray(dictionary.getSizeOfId());
      BytesUtil.writeUnsigned(keyEncodedValue,key.array(),0,dictionary.getSizeOfId());
      TopNCounter<ByteArray> topNCounter=new TopNCounter<ByteArray>(dataType.getPrecision() * TopNCounter.EXTRA_SPACE_RATE);
      topNCounter.offer(key,counter);
      return topNCounter;
    }
    @SuppressWarnings("unchecked") @Override public TopNCounter reEncodeDictionary(    TopNCounter value,    MeasureDesc measureDesc,    Map<TblColRef,Dictionary<String>> oldDicts,    Map<TblColRef,Dictionary<String>> newDicts){
      TopNCounter<ByteArray> topNCounter=(TopNCounter<ByteArray>)value;
      TblColRef colRef=measureDesc.getFunction().getTopNLiteralColumn();
      Dictionary<String> sourceDict=oldDicts.get(colRef);
      Dictionary<String> mergedDict=newDicts.get(colRef);
      int topNSize=topNCounter.size();
      byte[] newIdBuf=new byte[topNSize * mergedDict.getSizeOfId()];
      byte[] literal=new byte[sourceDict.getSizeOfValue()];
      int bufOffset=0;
      for (      Counter<ByteArray> c : topNCounter) {
        int oldId=BytesUtil.readUnsigned(c.getItem().array(),c.getItem().offset(),c.getItem().length());
        int newId;
        int size=sourceDict.getValueBytesFromId(oldId,literal,0);
        if (size < 0) {
          newId=mergedDict.nullId();
        }
 else {
          newId=mergedDict.getIdFromValueBytes(literal,0,size);
        }
        BytesUtil.writeUnsigned(newId,newIdBuf,bufOffset,mergedDict.getSizeOfId());
        c.getItem().set(newIdBuf,bufOffset,mergedDict.getSizeOfId());
        bufOffset+=mergedDict.getSizeOfId();
      }
      return value;
    }
  }
;
}

{
  Collection<TblColRef> dimensionColumns=CubeDimensionDeriver.getDimensionColumns(digest);
  Collection<FunctionDesc> functions=digest.aggregations;
  Collection<TblColRef> metricsColumns=digest.metricColumns;
  Collection<JoinDesc> joins=digest.joinDescs;
  boolean hasTopN=hasTopNMeasure(cube.getDescriptor());
  boolean isOnline=cube.isReady();
  boolean matchDimensions=isMatchedWithDimensions(dimensionColumns,cube);
  boolean matchAggregation=isMatchedWithAggregations(functions,cube);
  boolean matchJoin=isMatchedWithJoins(joins,cube);
  if (allowWeakMatch && isOnline && matchDimensions&& !matchAggregation&& matchJoin) {
    if (isWeaklyMatchedWithAggregations(functions,metricsColumns,cube)) {
      logger.info("Weakly matched cube found " + cube.getName());
      return true;
    }
  }
  if (hasTopN & matchJoin && !matchDimensions && functions.size() == 1) {
    boolean matchedTopN=isMatchedWithTopN(dimensionColumns,cube,digest);
    matchDimensions=matchedTopN;
    matchAggregation=matchedTopN;
  }
  if (!isOnline || !matchDimensions || !matchAggregation|| !matchJoin) {
    logger.info("Exclude cube " + cube.getName() + " because "+ " isOnlne="+ isOnline+ ",matchDimensions="+ matchDimensions+ ",matchAggregation="+ matchAggregation+ ",matchJoin="+ matchJoin);
    return false;
  }
  return true;
}

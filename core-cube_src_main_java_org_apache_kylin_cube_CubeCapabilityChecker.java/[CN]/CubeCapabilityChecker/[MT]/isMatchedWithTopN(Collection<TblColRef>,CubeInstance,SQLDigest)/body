{
  CubeDesc cubeDesc=cube.getDescriptor();
  Collection<FunctionDesc> functions=digest.aggregations;
  FunctionDesc onlyFunction=functions.iterator().next();
  if (onlyFunction.isSum() == false) {
    return false;
  }
  Collection<TblColRef> dimensionColumnsCopy=new ArrayList<TblColRef>(dimensionColumns);
  for (  MeasureDesc measure : cubeDesc.getMeasures()) {
    if (measure.getFunction().isTopN()) {
      List<TblColRef> cols=measure.getFunction().getParameter().getColRefs();
      TblColRef displayCol=cols.get(cols.size() - 1);
      if (digest.groupbyColumns.contains(displayCol)) {
        dimensionColumnsCopy.remove(displayCol);
        if (isMatchedWithDimensions(dimensionColumnsCopy,cube)) {
          if (measure.getFunction().isCompatible(onlyFunction)) {
            return true;
          }
        }
        dimensionColumnsCopy.add(displayCol);
      }
    }
  }
  return false;
}

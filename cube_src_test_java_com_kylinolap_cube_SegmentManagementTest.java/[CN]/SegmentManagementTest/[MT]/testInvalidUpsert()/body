{
  CubeDescManager cubeDescMgr=getCubeDescManager();
  CubeDesc desc=cubeDescMgr.getCubeDesc("test_kylin_cube_without_slr_left_join_desc");
  createNewCube(desc);
  SimpleDateFormat f=new SimpleDateFormat("yyyy-MM-dd");
  f.setTimeZone(TimeZone.getTimeZone("GMT"));
  long dateEnd=f.parse("2013-11-12").getTime();
  CubeInstance cubeInstance=cubeMgr.getCube("a_whole_new_cube");
  assertEquals(RealizationStatusEnum.DISABLED,cubeInstance.getStatus());
  assertEquals(0,cubeInstance.getSegments().size());
  assertEquals(0,cubeInstance.getBuildingSegments().size());
  assertEquals(0,cubeInstance.getAllocatedEndDate());
  System.out.println("Initial Build");
  CubeSegment initialSegment=cubeMgr.allocateSegments(cubeInstance,RealizationBuildTypeEnum.BUILD,desc.getCubePartitionDesc().getPartitionDateStart(),dateEnd).get(0);
  System.out.println(JsonUtil.writeValueAsIndentString(cubeInstance));
  assertEquals(RealizationStatusEnum.DISABLED,cubeInstance.getStatus());
  for (  CubeSegment cubeSegment : cubeInstance.getBuildingSegments()) {
    assertEquals(SegmentStatusEnum.NEW,cubeSegment.getStatus());
  }
  assertEquals(1,cubeInstance.getSegments().size());
  assertEquals(1,cubeInstance.getBuildingSegments().size());
  assertEquals(0,cubeInstance.getRebuildingSegments().size());
  assertTrue("".equals(initialSegment.getStorageLocationIdentifier()) == false);
  assertEquals(desc.getCubePartitionDesc().getPartitionDateStart(),cubeInstance.getAllocatedStartDate());
  assertEquals(dateEnd,cubeInstance.getAllocatedEndDate());
  System.out.println("Initial Build Success");
  cubeMgr.updateSegmentOnJobSucceed(cubeInstance,RealizationBuildTypeEnum.BUILD,initialSegment.getName(),"job_1",System.currentTimeMillis(),111L,222L,333L);
  System.out.println(JsonUtil.writeValueAsIndentString(cubeInstance));
  assertEquals(RealizationStatusEnum.READY,cubeInstance.getStatus());
  assertEquals(1,cubeInstance.getSegments(SegmentStatusEnum.READY).size());
  assertEquals(0,cubeInstance.getBuildingSegments().size());
  assertEquals(desc.getCubePartitionDesc().getPartitionDateStart(),cubeInstance.getAllocatedStartDate());
  assertEquals(dateEnd,cubeInstance.getAllocatedEndDate());
  System.out.println("Upsert Build");
  long start=f.parse("2013-11-13").getTime();
  long dateEnd2=f.parse("2013-12-12").getTime();
  cubeMgr.allocateSegments(cubeInstance,RealizationBuildTypeEnum.BUILD,start,dateEnd2);
}

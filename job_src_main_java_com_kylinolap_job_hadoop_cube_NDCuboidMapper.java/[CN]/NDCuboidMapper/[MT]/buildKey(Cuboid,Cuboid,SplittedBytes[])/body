{
  int offset=0;
  System.arraycopy(childCuboid.getBytes(),0,keyBuf,offset,childCuboid.getBytes().length);
  offset+=childCuboid.getBytes().length;
  long mask=Long.highestOneBit(parentCuboid.getId());
  long parentCuboidId=parentCuboid.getId();
  long childCuboidId=childCuboid.getId();
  long parentCuboidIdActualLength=Long.SIZE - Long.numberOfLeadingZeros(parentCuboid.getId());
  int index=1;
  for (int i=0; i < parentCuboidIdActualLength; i++) {
    if ((mask & parentCuboidId) > 0) {
      if ((mask & childCuboidId) > 0) {
        System.arraycopy(splitBuffers[index].value,0,keyBuf,offset,splitBuffers[index].length);
        offset+=splitBuffers[index].length;
      }
      index++;
    }
    mask=mask >> 1;
  }
  return offset;
}

{
  if (server != null) {
    throw new IllegalStateException("Web server is already running.");
  }
  tmpDir=new File("tomcat");
  server=new Tomcat();
  if (httpsPort > 0) {
    Connector httpsConnector=new Connector();
    httpsConnector.setPort(httpsPort);
    httpsConnector.setSecure(true);
    httpsConnector.setScheme("https");
    httpsConnector.setAttribute("keystoreFile",keystoreFile);
    httpsConnector.setAttribute("keystorePass",keystorePass);
    httpsConnector.setAttribute("clientAuth","false");
    httpsConnector.setAttribute("sslProtocol","TLS");
    httpsConnector.setAttribute("SSLEnabled",true);
    server.getService().addConnector(httpsConnector);
  }
  server.setPort(httpPort);
  server.setBaseDir(tmpDir.getCanonicalPath());
  boolean loadJSP=getClass().getResource("/javax/servlet/jsp/resources/jsp_2_0.xsd") != null;
  Host host=server.getHost();
  if (host instanceof StandardHost) {
    ((StandardHost)host).setErrorReportValveClass(MinimalErrorReportValve.class.getCanonicalName());
  }
  LifecycleListener minListener=loadJSP ? null : new MinimalLifecycleListener();
  for (  String contextPath : contexts.keySet()) {
    String warPath=contexts.get(contextPath);
    if (warPath == null || warPath.isEmpty()) {
      continue;
    }
    if (loadJSP) {
      server.addWebapp(contextPath,warPath);
    }
 else {
      final StandardContext cx=new StandardContext();
      cx.setName(contextPath);
      cx.setPath(contextPath);
      cx.setDocBase(warPath);
      cx.setUnpackWAR(true);
      cx.setProcessTlds(false);
      cx.addLifecycleListener(minListener);
      ContextConfig config=new MinimalContextConfig(cx);
      cx.addLifecycleListener(config);
      config.setDefaultWebXml(server.noDefaultWebXmlPath());
      host.addChild(cx);
    }
  }
  server.start();
}

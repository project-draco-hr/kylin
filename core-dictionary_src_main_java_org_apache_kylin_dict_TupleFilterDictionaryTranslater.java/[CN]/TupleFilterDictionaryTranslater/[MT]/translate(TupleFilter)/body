{
  TupleFilter translated=tupleFilter;
  if (tupleFilter instanceof CompareTupleFilter) {
    logger.info("Translation to IN clause: " + tupleFilter);
    translated=translateCompareTupleFilter((CompareTupleFilter)tupleFilter);
    logger.info(translated == null ? "Failed, will use Calcite to handle computed comparison." : "Succeed: " + translated);
  }
 else   if (tupleFilter instanceof FunctionTupleFilter) {
    logger.info("Translation to IN clause: " + tupleFilter);
    translated=translateFunctionTupleFilter((FunctionTupleFilter)tupleFilter);
    logger.info(translated == null ? "Failed, will use Calcite to handle computed column." : "Succeed: " + translated);
  }
 else   if (tupleFilter instanceof LogicalTupleFilter) {
    logger.info("Translation to IN clause: " + tupleFilter);
    ListIterator<TupleFilter> childIterator=(ListIterator<TupleFilter>)tupleFilter.getChildren().listIterator();
    while (childIterator.hasNext()) {
      TupleFilter tempTranslated=translate(childIterator.next());
      if (tempTranslated != null)       childIterator.set(tempTranslated);
    }
    logger.info(translated == null ? "Failed, will use Calcite to handle computed column." : "Succeed: " + translated);
  }
  return translated == null ? tupleFilter : translated;
}

{
  final List<TblColRef> columnsNeedToBuildDictionary=cubeInstance.getDescriptor().listDimensionColumnsExcludingDerived();
  final HashMap<Integer,TblColRef> tblColRefMap=Maps.newHashMap();
  int index=0;
  for (  TblColRef column : columnsNeedToBuildDictionary) {
    tblColRefMap.put(index++,column);
  }
  HashMap<TblColRef,Dictionary<?>> result=Maps.newHashMap();
  HashMultimap<TblColRef,String> valueMap=HashMultimap.create();
  for (  List<String> row : recordList) {
    for (int i=0; i < row.size(); i++) {
      String cell=row.get(i);
      if (tblColRefMap.containsKey(i)) {
        valueMap.put(tblColRefMap.get(i),cell);
      }
    }
  }
  for (  TblColRef tblColRef : valueMap.keySet()) {
    final Collection<byte[]> bytes=Collections2.transform(valueMap.get(tblColRef),new Function<String,byte[]>(){
      @Nullable @Override public byte[] apply(      String input){
        return input == null ? null : input.getBytes();
      }
    }
);
    final Dictionary<?> dict=DictionaryGenerator.buildDictionaryFromValueEnumerator(tblColRef.getType(),new IterableDictionaryValueEnumerator(bytes));
    result.put(tblColRef,dict);
  }
  return result;
}

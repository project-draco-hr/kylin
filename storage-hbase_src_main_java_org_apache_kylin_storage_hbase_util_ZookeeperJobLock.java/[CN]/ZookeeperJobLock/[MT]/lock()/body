{
  this.scheduleID=schedulerId();
  String zkConnectString=getZKConnectString();
  logger.info("zk connection string:" + zkConnectString);
  logger.info("schedulerId:" + scheduleID);
  if (StringUtils.isEmpty(zkConnectString)) {
    throw new IllegalArgumentException("ZOOKEEPER_QUORUM is empty!");
  }
  RetryPolicy retryPolicy=new ExponentialBackoffRetry(1000,3);
  this.zkClient=CuratorFrameworkFactory.newClient(zkConnectString,retryPolicy);
  this.zkClient.start();
  this.sharedLock=new InterProcessMutex(zkClient,this.scheduleID);
  boolean hasLock=false;
  try {
    hasLock=sharedLock.acquire(3,TimeUnit.SECONDS);
  }
 catch (  Exception e) {
    logger.warn("error acquire lock",e);
  }
  if (!hasLock) {
    logger.warn("fail to acquire lock, scheduler has not been started");
    zkClient.close();
    return false;
  }
  return true;
}

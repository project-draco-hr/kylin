{
  if (context.isCoprocessorEnabled() == false) {
    return table.getScanner(scan);
  }
  ObserverRowType type=ObserverRowType.fromCuboid(segment,cuboid);
  CoprocessorFilter filter=CoprocessorFilter.fromFilter(segment,tupleFiler);
  ObserverProjector projector=ObserverProjector.fromColumns(segment,cuboid,groupBy);
  ObserverAggregators aggrs=ObserverAggregators.fromValueDecoders(rowValueDecoders);
  if (DEBUG_LOCAL_COPROCESSOR) {
    RegionScanner innerScanner=new RegionScannerAdapter(table.getScanner(scan));
    AggregationScanner aggrScanner=new AggregationScanner(type,filter,projector,aggrs,innerScanner);
    return new ResultScannerAdapter(aggrScanner);
  }
 else {
    scan.setAttribute(AggregateRegionObserver.COPROCESSOR_ENABLE,new byte[]{0x01});
    scan.setAttribute(AggregateRegionObserver.TYPE,ObserverRowType.serialize(type));
    scan.setAttribute(AggregateRegionObserver.PROJECTOR,ObserverProjector.serialize(projector));
    scan.setAttribute(AggregateRegionObserver.AGGREGATORS,ObserverAggregators.serialize(aggrs));
    scan.setAttribute(AggregateRegionObserver.FILTER,CoprocessorFilter.serialize(filter));
    return table.getScanner(scan);
  }
}

{
  RowKeyEncoder rowkeyEncoder=rowKeyEncoderProvider.getRowkeyEncoder(childCuboid);
  int offset=0;
  long mask=Long.highestOneBit(parentCuboid.getId());
  long parentCuboidId=parentCuboid.getId();
  long childCuboidId=childCuboid.getId();
  long parentCuboidIdActualLength=Long.SIZE - Long.numberOfLeadingZeros(parentCuboid.getId());
  int index=rowKeySplitter.getBodySplitOffset();
  for (int i=0; i < parentCuboidIdActualLength; i++) {
    if ((mask & parentCuboidId) > 0) {
      if ((mask & childCuboidId) > 0) {
        System.arraycopy(splitBuffers[index].value,0,newKeyBodyBuf,offset,splitBuffers[index].length);
        offset+=splitBuffers[index].length;
      }
      index++;
    }
    mask=mask >> 1;
  }
  int fullKeySize=rowkeyEncoder.getBytesLength();
  while (newKeyBuf.array().length < fullKeySize) {
    newKeyBuf.set(new byte[newKeyBuf.length() * 2]);
  }
  newKeyBuf.set(0,fullKeySize);
  rowkeyEncoder.encode(new ByteArray(newKeyBodyBuf,0,offset),newKeyBuf);
  return fullKeySize;
}

{
  Builder builder=GTInfo.builder();
  builder.setCodeSystem(new GTSampleCodeSystem());
  DataType tint=DataType.getType("int4");
  DataType tlong=DataType.getType("long8");
  DataType thllc=DataType.getType("hllc(12)");
  builder.setColumns(tint,tint,tint,tint,tint,tlong,thllc);
  builder.setPrimaryKey(ImmutableBitSet.valueOf(0,1,2,3,4));
  info=builder.build();
  gen=new SortedGTRecordGenerator(info);
  gen.addDimension(10,4,null);
  gen.addDimension(10,4,null);
  gen.addDimension(10,4,null);
  gen.addDimension(10,4,null);
  gen.addDimension(100,4,null);
  gen.addMeasure(8);
  gen.addMeasure(8,new Randomizer(){
    HyperLogLogPlusCounter hllc=new HyperLogLogPlusCounter(12);
    @Override public int fillRandom(    Random rand,    byte[] array,    int offset){
      try {
        hllc.clear();
        hllc.add(rand.nextInt());
        ByteBuffer wrap=ByteBuffer.wrap(array,offset,array.length - offset);
        hllc.writeRegisters(wrap);
        return wrap.position() - offset;
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  long t=System.currentTimeMillis();
  testGenerate();
  genTime=System.currentTimeMillis() - t;
}

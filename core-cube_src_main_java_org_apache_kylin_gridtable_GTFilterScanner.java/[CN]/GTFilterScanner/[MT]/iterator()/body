{
  return new Iterator<GTRecord>(){
    private Iterator<GTRecord> inputIterator=inputScanner.iterator();
    private IFilterCodeSystem<ByteArray> filterCodeSystem=GTUtil.wrap(getInfo().codeSystem.getComparator());
    @Override public boolean hasNext(){
      if (next != null)       return true;
      while (inputIterator.hasNext()) {
        next=inputIterator.next();
        if (filter != null && filter.evaluate(oneTuple,filterCodeSystem) == false) {
          continue;
        }
        return true;
      }
      next=null;
      return false;
    }
    @Override public GTRecord next(){
      if (next == null) {
        hasNext();
        if (next == null)         throw new NoSuchElementException();
      }
      GTRecord result=next;
      next=null;
      return result;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}

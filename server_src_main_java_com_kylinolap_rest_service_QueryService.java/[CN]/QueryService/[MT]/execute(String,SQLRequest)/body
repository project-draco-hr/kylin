{
  Connection conn=null;
  Statement stat=null;
  ResultSet resultSet=null;
  List<List<String>> results=new LinkedList<List<String>>();
  List<SelectedColumnMeta> columnMetas=new LinkedList<SelectedColumnMeta>();
  try {
    conn=getOLAPDataSource(sqlRequest.getProject()).getConnection();
    if (sqlRequest instanceof PrepareSqlRequest) {
      PreparedStatement preparedState=conn.prepareStatement(sql);
      for (int i=0; i < ((PrepareSqlRequest)sqlRequest).getParams().length; i++) {
        setParam(preparedState,i + 1,((PrepareSqlRequest)sqlRequest).getParams()[i]);
      }
      resultSet=preparedState.executeQuery();
    }
 else {
      stat=conn.createStatement();
      resultSet=stat.executeQuery(sql);
    }
    ResultSetMetaData metaData=resultSet.getMetaData();
    int columnCount=metaData.getColumnCount();
    for (int i=1; i <= columnCount; ++i) {
      columnMetas.add(new SelectedColumnMeta(metaData.isAutoIncrement(i),metaData.isCaseSensitive(i),metaData.isSearchable(i),metaData.isCurrency(i),metaData.isNullable(i),metaData.isSigned(i),metaData.getColumnDisplaySize(i),metaData.getColumnLabel(i),metaData.getColumnName(i),metaData.getSchemaName(i),metaData.getCatalogName(i),metaData.getTableName(i),metaData.getPrecision(i),metaData.getScale(i),metaData.getColumnType(i),metaData.getColumnTypeName(i),metaData.isReadOnly(i),metaData.isWritable(i),metaData.isDefinitelyWritable(i)));
    }
    List<String> oneRow=new LinkedList<String>();
    while (resultSet.next()) {
      for (int i=0; i < columnCount; i++) {
        oneRow.add((resultSet.getString(i + 1)));
      }
      results.add(new LinkedList<String>(oneRow));
      oneRow.clear();
    }
  }
 catch (  Exception e) {
    logger.error(e.getLocalizedMessage(),e);
    throw e;
  }
 finally {
    close(resultSet,stat,conn);
  }
  boolean isPartialResult=false;
  String cube="";
  long totalScanCount=0;
  for (  OLAPContext ctx : OLAPContext.getThreadLocalContexts()) {
    isPartialResult|=ctx.storageContext.isPartialResultReturned();
    cube=ctx.cubeInstance.getName();
    totalScanCount+=ctx.storageContext.getTotalScanCount();
  }
  SQLResponse response=new SQLResponse(columnMetas,results,cube,0,false,null,isPartialResult);
  response.setTotalScanCount(totalScanCount);
  return response;
}

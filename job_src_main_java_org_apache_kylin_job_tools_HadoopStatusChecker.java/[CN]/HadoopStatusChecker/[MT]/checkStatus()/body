{
  if (null == mrJobID) {
    this.output.append("Skip status check with empty job id..\n");
    return JobStepStatusEnum.WAITING;
  }
  JobStepStatusEnum status=null;
  try {
    final Pair<RMAppState,FinalApplicationStatus> result=new HadoopStatusGetter(yarnUrl,mrJobID).get();
    logger.debug("State of Hadoop job: " + mrJobID + ":"+ result.getLeft()+ "-"+ result.getRight());
    output.append(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S").format(new Date()) + " - State of Hadoop job: " + mrJobID+ ":"+ result.getLeft()+ " - "+ result.getRight()+ "\n");
switch (result.getRight()) {
case SUCCEEDED:
      status=JobStepStatusEnum.FINISHED;
    break;
case FAILED:
  status=JobStepStatusEnum.ERROR;
break;
case KILLED:
status=JobStepStatusEnum.ERROR;
break;
case UNDEFINED:
switch (result.getLeft()) {
case NEW:
case NEW_SAVING:
case SUBMITTED:
case ACCEPTED:
status=JobStepStatusEnum.WAITING;
break;
case RUNNING:
status=JobStepStatusEnum.RUNNING;
break;
case FINAL_SAVING:
case FINISHING:
case FINISHED:
case FAILED:
case KILLING:
case KILLED:
}
break;
}
}
 catch (Exception e) {
logger.error("error check status",e);
output.append("Exception: " + e.getLocalizedMessage() + "\n");
status=JobStepStatusEnum.ERROR;
}
return status;
}

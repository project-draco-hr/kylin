{
  SQLRequest sqlRequest=new SQLRequest();
  sqlRequest.setSql("select * from TEST_KYLIN_FACT");
  sqlRequest.setProject("default");
  SQLResponse sqlResponse=new SQLResponse();
  sqlResponse.setDuration(10);
  sqlResponse.setCube("test_cube");
  sqlResponse.setIsException(false);
  sqlResponse.setTotalScanCount(100);
  List<String> list1=new ArrayList<>();
  list1.add("111");
  list1.add("112");
  List<String> list2=new ArrayList<>();
  list2.add("111");
  list2.add("112");
  List<List<String>> results=new ArrayList<>();
  results.add(list1);
  results.add(list2);
  sqlResponse.setResults(results);
  sqlResponse.setStorageCacheUsed(true);
  QueryMetricsUtil.updateMetrics(sqlRequest,sqlResponse,metricsMap);
  Thread.sleep(2000);
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"QueryCount"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"QuerySuccessCount"));
  Assert.assertEquals(0L,mBeanServer.getAttribute(objectName,"QueryFailCount"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"CacheHitCount"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"ScanRowCountNumOps"));
  Assert.assertEquals(100.0,mBeanServer.getAttribute(objectName,"ScanRowCountAvgTime"));
  Assert.assertEquals(100.0,mBeanServer.getAttribute(objectName,"ScanRowCountMaxTime"));
  Assert.assertEquals(100.0,mBeanServer.getAttribute(objectName,"ScanRowCountMinTime"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"ResultRowCountNumOps"));
  Assert.assertEquals(2.0,mBeanServer.getAttribute(objectName,"ResultRowCountMaxTime"));
  Assert.assertEquals(2.0,mBeanServer.getAttribute(objectName,"ResultRowCountAvgTime"));
  Assert.assertEquals(2.0,mBeanServer.getAttribute(objectName,"ResultRowCountMinTime"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"QueryLatencyNumOps"));
  Assert.assertEquals(10.0,mBeanServer.getAttribute(objectName,"QueryLatencyMaxTime"));
  Assert.assertEquals(10.0,mBeanServer.getAttribute(objectName,"QueryLatencyAvgTime"));
  Assert.assertEquals(10.0,mBeanServer.getAttribute(objectName,"QueryLatencyMinTime"));
  SQLResponse sqlResponse2=new SQLResponse();
  sqlResponse2.setDuration(10);
  sqlResponse2.setCube("test_cube");
  sqlResponse2.setIsException(true);
  QueryMetricsUtil.updateMetrics(sqlRequest,sqlResponse2,metricsMap);
  Thread.sleep(2000);
  Assert.assertEquals(2L,mBeanServer.getAttribute(objectName,"QueryCount"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"QuerySuccessCount"));
  Assert.assertEquals(1L,mBeanServer.getAttribute(objectName,"QueryFailCount"));
}
